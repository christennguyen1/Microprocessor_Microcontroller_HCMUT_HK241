
Assignment.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003a94  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000070  08003ba0  08003ba0  00013ba0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003c10  08003c10  000200c8  2**0
                  CONTENTS
  4 .ARM          00000000  08003c10  08003c10  000200c8  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003c10  08003c10  000200c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003c10  08003c10  00013c10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003c14  08003c14  00013c14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000c8  20000000  08003c18  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000160  200000c8  08003ce0  000200c8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000228  08003ce0  00020228  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200c8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00010034  00000000  00000000  000200f1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000268b  00000000  00000000  00030125  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000d98  00000000  00000000  000327b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000c50  00000000  00000000  00033548  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018eba  00000000  00000000  00034198  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00011835  00000000  00000000  0004d052  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008b3d7  00000000  00000000  0005e887  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000e9c5e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003a64  00000000  00000000  000e9cb4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	200000c8 	.word	0x200000c8
 8000128:	00000000 	.word	0x00000000
 800012c:	08003b88 	.word	0x08003b88

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	200000cc 	.word	0x200000cc
 8000148:	08003b88 	.word	0x08003b88

0800014c <isButton1Pressed>:
int button1_pressed[NUM_BUTTONS] = {0};
int button1_long_pressed[NUM_BUTTONS] = {0};
int button1_flag[NUM_BUTTONS] = {0};


int isButton1Pressed(int index){
 800014c:	b480      	push	{r7}
 800014e:	b083      	sub	sp, #12
 8000150:	af00      	add	r7, sp, #0
 8000152:	6078      	str	r0, [r7, #4]
	if(index >= NUM_BUTTONS) return 0;
 8000154:	687b      	ldr	r3, [r7, #4]
 8000156:	2b02      	cmp	r3, #2
 8000158:	dd01      	ble.n	800015e <isButton1Pressed+0x12>
 800015a:	2300      	movs	r3, #0
 800015c:	e00d      	b.n	800017a <isButton1Pressed+0x2e>
	if(button1_flag[index] == 1){
 800015e:	4a09      	ldr	r2, [pc, #36]	; (8000184 <isButton1Pressed+0x38>)
 8000160:	687b      	ldr	r3, [r7, #4]
 8000162:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000166:	2b01      	cmp	r3, #1
 8000168:	d106      	bne.n	8000178 <isButton1Pressed+0x2c>
		button1_flag[index] = 0;
 800016a:	4a06      	ldr	r2, [pc, #24]	; (8000184 <isButton1Pressed+0x38>)
 800016c:	687b      	ldr	r3, [r7, #4]
 800016e:	2100      	movs	r1, #0
 8000170:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		return 1;
 8000174:	2301      	movs	r3, #1
 8000176:	e000      	b.n	800017a <isButton1Pressed+0x2e>
	}
	return 0;
 8000178:	2300      	movs	r3, #0
}
 800017a:	4618      	mov	r0, r3
 800017c:	370c      	adds	r7, #12
 800017e:	46bd      	mov	sp, r7
 8000180:	bc80      	pop	{r7}
 8000182:	4770      	bx	lr
 8000184:	200000e4 	.word	0x200000e4

08000188 <subKeyProcess>:
		return 1;
	}
	return 0;
}

void subKeyProcess(int index){
 8000188:	b480      	push	{r7}
 800018a:	b083      	sub	sp, #12
 800018c:	af00      	add	r7, sp, #0
 800018e:	6078      	str	r0, [r7, #4]
	button1_flag[index] = 1;
 8000190:	4a04      	ldr	r2, [pc, #16]	; (80001a4 <subKeyProcess+0x1c>)
 8000192:	687b      	ldr	r3, [r7, #4]
 8000194:	2101      	movs	r1, #1
 8000196:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 800019a:	bf00      	nop
 800019c:	370c      	adds	r7, #12
 800019e:	46bd      	mov	sp, r7
 80001a0:	bc80      	pop	{r7}
 80001a2:	4770      	bx	lr
 80001a4:	200000e4 	.word	0x200000e4

080001a8 <getKeyInput>:

void getKeyInput(){
 80001a8:	b580      	push	{r7, lr}
 80001aa:	b082      	sub	sp, #8
 80001ac:	af00      	add	r7, sp, #0
	for( int i = 0 ; i < NUM_BUTTONS ; i++)
 80001ae:	2300      	movs	r3, #0
 80001b0:	607b      	str	r3, [r7, #4]
 80001b2:	e072      	b.n	800029a <getKeyInput+0xf2>
	{
		KeyReg0[i] = KeyReg1[i];
 80001b4:	4a3d      	ldr	r2, [pc, #244]	; (80002ac <getKeyInput+0x104>)
 80001b6:	687b      	ldr	r3, [r7, #4]
 80001b8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001bc:	493c      	ldr	r1, [pc, #240]	; (80002b0 <getKeyInput+0x108>)
 80001be:	687b      	ldr	r3, [r7, #4]
 80001c0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		KeyReg1[i] = KeyReg2[i];
 80001c4:	4a3b      	ldr	r2, [pc, #236]	; (80002b4 <getKeyInput+0x10c>)
 80001c6:	687b      	ldr	r3, [r7, #4]
 80001c8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001cc:	4937      	ldr	r1, [pc, #220]	; (80002ac <getKeyInput+0x104>)
 80001ce:	687b      	ldr	r3, [r7, #4]
 80001d0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		// Add your key
		KeyReg2[i] = HAL_GPIO_ReadPin(GPIOB, BUTTON[i]);
 80001d4:	4a38      	ldr	r2, [pc, #224]	; (80002b8 <getKeyInput+0x110>)
 80001d6:	687b      	ldr	r3, [r7, #4]
 80001d8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80001dc:	4619      	mov	r1, r3
 80001de:	4837      	ldr	r0, [pc, #220]	; (80002bc <getKeyInput+0x114>)
 80001e0:	f001 fbae 	bl	8001940 <HAL_GPIO_ReadPin>
 80001e4:	4603      	mov	r3, r0
 80001e6:	4619      	mov	r1, r3
 80001e8:	4a32      	ldr	r2, [pc, #200]	; (80002b4 <getKeyInput+0x10c>)
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		if ((KeyReg1[i] == KeyReg0[i]) && (KeyReg1[i] == KeyReg2[i])){
 80001f0:	4a2e      	ldr	r2, [pc, #184]	; (80002ac <getKeyInput+0x104>)
 80001f2:	687b      	ldr	r3, [r7, #4]
 80001f4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001f8:	492d      	ldr	r1, [pc, #180]	; (80002b0 <getKeyInput+0x108>)
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000200:	429a      	cmp	r2, r3
 8000202:	d147      	bne.n	8000294 <getKeyInput+0xec>
 8000204:	4a29      	ldr	r2, [pc, #164]	; (80002ac <getKeyInput+0x104>)
 8000206:	687b      	ldr	r3, [r7, #4]
 8000208:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800020c:	4929      	ldr	r1, [pc, #164]	; (80002b4 <getKeyInput+0x10c>)
 800020e:	687b      	ldr	r3, [r7, #4]
 8000210:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000214:	429a      	cmp	r2, r3
 8000216:	d13d      	bne.n	8000294 <getKeyInput+0xec>
		    if (KeyReg2[i] != KeyReg3[i]){
 8000218:	4a26      	ldr	r2, [pc, #152]	; (80002b4 <getKeyInput+0x10c>)
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000220:	4927      	ldr	r1, [pc, #156]	; (80002c0 <getKeyInput+0x118>)
 8000222:	687b      	ldr	r3, [r7, #4]
 8000224:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000228:	429a      	cmp	r2, r3
 800022a:	d016      	beq.n	800025a <getKeyInput+0xb2>
		      KeyReg3[i] = KeyReg2[i];
 800022c:	4a21      	ldr	r2, [pc, #132]	; (80002b4 <getKeyInput+0x10c>)
 800022e:	687b      	ldr	r3, [r7, #4]
 8000230:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000234:	4922      	ldr	r1, [pc, #136]	; (80002c0 <getKeyInput+0x118>)
 8000236:	687b      	ldr	r3, [r7, #4]
 8000238:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		      if (KeyReg2[i] == PRESSED_STATE){
 800023c:	4a1d      	ldr	r2, [pc, #116]	; (80002b4 <getKeyInput+0x10c>)
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000244:	2b00      	cmp	r3, #0
 8000246:	d125      	bne.n	8000294 <getKeyInput+0xec>
		    	  TimeOutForKeyPress[i] = 200;
 8000248:	4a1e      	ldr	r2, [pc, #120]	; (80002c4 <getKeyInput+0x11c>)
 800024a:	687b      	ldr	r3, [r7, #4]
 800024c:	21c8      	movs	r1, #200	; 0xc8
 800024e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		    	  subKeyProcess(i);
 8000252:	6878      	ldr	r0, [r7, #4]
 8000254:	f7ff ff98 	bl	8000188 <subKeyProcess>
 8000258:	e01c      	b.n	8000294 <getKeyInput+0xec>
		      }

		    }else{
		        TimeOutForKeyPress[i] --;
 800025a:	4a1a      	ldr	r2, [pc, #104]	; (80002c4 <getKeyInput+0x11c>)
 800025c:	687b      	ldr	r3, [r7, #4]
 800025e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000262:	1e5a      	subs	r2, r3, #1
 8000264:	4917      	ldr	r1, [pc, #92]	; (80002c4 <getKeyInput+0x11c>)
 8000266:	687b      	ldr	r3, [r7, #4]
 8000268:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		        if (TimeOutForKeyPress[i] == 0){
 800026c:	4a15      	ldr	r2, [pc, #84]	; (80002c4 <getKeyInput+0x11c>)
 800026e:	687b      	ldr	r3, [r7, #4]
 8000270:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000274:	2b00      	cmp	r3, #0
 8000276:	d10d      	bne.n	8000294 <getKeyInput+0xec>
		        	TimeOutForKeyPress[i] = 200;
 8000278:	4a12      	ldr	r2, [pc, #72]	; (80002c4 <getKeyInput+0x11c>)
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	21c8      	movs	r1, #200	; 0xc8
 800027e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		        	if (KeyReg2[i] == PRESSED_STATE){
 8000282:	4a0c      	ldr	r2, [pc, #48]	; (80002b4 <getKeyInput+0x10c>)
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800028a:	2b00      	cmp	r3, #0
 800028c:	d102      	bne.n	8000294 <getKeyInput+0xec>
		        		subKeyProcess(i);
 800028e:	6878      	ldr	r0, [r7, #4]
 8000290:	f7ff ff7a 	bl	8000188 <subKeyProcess>
	for( int i = 0 ; i < NUM_BUTTONS ; i++)
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	3301      	adds	r3, #1
 8000298:	607b      	str	r3, [r7, #4]
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	2b02      	cmp	r3, #2
 800029e:	dd89      	ble.n	80001b4 <getKeyInput+0xc>
		        	}
		        }
		    }
		}
	}
}
 80002a0:	bf00      	nop
 80002a2:	bf00      	nop
 80002a4:	3708      	adds	r7, #8
 80002a6:	46bd      	mov	sp, r7
 80002a8:	bd80      	pop	{r7, pc}
 80002aa:	bf00      	nop
 80002ac:	2000000c 	.word	0x2000000c
 80002b0:	20000000 	.word	0x20000000
 80002b4:	20000018 	.word	0x20000018
 80002b8:	2000003c 	.word	0x2000003c
 80002bc:	40010c00 	.word	0x40010c00
 80002c0:	20000024 	.word	0x20000024
 80002c4:	20000030 	.word	0x20000030

080002c8 <updateClockBuffer>:

int led_buffer[4] = {1, 2, 3, 4};
char tam_str[10];


void updateClockBuffer(int lane_1, int lane_2){
 80002c8:	b580      	push	{r7, lr}
 80002ca:	b084      	sub	sp, #16
 80002cc:	af00      	add	r7, sp, #0
 80002ce:	6078      	str	r0, [r7, #4]
 80002d0:	6039      	str	r1, [r7, #0]
	if(status0 != INIT_BUTTON){
 80002d2:	4b13      	ldr	r3, [pc, #76]	; (8000320 <updateClockBuffer+0x58>)
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	2b00      	cmp	r3, #0
 80002d8:	d01e      	beq.n	8000318 <updateClockBuffer+0x50>
		int tam_1 = lane_1;
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	60fb      	str	r3, [r7, #12]
		int tam_2 = lane_2;
 80002de:	683b      	ldr	r3, [r7, #0]
 80002e0:	60bb      	str	r3, [r7, #8]
		lcd_send_cmd (0x80);
 80002e2:	2080      	movs	r0, #128	; 0x80
 80002e4:	f000 fae2 	bl	80008ac <lcd_send_cmd>
		lcd_goto_XY(1,0);
 80002e8:	2100      	movs	r1, #0
 80002ea:	2001      	movs	r0, #1
 80002ec:	f000 fb88 	bl	8000a00 <lcd_goto_XY>
		sprintf(tam_str, "%d", tam_1);
 80002f0:	68fa      	ldr	r2, [r7, #12]
 80002f2:	490c      	ldr	r1, [pc, #48]	; (8000324 <updateClockBuffer+0x5c>)
 80002f4:	480c      	ldr	r0, [pc, #48]	; (8000328 <updateClockBuffer+0x60>)
 80002f6:	f003 f80d 	bl	8003314 <siprintf>
		lcd_send_string(tam_str);
 80002fa:	480b      	ldr	r0, [pc, #44]	; (8000328 <updateClockBuffer+0x60>)
 80002fc:	f000 fb64 	bl	80009c8 <lcd_send_string>
		lcd_goto_XY(0,0);
 8000300:	2100      	movs	r1, #0
 8000302:	2000      	movs	r0, #0
 8000304:	f000 fb7c 	bl	8000a00 <lcd_goto_XY>
		sprintf(tam_str, "%d", tam_2);
 8000308:	68ba      	ldr	r2, [r7, #8]
 800030a:	4906      	ldr	r1, [pc, #24]	; (8000324 <updateClockBuffer+0x5c>)
 800030c:	4806      	ldr	r0, [pc, #24]	; (8000328 <updateClockBuffer+0x60>)
 800030e:	f003 f801 	bl	8003314 <siprintf>
		lcd_send_string(tam_str);
 8000312:	4805      	ldr	r0, [pc, #20]	; (8000328 <updateClockBuffer+0x60>)
 8000314:	f000 fb58 	bl	80009c8 <lcd_send_string>
	}
}
 8000318:	bf00      	nop
 800031a:	3710      	adds	r7, #16
 800031c:	46bd      	mov	sp, r7
 800031e:	bd80      	pop	{r7, pc}
 8000320:	200000f0 	.word	0x200000f0
 8000324:	08003ba0 	.word	0x08003ba0
 8000328:	2000011c 	.word	0x2000011c

0800032c <clearAll>:


void clearAll(){
 800032c:	b580      	push	{r7, lr}
 800032e:	af00      	add	r7, sp, #0
	lcd_clear_display();
 8000330:	f000 fb5f 	bl	80009f2 <lcd_clear_display>
	HAL_GPIO_WritePin(LED1_3_GPIO_Port, LED1_3_Pin, GPIO_PIN_RESET);
 8000334:	2200      	movs	r2, #0
 8000336:	2108      	movs	r1, #8
 8000338:	480a      	ldr	r0, [pc, #40]	; (8000364 <clearAll+0x38>)
 800033a:	f001 fb18 	bl	800196e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED1_5_GPIO_Port, LED1_5_Pin, GPIO_PIN_RESET);
 800033e:	2200      	movs	r2, #0
 8000340:	2120      	movs	r1, #32
 8000342:	4808      	ldr	r0, [pc, #32]	; (8000364 <clearAll+0x38>)
 8000344:	f001 fb13 	bl	800196e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED4_9_GPIO_Port, LED4_9_Pin, GPIO_PIN_RESET);
 8000348:	2200      	movs	r2, #0
 800034a:	f44f 7100 	mov.w	r1, #512	; 0x200
 800034e:	4806      	ldr	r0, [pc, #24]	; (8000368 <clearAll+0x3c>)
 8000350:	f001 fb0d 	bl	800196e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED4_8_GPIO_Port, LED4_8_Pin, GPIO_PIN_RESET);
 8000354:	2200      	movs	r2, #0
 8000356:	f44f 7180 	mov.w	r1, #256	; 0x100
 800035a:	4803      	ldr	r0, [pc, #12]	; (8000368 <clearAll+0x3c>)
 800035c:	f001 fb07 	bl	800196e <HAL_GPIO_WritePin>
}
 8000360:	bf00      	nop
 8000362:	bd80      	pop	{r7, pc}
 8000364:	40010c00 	.word	0x40010c00
 8000368:	40010800 	.word	0x40010800

0800036c <fsm_automatic_run>:
 */

#include"fsm_automatic.h"


void fsm_automatic_run(){
 800036c:	b580      	push	{r7, lr}
 800036e:	af00      	add	r7, sp, #0
	fsm_automatic_traffic_light();
 8000370:	f000 fec8 	bl	8001104 <fsm_automatic_traffic_light>
	fsm_automatic_run_segmen();
 8000374:	f000 fa6a 	bl	800084c <fsm_automatic_run_segmen>
	updateLed();
 8000378:	f000 fa7a 	bl	8000870 <updateLed>
}
 800037c:	bf00      	nop
 800037e:	bd80      	pop	{r7, pc}

08000380 <fsm_manual_run>:
 *      Author: vinhn
 */

#include"fsm_manual.h"

void fsm_manual_run(){
 8000380:	b580      	push	{r7, lr}
 8000382:	af00      	add	r7, sp, #0
	switch(status0){
 8000384:	4ba8      	ldr	r3, [pc, #672]	; (8000628 <fsm_manual_run+0x2a8>)
 8000386:	681b      	ldr	r3, [r3, #0]
 8000388:	2b0e      	cmp	r3, #14
 800038a:	f200 8140 	bhi.w	800060e <fsm_manual_run+0x28e>
 800038e:	a201      	add	r2, pc, #4	; (adr r2, 8000394 <fsm_manual_run+0x14>)
 8000390:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000394:	080003d1 	.word	0x080003d1
 8000398:	0800060f 	.word	0x0800060f
 800039c:	0800060f 	.word	0x0800060f
 80003a0:	0800060f 	.word	0x0800060f
 80003a4:	0800060f 	.word	0x0800060f
 80003a8:	0800060f 	.word	0x0800060f
 80003ac:	0800060f 	.word	0x0800060f
 80003b0:	0800060f 	.word	0x0800060f
 80003b4:	0800060f 	.word	0x0800060f
 80003b8:	0800060f 	.word	0x0800060f
 80003bc:	0800060f 	.word	0x0800060f
 80003c0:	08000449 	.word	0x08000449
 80003c4:	0800046d 	.word	0x0800046d
 80003c8:	080004f9 	.word	0x080004f9
 80003cc:	0800057f 	.word	0x0800057f
		case INIT_BUTTON:
			lcd_send_cmd (0x80);
 80003d0:	2080      	movs	r0, #128	; 0x80
 80003d2:	f000 fa6b 	bl	80008ac <lcd_send_cmd>
			lcd_goto_XY(1,4);
 80003d6:	2104      	movs	r1, #4
 80003d8:	2001      	movs	r0, #1
 80003da:	f000 fb11 	bl	8000a00 <lcd_goto_XY>
			lcd_send_string("Hello guy");
 80003de:	4893      	ldr	r0, [pc, #588]	; (800062c <fsm_manual_run+0x2ac>)
 80003e0:	f000 faf2 	bl	80009c8 <lcd_send_string>
			if(isButton1Pressed(0) == 1){
 80003e4:	2000      	movs	r0, #0
 80003e6:	f7ff feb1 	bl	800014c <isButton1Pressed>
 80003ea:	4603      	mov	r3, r0
 80003ec:	2b01      	cmp	r3, #1
 80003ee:	f040 8110 	bne.w	8000612 <fsm_manual_run+0x292>
				  setTimer0(3, 1010);
 80003f2:	f240 31f2 	movw	r1, #1010	; 0x3f2
 80003f6:	2003      	movs	r0, #3
 80003f8:	f000 fc6c 	bl	8000cd4 <setTimer0>
				  setTimer0(2, 10);
 80003fc:	210a      	movs	r1, #10
 80003fe:	2002      	movs	r0, #2
 8000400:	f000 fc68 	bl	8000cd4 <setTimer0>
				  setTimer0(1, 1010);
 8000404:	f240 31f2 	movw	r1, #1010	; 0x3f2
 8000408:	2001      	movs	r0, #1
 800040a:	f000 fc63 	bl	8000cd4 <setTimer0>
				  setTimer0(0, 1010);
 800040e:	f240 31f2 	movw	r1, #1010	; 0x3f2
 8000412:	2000      	movs	r0, #0
 8000414:	f000 fc5e 	bl	8000cd4 <setTimer0>
				  status1 = INIT_LED;
 8000418:	4b85      	ldr	r3, [pc, #532]	; (8000630 <fsm_manual_run+0x2b0>)
 800041a:	2200      	movs	r2, #0
 800041c:	601a      	str	r2, [r3, #0]
				  status2 = INIT_LED;
 800041e:	4b85      	ldr	r3, [pc, #532]	; (8000634 <fsm_manual_run+0x2b4>)
 8000420:	2200      	movs	r2, #0
 8000422:	601a      	str	r2, [r3, #0]
				  status0 = MODE1;
 8000424:	4b80      	ldr	r3, [pc, #512]	; (8000628 <fsm_manual_run+0x2a8>)
 8000426:	220b      	movs	r2, #11
 8000428:	601a      	str	r2, [r3, #0]
				  status3 = INIT_LED;
 800042a:	4b83      	ldr	r3, [pc, #524]	; (8000638 <fsm_manual_run+0x2b8>)
 800042c:	2200      	movs	r2, #0
 800042e:	601a      	str	r2, [r3, #0]
				  status4 = INIT_LED;
 8000430:	4b82      	ldr	r3, [pc, #520]	; (800063c <fsm_manual_run+0x2bc>)
 8000432:	2200      	movs	r2, #0
 8000434:	601a      	str	r2, [r3, #0]
				  time_lane1 = MODE1 % 10;
 8000436:	4b82      	ldr	r3, [pc, #520]	; (8000640 <fsm_manual_run+0x2c0>)
 8000438:	2201      	movs	r2, #1
 800043a:	601a      	str	r2, [r3, #0]
				  time_lane2 = 0;
 800043c:	4b81      	ldr	r3, [pc, #516]	; (8000644 <fsm_manual_run+0x2c4>)
 800043e:	2200      	movs	r2, #0
 8000440:	601a      	str	r2, [r3, #0]
				  clearAll();
 8000442:	f7ff ff73 	bl	800032c <clearAll>
			}

			break;
 8000446:	e0e4      	b.n	8000612 <fsm_manual_run+0x292>
		case MODE1:
			updateLed();
 8000448:	f000 fa12 	bl	8000870 <updateLed>
			if(isButton1Pressed(0) == 1){
 800044c:	2000      	movs	r0, #0
 800044e:	f7ff fe7d 	bl	800014c <isButton1Pressed>
 8000452:	4603      	mov	r3, r0
 8000454:	2b01      	cmp	r3, #1
 8000456:	f040 80de 	bne.w	8000616 <fsm_manual_run+0x296>
				time_mid = 1;
 800045a:	4b7b      	ldr	r3, [pc, #492]	; (8000648 <fsm_manual_run+0x2c8>)
 800045c:	2201      	movs	r2, #1
 800045e:	601a      	str	r2, [r3, #0]
				status0 = MODE2;
 8000460:	4b71      	ldr	r3, [pc, #452]	; (8000628 <fsm_manual_run+0x2a8>)
 8000462:	220c      	movs	r2, #12
 8000464:	601a      	str	r2, [r3, #0]
				clearAll();
 8000466:	f7ff ff61 	bl	800032c <clearAll>
			}

			break;
 800046a:	e0d4      	b.n	8000616 <fsm_manual_run+0x296>
		case MODE2:
			traffic_light1(AUTO_RED1);
 800046c:	2001      	movs	r0, #1
 800046e:	f000 fdad 	bl	8000fcc <traffic_light1>
			traffic_light2(AUTO_RED2);
 8000472:	2005      	movs	r0, #5
 8000474:	f000 fdf0 	bl	8001058 <traffic_light2>
			time_lane1 = MODE2 % 10;
 8000478:	4b71      	ldr	r3, [pc, #452]	; (8000640 <fsm_manual_run+0x2c0>)
 800047a:	2202      	movs	r2, #2
 800047c:	601a      	str	r2, [r3, #0]
			time_lane2 = time_mid;
 800047e:	4b72      	ldr	r3, [pc, #456]	; (8000648 <fsm_manual_run+0x2c8>)
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	4a70      	ldr	r2, [pc, #448]	; (8000644 <fsm_manual_run+0x2c4>)
 8000484:	6013      	str	r3, [r2, #0]
			updateLed();
 8000486:	f000 f9f3 	bl	8000870 <updateLed>
			if(isButton1Pressed(0) == 1){
 800048a:	2000      	movs	r0, #0
 800048c:	f7ff fe5e 	bl	800014c <isButton1Pressed>
 8000490:	4603      	mov	r3, r0
 8000492:	2b01      	cmp	r3, #1
 8000494:	d107      	bne.n	80004a6 <fsm_manual_run+0x126>
				time_mid = 1;
 8000496:	4b6c      	ldr	r3, [pc, #432]	; (8000648 <fsm_manual_run+0x2c8>)
 8000498:	2201      	movs	r2, #1
 800049a:	601a      	str	r2, [r3, #0]
				status0 = MODE3;
 800049c:	4b62      	ldr	r3, [pc, #392]	; (8000628 <fsm_manual_run+0x2a8>)
 800049e:	220d      	movs	r2, #13
 80004a0:	601a      	str	r2, [r3, #0]
				clearAll();
 80004a2:	f7ff ff43 	bl	800032c <clearAll>
			}

			//increase time value of red led
			if(isButton1Pressed(1) == 1){
 80004a6:	2001      	movs	r0, #1
 80004a8:	f7ff fe50 	bl	800014c <isButton1Pressed>
 80004ac:	4603      	mov	r3, r0
 80004ae:	2b01      	cmp	r3, #1
 80004b0:	d10d      	bne.n	80004ce <fsm_manual_run+0x14e>
				time_mid = time_mid + 1;
 80004b2:	4b65      	ldr	r3, [pc, #404]	; (8000648 <fsm_manual_run+0x2c8>)
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	3301      	adds	r3, #1
 80004b8:	4a63      	ldr	r2, [pc, #396]	; (8000648 <fsm_manual_run+0x2c8>)
 80004ba:	6013      	str	r3, [r2, #0]
				if( time_mid >= 100 ){
 80004bc:	4b62      	ldr	r3, [pc, #392]	; (8000648 <fsm_manual_run+0x2c8>)
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	2b63      	cmp	r3, #99	; 0x63
 80004c2:	dd04      	ble.n	80004ce <fsm_manual_run+0x14e>
					time_mid = 1;
 80004c4:	4b60      	ldr	r3, [pc, #384]	; (8000648 <fsm_manual_run+0x2c8>)
 80004c6:	2201      	movs	r2, #1
 80004c8:	601a      	str	r2, [r3, #0]
					clearAll();
 80004ca:	f7ff ff2f 	bl	800032c <clearAll>
				}
			}

			//confirm time value of red led
			if(isButton1Pressed(2) == 1){
 80004ce:	2002      	movs	r0, #2
 80004d0:	f7ff fe3c 	bl	800014c <isButton1Pressed>
 80004d4:	4603      	mov	r3, r0
 80004d6:	2b01      	cmp	r3, #1
 80004d8:	f040 809f 	bne.w	800061a <fsm_manual_run+0x29a>
				TIME_RED = time_mid * 1000;
 80004dc:	4b5a      	ldr	r3, [pc, #360]	; (8000648 <fsm_manual_run+0x2c8>)
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80004e4:	fb02 f303 	mul.w	r3, r2, r3
 80004e8:	4a58      	ldr	r2, [pc, #352]	; (800064c <fsm_manual_run+0x2cc>)
 80004ea:	6013      	str	r3, [r2, #0]
				time_mid = 1;
 80004ec:	4b56      	ldr	r3, [pc, #344]	; (8000648 <fsm_manual_run+0x2c8>)
 80004ee:	2201      	movs	r2, #1
 80004f0:	601a      	str	r2, [r3, #0]
				clearAll();
 80004f2:	f7ff ff1b 	bl	800032c <clearAll>
			}
			break;
 80004f6:	e090      	b.n	800061a <fsm_manual_run+0x29a>
		case MODE3:
			traffic_light1(AUTO_AMBER1);
 80004f8:	2003      	movs	r0, #3
 80004fa:	f000 fd67 	bl	8000fcc <traffic_light1>
			traffic_light2(AUTO_AMBER2);
 80004fe:	2007      	movs	r0, #7
 8000500:	f000 fdaa 	bl	8001058 <traffic_light2>
			time_lane1 = MODE3 % 10;
 8000504:	4b4e      	ldr	r3, [pc, #312]	; (8000640 <fsm_manual_run+0x2c0>)
 8000506:	2203      	movs	r2, #3
 8000508:	601a      	str	r2, [r3, #0]
			time_lane2 = time_mid;
 800050a:	4b4f      	ldr	r3, [pc, #316]	; (8000648 <fsm_manual_run+0x2c8>)
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	4a4d      	ldr	r2, [pc, #308]	; (8000644 <fsm_manual_run+0x2c4>)
 8000510:	6013      	str	r3, [r2, #0]
			updateLed();
 8000512:	f000 f9ad 	bl	8000870 <updateLed>
			if(isButton1Pressed(0) == 1){
 8000516:	2000      	movs	r0, #0
 8000518:	f7ff fe18 	bl	800014c <isButton1Pressed>
 800051c:	4603      	mov	r3, r0
 800051e:	2b01      	cmp	r3, #1
 8000520:	d107      	bne.n	8000532 <fsm_manual_run+0x1b2>
				time_mid = 1;
 8000522:	4b49      	ldr	r3, [pc, #292]	; (8000648 <fsm_manual_run+0x2c8>)
 8000524:	2201      	movs	r2, #1
 8000526:	601a      	str	r2, [r3, #0]
				status0 = MODE4;
 8000528:	4b3f      	ldr	r3, [pc, #252]	; (8000628 <fsm_manual_run+0x2a8>)
 800052a:	220e      	movs	r2, #14
 800052c:	601a      	str	r2, [r3, #0]
				clearAll();
 800052e:	f7ff fefd 	bl	800032c <clearAll>
			}

			//increase time value of amber led
			if(isButton1Pressed(1) == 1){
 8000532:	2001      	movs	r0, #1
 8000534:	f7ff fe0a 	bl	800014c <isButton1Pressed>
 8000538:	4603      	mov	r3, r0
 800053a:	2b01      	cmp	r3, #1
 800053c:	d10d      	bne.n	800055a <fsm_manual_run+0x1da>
				time_mid = time_mid + 1;
 800053e:	4b42      	ldr	r3, [pc, #264]	; (8000648 <fsm_manual_run+0x2c8>)
 8000540:	681b      	ldr	r3, [r3, #0]
 8000542:	3301      	adds	r3, #1
 8000544:	4a40      	ldr	r2, [pc, #256]	; (8000648 <fsm_manual_run+0x2c8>)
 8000546:	6013      	str	r3, [r2, #0]
				if( time_mid >= 100 ){
 8000548:	4b3f      	ldr	r3, [pc, #252]	; (8000648 <fsm_manual_run+0x2c8>)
 800054a:	681b      	ldr	r3, [r3, #0]
 800054c:	2b63      	cmp	r3, #99	; 0x63
 800054e:	dd04      	ble.n	800055a <fsm_manual_run+0x1da>
					time_mid = 1;
 8000550:	4b3d      	ldr	r3, [pc, #244]	; (8000648 <fsm_manual_run+0x2c8>)
 8000552:	2201      	movs	r2, #1
 8000554:	601a      	str	r2, [r3, #0]
					clearAll();
 8000556:	f7ff fee9 	bl	800032c <clearAll>
				}
			}

			//confirm time value of amber led
			if(isButton1Pressed(2) == 1){
 800055a:	2002      	movs	r0, #2
 800055c:	f7ff fdf6 	bl	800014c <isButton1Pressed>
 8000560:	4603      	mov	r3, r0
 8000562:	2b01      	cmp	r3, #1
 8000564:	d15b      	bne.n	800061e <fsm_manual_run+0x29e>
				TIME_YELLOW = time_mid * 1000;
 8000566:	4b38      	ldr	r3, [pc, #224]	; (8000648 <fsm_manual_run+0x2c8>)
 8000568:	681b      	ldr	r3, [r3, #0]
 800056a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800056e:	fb02 f303 	mul.w	r3, r2, r3
 8000572:	4a37      	ldr	r2, [pc, #220]	; (8000650 <fsm_manual_run+0x2d0>)
 8000574:	6013      	str	r3, [r2, #0]
				time_mid = 1;
 8000576:	4b34      	ldr	r3, [pc, #208]	; (8000648 <fsm_manual_run+0x2c8>)
 8000578:	2201      	movs	r2, #1
 800057a:	601a      	str	r2, [r3, #0]
			}
			break;
 800057c:	e04f      	b.n	800061e <fsm_manual_run+0x29e>
		case MODE4:
			traffic_light1(AUTO_GREEN1);
 800057e:	2002      	movs	r0, #2
 8000580:	f000 fd24 	bl	8000fcc <traffic_light1>
			traffic_light2(AUTO_GREEN2);
 8000584:	2006      	movs	r0, #6
 8000586:	f000 fd67 	bl	8001058 <traffic_light2>
			time_lane1 = MODE4 % 10;
 800058a:	4b2d      	ldr	r3, [pc, #180]	; (8000640 <fsm_manual_run+0x2c0>)
 800058c:	2204      	movs	r2, #4
 800058e:	601a      	str	r2, [r3, #0]
			time_lane2 = time_mid;
 8000590:	4b2d      	ldr	r3, [pc, #180]	; (8000648 <fsm_manual_run+0x2c8>)
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	4a2b      	ldr	r2, [pc, #172]	; (8000644 <fsm_manual_run+0x2c4>)
 8000596:	6013      	str	r3, [r2, #0]
			updateLed();
 8000598:	f000 f96a 	bl	8000870 <updateLed>
			if(isButton1Pressed(0) == 1){
 800059c:	2000      	movs	r0, #0
 800059e:	f7ff fdd5 	bl	800014c <isButton1Pressed>
 80005a2:	4603      	mov	r3, r0
 80005a4:	2b01      	cmp	r3, #1
 80005a6:	d10a      	bne.n	80005be <fsm_manual_run+0x23e>
				time_mid = 1;
 80005a8:	4b27      	ldr	r3, [pc, #156]	; (8000648 <fsm_manual_run+0x2c8>)
 80005aa:	2201      	movs	r2, #1
 80005ac:	601a      	str	r2, [r3, #0]
				status0 = INIT_BUTTON;
 80005ae:	4b1e      	ldr	r3, [pc, #120]	; (8000628 <fsm_manual_run+0x2a8>)
 80005b0:	2200      	movs	r2, #0
 80005b2:	601a      	str	r2, [r3, #0]
				clearAll();
 80005b4:	f7ff feba 	bl	800032c <clearAll>
				lcd_send_cmd (0x02);
 80005b8:	2002      	movs	r0, #2
 80005ba:	f000 f977 	bl	80008ac <lcd_send_cmd>
			}

			//increase time value of green led
			if(isButton1Pressed(1) == 1){
 80005be:	2001      	movs	r0, #1
 80005c0:	f7ff fdc4 	bl	800014c <isButton1Pressed>
 80005c4:	4603      	mov	r3, r0
 80005c6:	2b01      	cmp	r3, #1
 80005c8:	d10d      	bne.n	80005e6 <fsm_manual_run+0x266>
				time_mid = time_mid + 1;
 80005ca:	4b1f      	ldr	r3, [pc, #124]	; (8000648 <fsm_manual_run+0x2c8>)
 80005cc:	681b      	ldr	r3, [r3, #0]
 80005ce:	3301      	adds	r3, #1
 80005d0:	4a1d      	ldr	r2, [pc, #116]	; (8000648 <fsm_manual_run+0x2c8>)
 80005d2:	6013      	str	r3, [r2, #0]
				if( time_mid >= 100 ){
 80005d4:	4b1c      	ldr	r3, [pc, #112]	; (8000648 <fsm_manual_run+0x2c8>)
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	2b63      	cmp	r3, #99	; 0x63
 80005da:	dd04      	ble.n	80005e6 <fsm_manual_run+0x266>
					time_mid = 1;
 80005dc:	4b1a      	ldr	r3, [pc, #104]	; (8000648 <fsm_manual_run+0x2c8>)
 80005de:	2201      	movs	r2, #1
 80005e0:	601a      	str	r2, [r3, #0]
					clearAll();
 80005e2:	f7ff fea3 	bl	800032c <clearAll>
				}
			}

			//confirm time value of green led
			if(isButton1Pressed(2) == 1){
 80005e6:	2002      	movs	r0, #2
 80005e8:	f7ff fdb0 	bl	800014c <isButton1Pressed>
 80005ec:	4603      	mov	r3, r0
 80005ee:	2b01      	cmp	r3, #1
 80005f0:	d117      	bne.n	8000622 <fsm_manual_run+0x2a2>
				TIME_GREEN = time_mid * 1000;
 80005f2:	4b15      	ldr	r3, [pc, #84]	; (8000648 <fsm_manual_run+0x2c8>)
 80005f4:	681b      	ldr	r3, [r3, #0]
 80005f6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80005fa:	fb02 f303 	mul.w	r3, r2, r3
 80005fe:	4a15      	ldr	r2, [pc, #84]	; (8000654 <fsm_manual_run+0x2d4>)
 8000600:	6013      	str	r3, [r2, #0]
				time_mid = 1;
 8000602:	4b11      	ldr	r3, [pc, #68]	; (8000648 <fsm_manual_run+0x2c8>)
 8000604:	2201      	movs	r2, #1
 8000606:	601a      	str	r2, [r3, #0]
				clearAll();
 8000608:	f7ff fe90 	bl	800032c <clearAll>
			}
			break;
 800060c:	e009      	b.n	8000622 <fsm_manual_run+0x2a2>
		default:
			break;
 800060e:	bf00      	nop
 8000610:	e008      	b.n	8000624 <fsm_manual_run+0x2a4>
			break;
 8000612:	bf00      	nop
 8000614:	e006      	b.n	8000624 <fsm_manual_run+0x2a4>
			break;
 8000616:	bf00      	nop
 8000618:	e004      	b.n	8000624 <fsm_manual_run+0x2a4>
			break;
 800061a:	bf00      	nop
 800061c:	e002      	b.n	8000624 <fsm_manual_run+0x2a4>
			break;
 800061e:	bf00      	nop
 8000620:	e000      	b.n	8000624 <fsm_manual_run+0x2a4>
			break;
 8000622:	bf00      	nop
	}
}
 8000624:	bf00      	nop
 8000626:	bd80      	pop	{r7, pc}
 8000628:	200000f0 	.word	0x200000f0
 800062c:	08003ba4 	.word	0x08003ba4
 8000630:	200000f4 	.word	0x200000f4
 8000634:	200000f8 	.word	0x200000f8
 8000638:	200000fc 	.word	0x200000fc
 800063c:	20000100 	.word	0x20000100
 8000640:	20000108 	.word	0x20000108
 8000644:	2000010c 	.word	0x2000010c
 8000648:	20000104 	.word	0x20000104
 800064c:	20000044 	.word	0x20000044
 8000650:	20000048 	.word	0x20000048
 8000654:	2000004c 	.word	0x2000004c

08000658 <counter_7segmen2>:


// tinhs toan thoi gian trong nay
#include "fsm_setting.h"

void counter_7segmen2(){
 8000658:	b480      	push	{r7}
 800065a:	af00      	add	r7, sp, #0
	if(status0 == MODE1){
 800065c:	4b72      	ldr	r3, [pc, #456]	; (8000828 <counter_7segmen2+0x1d0>)
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	2b0b      	cmp	r3, #11
 8000662:	f040 80d4 	bne.w	800080e <counter_7segmen2+0x1b6>
		switch(status3){
 8000666:	4b71      	ldr	r3, [pc, #452]	; (800082c <counter_7segmen2+0x1d4>)
 8000668:	681b      	ldr	r3, [r3, #0]
 800066a:	2b03      	cmp	r3, #3
 800066c:	d85d      	bhi.n	800072a <counter_7segmen2+0xd2>
 800066e:	a201      	add	r2, pc, #4	; (adr r2, 8000674 <counter_7segmen2+0x1c>)
 8000670:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000674:	08000685 	.word	0x08000685
 8000678:	080006a1 	.word	0x080006a1
 800067c:	080006fd 	.word	0x080006fd
 8000680:	080006cf 	.word	0x080006cf
				case INIT_LED:
						time_lane1 = TIME_RED / 1000;
 8000684:	4b6a      	ldr	r3, [pc, #424]	; (8000830 <counter_7segmen2+0x1d8>)
 8000686:	681b      	ldr	r3, [r3, #0]
 8000688:	4a6a      	ldr	r2, [pc, #424]	; (8000834 <counter_7segmen2+0x1dc>)
 800068a:	fb82 1203 	smull	r1, r2, r2, r3
 800068e:	1192      	asrs	r2, r2, #6
 8000690:	17db      	asrs	r3, r3, #31
 8000692:	1ad3      	subs	r3, r2, r3
 8000694:	4a68      	ldr	r2, [pc, #416]	; (8000838 <counter_7segmen2+0x1e0>)
 8000696:	6013      	str	r3, [r2, #0]
						status3 = AUTO_RED1;
 8000698:	4b64      	ldr	r3, [pc, #400]	; (800082c <counter_7segmen2+0x1d4>)
 800069a:	2201      	movs	r2, #1
 800069c:	601a      	str	r2, [r3, #0]
//						clearAll();
					break;
 800069e:	e04b      	b.n	8000738 <counter_7segmen2+0xe0>

				case AUTO_RED1:
						time_lane1--;
 80006a0:	4b65      	ldr	r3, [pc, #404]	; (8000838 <counter_7segmen2+0x1e0>)
 80006a2:	681b      	ldr	r3, [r3, #0]
 80006a4:	3b01      	subs	r3, #1
 80006a6:	4a64      	ldr	r2, [pc, #400]	; (8000838 <counter_7segmen2+0x1e0>)
 80006a8:	6013      	str	r3, [r2, #0]
						if (time_lane1 <= 0){
 80006aa:	4b63      	ldr	r3, [pc, #396]	; (8000838 <counter_7segmen2+0x1e0>)
 80006ac:	681b      	ldr	r3, [r3, #0]
 80006ae:	2b00      	cmp	r3, #0
 80006b0:	dc3d      	bgt.n	800072e <counter_7segmen2+0xd6>
							time_lane1 = TIME_GREEN / 1000;
 80006b2:	4b62      	ldr	r3, [pc, #392]	; (800083c <counter_7segmen2+0x1e4>)
 80006b4:	681b      	ldr	r3, [r3, #0]
 80006b6:	4a5f      	ldr	r2, [pc, #380]	; (8000834 <counter_7segmen2+0x1dc>)
 80006b8:	fb82 1203 	smull	r1, r2, r2, r3
 80006bc:	1192      	asrs	r2, r2, #6
 80006be:	17db      	asrs	r3, r3, #31
 80006c0:	1ad3      	subs	r3, r2, r3
 80006c2:	4a5d      	ldr	r2, [pc, #372]	; (8000838 <counter_7segmen2+0x1e0>)
 80006c4:	6013      	str	r3, [r2, #0]
							status3 = AUTO_GREEN1;
 80006c6:	4b59      	ldr	r3, [pc, #356]	; (800082c <counter_7segmen2+0x1d4>)
 80006c8:	2202      	movs	r2, #2
 80006ca:	601a      	str	r2, [r3, #0]
						}
					break;
 80006cc:	e02f      	b.n	800072e <counter_7segmen2+0xd6>

				case AUTO_AMBER1:
						time_lane1--;
 80006ce:	4b5a      	ldr	r3, [pc, #360]	; (8000838 <counter_7segmen2+0x1e0>)
 80006d0:	681b      	ldr	r3, [r3, #0]
 80006d2:	3b01      	subs	r3, #1
 80006d4:	4a58      	ldr	r2, [pc, #352]	; (8000838 <counter_7segmen2+0x1e0>)
 80006d6:	6013      	str	r3, [r2, #0]
						if (time_lane1 <= 0){
 80006d8:	4b57      	ldr	r3, [pc, #348]	; (8000838 <counter_7segmen2+0x1e0>)
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	2b00      	cmp	r3, #0
 80006de:	dc28      	bgt.n	8000732 <counter_7segmen2+0xda>
							time_lane1 = TIME_RED / 1000;
 80006e0:	4b53      	ldr	r3, [pc, #332]	; (8000830 <counter_7segmen2+0x1d8>)
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	4a53      	ldr	r2, [pc, #332]	; (8000834 <counter_7segmen2+0x1dc>)
 80006e6:	fb82 1203 	smull	r1, r2, r2, r3
 80006ea:	1192      	asrs	r2, r2, #6
 80006ec:	17db      	asrs	r3, r3, #31
 80006ee:	1ad3      	subs	r3, r2, r3
 80006f0:	4a51      	ldr	r2, [pc, #324]	; (8000838 <counter_7segmen2+0x1e0>)
 80006f2:	6013      	str	r3, [r2, #0]
							status3 = AUTO_RED1;
 80006f4:	4b4d      	ldr	r3, [pc, #308]	; (800082c <counter_7segmen2+0x1d4>)
 80006f6:	2201      	movs	r2, #1
 80006f8:	601a      	str	r2, [r3, #0]
						}
					break;
 80006fa:	e01a      	b.n	8000732 <counter_7segmen2+0xda>

				case AUTO_GREEN1:
						time_lane1--;
 80006fc:	4b4e      	ldr	r3, [pc, #312]	; (8000838 <counter_7segmen2+0x1e0>)
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	3b01      	subs	r3, #1
 8000702:	4a4d      	ldr	r2, [pc, #308]	; (8000838 <counter_7segmen2+0x1e0>)
 8000704:	6013      	str	r3, [r2, #0]
						if (time_lane1 <= 0){
 8000706:	4b4c      	ldr	r3, [pc, #304]	; (8000838 <counter_7segmen2+0x1e0>)
 8000708:	681b      	ldr	r3, [r3, #0]
 800070a:	2b00      	cmp	r3, #0
 800070c:	dc13      	bgt.n	8000736 <counter_7segmen2+0xde>
							time_lane1 = TIME_YELLOW / 1000;
 800070e:	4b4c      	ldr	r3, [pc, #304]	; (8000840 <counter_7segmen2+0x1e8>)
 8000710:	681b      	ldr	r3, [r3, #0]
 8000712:	4a48      	ldr	r2, [pc, #288]	; (8000834 <counter_7segmen2+0x1dc>)
 8000714:	fb82 1203 	smull	r1, r2, r2, r3
 8000718:	1192      	asrs	r2, r2, #6
 800071a:	17db      	asrs	r3, r3, #31
 800071c:	1ad3      	subs	r3, r2, r3
 800071e:	4a46      	ldr	r2, [pc, #280]	; (8000838 <counter_7segmen2+0x1e0>)
 8000720:	6013      	str	r3, [r2, #0]
							status3 = AUTO_AMBER1;
 8000722:	4b42      	ldr	r3, [pc, #264]	; (800082c <counter_7segmen2+0x1d4>)
 8000724:	2203      	movs	r2, #3
 8000726:	601a      	str	r2, [r3, #0]
						}
					break;
 8000728:	e005      	b.n	8000736 <counter_7segmen2+0xde>

				default:
					break;
 800072a:	bf00      	nop
 800072c:	e004      	b.n	8000738 <counter_7segmen2+0xe0>
					break;
 800072e:	bf00      	nop
 8000730:	e002      	b.n	8000738 <counter_7segmen2+0xe0>
					break;
 8000732:	bf00      	nop
 8000734:	e000      	b.n	8000738 <counter_7segmen2+0xe0>
					break;
 8000736:	bf00      	nop
		}

		switch(status4){
 8000738:	4b42      	ldr	r3, [pc, #264]	; (8000844 <counter_7segmen2+0x1ec>)
 800073a:	681b      	ldr	r3, [r3, #0]
 800073c:	2b07      	cmp	r3, #7
 800073e:	d868      	bhi.n	8000812 <counter_7segmen2+0x1ba>
 8000740:	a201      	add	r2, pc, #4	; (adr r2, 8000748 <counter_7segmen2+0xf0>)
 8000742:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000746:	bf00      	nop
 8000748:	08000769 	.word	0x08000769
 800074c:	08000813 	.word	0x08000813
 8000750:	08000813 	.word	0x08000813
 8000754:	08000813 	.word	0x08000813
 8000758:	08000813 	.word	0x08000813
 800075c:	08000785 	.word	0x08000785
 8000760:	080007e1 	.word	0x080007e1
 8000764:	080007b3 	.word	0x080007b3
			case INIT_LED:
					time_lane2 = TIME_GREEN / 1000;
 8000768:	4b34      	ldr	r3, [pc, #208]	; (800083c <counter_7segmen2+0x1e4>)
 800076a:	681b      	ldr	r3, [r3, #0]
 800076c:	4a31      	ldr	r2, [pc, #196]	; (8000834 <counter_7segmen2+0x1dc>)
 800076e:	fb82 1203 	smull	r1, r2, r2, r3
 8000772:	1192      	asrs	r2, r2, #6
 8000774:	17db      	asrs	r3, r3, #31
 8000776:	1ad3      	subs	r3, r2, r3
 8000778:	4a33      	ldr	r2, [pc, #204]	; (8000848 <counter_7segmen2+0x1f0>)
 800077a:	6013      	str	r3, [r2, #0]
					status4 = AUTO_GREEN2;
 800077c:	4b31      	ldr	r3, [pc, #196]	; (8000844 <counter_7segmen2+0x1ec>)
 800077e:	2206      	movs	r2, #6
 8000780:	601a      	str	r2, [r3, #0]
//					clearAll();
				break;
 8000782:	e04d      	b.n	8000820 <counter_7segmen2+0x1c8>

			case AUTO_RED2:
					time_lane2--;
 8000784:	4b30      	ldr	r3, [pc, #192]	; (8000848 <counter_7segmen2+0x1f0>)
 8000786:	681b      	ldr	r3, [r3, #0]
 8000788:	3b01      	subs	r3, #1
 800078a:	4a2f      	ldr	r2, [pc, #188]	; (8000848 <counter_7segmen2+0x1f0>)
 800078c:	6013      	str	r3, [r2, #0]
					if (time_lane2 <= 0){
 800078e:	4b2e      	ldr	r3, [pc, #184]	; (8000848 <counter_7segmen2+0x1f0>)
 8000790:	681b      	ldr	r3, [r3, #0]
 8000792:	2b00      	cmp	r3, #0
 8000794:	dc3f      	bgt.n	8000816 <counter_7segmen2+0x1be>
						time_lane2 = TIME_GREEN / 1000;
 8000796:	4b29      	ldr	r3, [pc, #164]	; (800083c <counter_7segmen2+0x1e4>)
 8000798:	681b      	ldr	r3, [r3, #0]
 800079a:	4a26      	ldr	r2, [pc, #152]	; (8000834 <counter_7segmen2+0x1dc>)
 800079c:	fb82 1203 	smull	r1, r2, r2, r3
 80007a0:	1192      	asrs	r2, r2, #6
 80007a2:	17db      	asrs	r3, r3, #31
 80007a4:	1ad3      	subs	r3, r2, r3
 80007a6:	4a28      	ldr	r2, [pc, #160]	; (8000848 <counter_7segmen2+0x1f0>)
 80007a8:	6013      	str	r3, [r2, #0]
						status4 = AUTO_GREEN2;
 80007aa:	4b26      	ldr	r3, [pc, #152]	; (8000844 <counter_7segmen2+0x1ec>)
 80007ac:	2206      	movs	r2, #6
 80007ae:	601a      	str	r2, [r3, #0]
					}
				break;
 80007b0:	e031      	b.n	8000816 <counter_7segmen2+0x1be>

			case AUTO_AMBER2:
					time_lane2--;
 80007b2:	4b25      	ldr	r3, [pc, #148]	; (8000848 <counter_7segmen2+0x1f0>)
 80007b4:	681b      	ldr	r3, [r3, #0]
 80007b6:	3b01      	subs	r3, #1
 80007b8:	4a23      	ldr	r2, [pc, #140]	; (8000848 <counter_7segmen2+0x1f0>)
 80007ba:	6013      	str	r3, [r2, #0]
					if (time_lane2 <= 0){
 80007bc:	4b22      	ldr	r3, [pc, #136]	; (8000848 <counter_7segmen2+0x1f0>)
 80007be:	681b      	ldr	r3, [r3, #0]
 80007c0:	2b00      	cmp	r3, #0
 80007c2:	dc2a      	bgt.n	800081a <counter_7segmen2+0x1c2>
						time_lane2 = TIME_RED / 1000;
 80007c4:	4b1a      	ldr	r3, [pc, #104]	; (8000830 <counter_7segmen2+0x1d8>)
 80007c6:	681b      	ldr	r3, [r3, #0]
 80007c8:	4a1a      	ldr	r2, [pc, #104]	; (8000834 <counter_7segmen2+0x1dc>)
 80007ca:	fb82 1203 	smull	r1, r2, r2, r3
 80007ce:	1192      	asrs	r2, r2, #6
 80007d0:	17db      	asrs	r3, r3, #31
 80007d2:	1ad3      	subs	r3, r2, r3
 80007d4:	4a1c      	ldr	r2, [pc, #112]	; (8000848 <counter_7segmen2+0x1f0>)
 80007d6:	6013      	str	r3, [r2, #0]
						status4 = AUTO_RED2;
 80007d8:	4b1a      	ldr	r3, [pc, #104]	; (8000844 <counter_7segmen2+0x1ec>)
 80007da:	2205      	movs	r2, #5
 80007dc:	601a      	str	r2, [r3, #0]
					}
				break;
 80007de:	e01c      	b.n	800081a <counter_7segmen2+0x1c2>

			case AUTO_GREEN2:
					time_lane2--;
 80007e0:	4b19      	ldr	r3, [pc, #100]	; (8000848 <counter_7segmen2+0x1f0>)
 80007e2:	681b      	ldr	r3, [r3, #0]
 80007e4:	3b01      	subs	r3, #1
 80007e6:	4a18      	ldr	r2, [pc, #96]	; (8000848 <counter_7segmen2+0x1f0>)
 80007e8:	6013      	str	r3, [r2, #0]
					if (time_lane2 <= 0){
 80007ea:	4b17      	ldr	r3, [pc, #92]	; (8000848 <counter_7segmen2+0x1f0>)
 80007ec:	681b      	ldr	r3, [r3, #0]
 80007ee:	2b00      	cmp	r3, #0
 80007f0:	dc15      	bgt.n	800081e <counter_7segmen2+0x1c6>
						time_lane2 = TIME_YELLOW / 1000;
 80007f2:	4b13      	ldr	r3, [pc, #76]	; (8000840 <counter_7segmen2+0x1e8>)
 80007f4:	681b      	ldr	r3, [r3, #0]
 80007f6:	4a0f      	ldr	r2, [pc, #60]	; (8000834 <counter_7segmen2+0x1dc>)
 80007f8:	fb82 1203 	smull	r1, r2, r2, r3
 80007fc:	1192      	asrs	r2, r2, #6
 80007fe:	17db      	asrs	r3, r3, #31
 8000800:	1ad3      	subs	r3, r2, r3
 8000802:	4a11      	ldr	r2, [pc, #68]	; (8000848 <counter_7segmen2+0x1f0>)
 8000804:	6013      	str	r3, [r2, #0]
						status4 = AUTO_AMBER2;
 8000806:	4b0f      	ldr	r3, [pc, #60]	; (8000844 <counter_7segmen2+0x1ec>)
 8000808:	2207      	movs	r2, #7
 800080a:	601a      	str	r2, [r3, #0]
					}
				break;
 800080c:	e007      	b.n	800081e <counter_7segmen2+0x1c6>

			default:
				break;
		}
	}
 800080e:	bf00      	nop
 8000810:	e006      	b.n	8000820 <counter_7segmen2+0x1c8>
				break;
 8000812:	bf00      	nop
 8000814:	e004      	b.n	8000820 <counter_7segmen2+0x1c8>
				break;
 8000816:	bf00      	nop
 8000818:	e002      	b.n	8000820 <counter_7segmen2+0x1c8>
				break;
 800081a:	bf00      	nop
 800081c:	e000      	b.n	8000820 <counter_7segmen2+0x1c8>
				break;
 800081e:	bf00      	nop

}
 8000820:	bf00      	nop
 8000822:	46bd      	mov	sp, r7
 8000824:	bc80      	pop	{r7}
 8000826:	4770      	bx	lr
 8000828:	200000f0 	.word	0x200000f0
 800082c:	200000fc 	.word	0x200000fc
 8000830:	20000044 	.word	0x20000044
 8000834:	10624dd3 	.word	0x10624dd3
 8000838:	20000108 	.word	0x20000108
 800083c:	2000004c 	.word	0x2000004c
 8000840:	20000048 	.word	0x20000048
 8000844:	20000100 	.word	0x20000100
 8000848:	2000010c 	.word	0x2000010c

0800084c <fsm_automatic_run_segmen>:


void fsm_automatic_run_segmen(){
 800084c:	b580      	push	{r7, lr}
 800084e:	af00      	add	r7, sp, #0
	if(timer_flag[3] == 1){
 8000850:	4b06      	ldr	r3, [pc, #24]	; (800086c <fsm_automatic_run_segmen+0x20>)
 8000852:	68db      	ldr	r3, [r3, #12]
 8000854:	2b01      	cmp	r3, #1
 8000856:	d106      	bne.n	8000866 <fsm_automatic_run_segmen+0x1a>
		counter_7segmen2();
 8000858:	f7ff fefe 	bl	8000658 <counter_7segmen2>
		setTimer0(3, 1000);
 800085c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000860:	2003      	movs	r0, #3
 8000862:	f000 fa37 	bl	8000cd4 <setTimer0>
	}
}
 8000866:	bf00      	nop
 8000868:	bd80      	pop	{r7, pc}
 800086a:	bf00      	nop
 800086c:	200001ec 	.word	0x200001ec

08000870 <updateLed>:

void updateLed(){
 8000870:	b580      	push	{r7, lr}
 8000872:	af00      	add	r7, sp, #0
	if(timer_flag[2] == 1){
 8000874:	4b09      	ldr	r3, [pc, #36]	; (800089c <updateLed+0x2c>)
 8000876:	689b      	ldr	r3, [r3, #8]
 8000878:	2b01      	cmp	r3, #1
 800087a:	d10d      	bne.n	8000898 <updateLed+0x28>
		updateClockBuffer(time_lane1, time_lane2);
 800087c:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <updateLed+0x30>)
 800087e:	681b      	ldr	r3, [r3, #0]
 8000880:	4a08      	ldr	r2, [pc, #32]	; (80008a4 <updateLed+0x34>)
 8000882:	6812      	ldr	r2, [r2, #0]
 8000884:	4611      	mov	r1, r2
 8000886:	4618      	mov	r0, r3
 8000888:	f7ff fd1e 	bl	80002c8 <updateClockBuffer>
		setTimer0(2, TIME_BLINK);
 800088c:	4b06      	ldr	r3, [pc, #24]	; (80008a8 <updateLed+0x38>)
 800088e:	681b      	ldr	r3, [r3, #0]
 8000890:	4619      	mov	r1, r3
 8000892:	2002      	movs	r0, #2
 8000894:	f000 fa1e 	bl	8000cd4 <setTimer0>
	}
}
 8000898:	bf00      	nop
 800089a:	bd80      	pop	{r7, pc}
 800089c:	200001ec 	.word	0x200001ec
 80008a0:	20000108 	.word	0x20000108
 80008a4:	2000010c 	.word	0x2000010c
 80008a8:	20000050 	.word	0x20000050

080008ac <lcd_send_cmd>:
 80008ac:	b580      	push	{r7, lr}
 80008ae:	b086      	sub	sp, #24
 80008b0:	af02      	add	r7, sp, #8
 80008b2:	4603      	mov	r3, r0
 80008b4:	71fb      	strb	r3, [r7, #7]
 80008b6:	79fb      	ldrb	r3, [r7, #7]
 80008b8:	f023 030f 	bic.w	r3, r3, #15
 80008bc:	73fb      	strb	r3, [r7, #15]
 80008be:	79fb      	ldrb	r3, [r7, #7]
 80008c0:	011b      	lsls	r3, r3, #4
 80008c2:	73bb      	strb	r3, [r7, #14]
 80008c4:	7bfb      	ldrb	r3, [r7, #15]
 80008c6:	f043 030c 	orr.w	r3, r3, #12
 80008ca:	b2db      	uxtb	r3, r3
 80008cc:	723b      	strb	r3, [r7, #8]
 80008ce:	7bfb      	ldrb	r3, [r7, #15]
 80008d0:	f043 0308 	orr.w	r3, r3, #8
 80008d4:	b2db      	uxtb	r3, r3
 80008d6:	727b      	strb	r3, [r7, #9]
 80008d8:	7bbb      	ldrb	r3, [r7, #14]
 80008da:	f043 030c 	orr.w	r3, r3, #12
 80008de:	b2db      	uxtb	r3, r3
 80008e0:	72bb      	strb	r3, [r7, #10]
 80008e2:	7bbb      	ldrb	r3, [r7, #14]
 80008e4:	f043 0308 	orr.w	r3, r3, #8
 80008e8:	b2db      	uxtb	r3, r3
 80008ea:	72fb      	strb	r3, [r7, #11]
 80008ec:	f107 0208 	add.w	r2, r7, #8
 80008f0:	2364      	movs	r3, #100	; 0x64
 80008f2:	9300      	str	r3, [sp, #0]
 80008f4:	2304      	movs	r3, #4
 80008f6:	2142      	movs	r1, #66	; 0x42
 80008f8:	4803      	ldr	r0, [pc, #12]	; (8000908 <lcd_send_cmd+0x5c>)
 80008fa:	f001 f995 	bl	8001c28 <HAL_I2C_Master_Transmit>
 80008fe:	bf00      	nop
 8000900:	3710      	adds	r7, #16
 8000902:	46bd      	mov	sp, r7
 8000904:	bd80      	pop	{r7, pc}
 8000906:	bf00      	nop
 8000908:	20000128 	.word	0x20000128

0800090c <lcd_send_data>:
 800090c:	b580      	push	{r7, lr}
 800090e:	b086      	sub	sp, #24
 8000910:	af02      	add	r7, sp, #8
 8000912:	4603      	mov	r3, r0
 8000914:	71fb      	strb	r3, [r7, #7]
 8000916:	79fb      	ldrb	r3, [r7, #7]
 8000918:	f023 030f 	bic.w	r3, r3, #15
 800091c:	73fb      	strb	r3, [r7, #15]
 800091e:	79fb      	ldrb	r3, [r7, #7]
 8000920:	011b      	lsls	r3, r3, #4
 8000922:	73bb      	strb	r3, [r7, #14]
 8000924:	7bfb      	ldrb	r3, [r7, #15]
 8000926:	f043 030d 	orr.w	r3, r3, #13
 800092a:	b2db      	uxtb	r3, r3
 800092c:	723b      	strb	r3, [r7, #8]
 800092e:	7bfb      	ldrb	r3, [r7, #15]
 8000930:	f043 0309 	orr.w	r3, r3, #9
 8000934:	b2db      	uxtb	r3, r3
 8000936:	727b      	strb	r3, [r7, #9]
 8000938:	7bbb      	ldrb	r3, [r7, #14]
 800093a:	f043 030d 	orr.w	r3, r3, #13
 800093e:	b2db      	uxtb	r3, r3
 8000940:	72bb      	strb	r3, [r7, #10]
 8000942:	7bbb      	ldrb	r3, [r7, #14]
 8000944:	f043 0309 	orr.w	r3, r3, #9
 8000948:	b2db      	uxtb	r3, r3
 800094a:	72fb      	strb	r3, [r7, #11]
 800094c:	f107 0208 	add.w	r2, r7, #8
 8000950:	2364      	movs	r3, #100	; 0x64
 8000952:	9300      	str	r3, [sp, #0]
 8000954:	2304      	movs	r3, #4
 8000956:	2142      	movs	r1, #66	; 0x42
 8000958:	4803      	ldr	r0, [pc, #12]	; (8000968 <lcd_send_data+0x5c>)
 800095a:	f001 f965 	bl	8001c28 <HAL_I2C_Master_Transmit>
 800095e:	bf00      	nop
 8000960:	3710      	adds	r7, #16
 8000962:	46bd      	mov	sp, r7
 8000964:	bd80      	pop	{r7, pc}
 8000966:	bf00      	nop
 8000968:	20000128 	.word	0x20000128

0800096c <lcd_init>:
 800096c:	b580      	push	{r7, lr}
 800096e:	af00      	add	r7, sp, #0
 8000970:	2033      	movs	r0, #51	; 0x33
 8000972:	f7ff ff9b 	bl	80008ac <lcd_send_cmd>
 8000976:	2032      	movs	r0, #50	; 0x32
 8000978:	f7ff ff98 	bl	80008ac <lcd_send_cmd>
 800097c:	2032      	movs	r0, #50	; 0x32
 800097e:	f000 fd29 	bl	80013d4 <HAL_Delay>
 8000982:	2028      	movs	r0, #40	; 0x28
 8000984:	f7ff ff92 	bl	80008ac <lcd_send_cmd>
 8000988:	2032      	movs	r0, #50	; 0x32
 800098a:	f000 fd23 	bl	80013d4 <HAL_Delay>
 800098e:	2001      	movs	r0, #1
 8000990:	f7ff ff8c 	bl	80008ac <lcd_send_cmd>
 8000994:	2032      	movs	r0, #50	; 0x32
 8000996:	f000 fd1d 	bl	80013d4 <HAL_Delay>
 800099a:	2006      	movs	r0, #6
 800099c:	f7ff ff86 	bl	80008ac <lcd_send_cmd>
 80009a0:	2032      	movs	r0, #50	; 0x32
 80009a2:	f000 fd17 	bl	80013d4 <HAL_Delay>
 80009a6:	200c      	movs	r0, #12
 80009a8:	f7ff ff80 	bl	80008ac <lcd_send_cmd>
 80009ac:	2032      	movs	r0, #50	; 0x32
 80009ae:	f000 fd11 	bl	80013d4 <HAL_Delay>
 80009b2:	2002      	movs	r0, #2
 80009b4:	f7ff ff7a 	bl	80008ac <lcd_send_cmd>
 80009b8:	2032      	movs	r0, #50	; 0x32
 80009ba:	f000 fd0b 	bl	80013d4 <HAL_Delay>
 80009be:	2080      	movs	r0, #128	; 0x80
 80009c0:	f7ff ff74 	bl	80008ac <lcd_send_cmd>
 80009c4:	bf00      	nop
 80009c6:	bd80      	pop	{r7, pc}

080009c8 <lcd_send_string>:
 80009c8:	b580      	push	{r7, lr}
 80009ca:	b082      	sub	sp, #8
 80009cc:	af00      	add	r7, sp, #0
 80009ce:	6078      	str	r0, [r7, #4]
 80009d0:	e006      	b.n	80009e0 <lcd_send_string+0x18>
 80009d2:	687b      	ldr	r3, [r7, #4]
 80009d4:	1c5a      	adds	r2, r3, #1
 80009d6:	607a      	str	r2, [r7, #4]
 80009d8:	781b      	ldrb	r3, [r3, #0]
 80009da:	4618      	mov	r0, r3
 80009dc:	f7ff ff96 	bl	800090c <lcd_send_data>
 80009e0:	687b      	ldr	r3, [r7, #4]
 80009e2:	781b      	ldrb	r3, [r3, #0]
 80009e4:	2b00      	cmp	r3, #0
 80009e6:	d1f4      	bne.n	80009d2 <lcd_send_string+0xa>
 80009e8:	bf00      	nop
 80009ea:	bf00      	nop
 80009ec:	3708      	adds	r7, #8
 80009ee:	46bd      	mov	sp, r7
 80009f0:	bd80      	pop	{r7, pc}

080009f2 <lcd_clear_display>:
 80009f2:	b580      	push	{r7, lr}
 80009f4:	af00      	add	r7, sp, #0
 80009f6:	2001      	movs	r0, #1
 80009f8:	f7ff ff58 	bl	80008ac <lcd_send_cmd>
 80009fc:	bf00      	nop
 80009fe:	bd80      	pop	{r7, pc}

08000a00 <lcd_goto_XY>:
 8000a00:	b580      	push	{r7, lr}
 8000a02:	b084      	sub	sp, #16
 8000a04:	af00      	add	r7, sp, #0
 8000a06:	6078      	str	r0, [r7, #4]
 8000a08:	6039      	str	r1, [r7, #0]
 8000a0a:	687b      	ldr	r3, [r7, #4]
 8000a0c:	2b01      	cmp	r3, #1
 8000a0e:	d108      	bne.n	8000a22 <lcd_goto_XY+0x22>
 8000a10:	687b      	ldr	r3, [r7, #4]
 8000a12:	b2da      	uxtb	r2, r3
 8000a14:	683b      	ldr	r3, [r7, #0]
 8000a16:	b2db      	uxtb	r3, r3
 8000a18:	4413      	add	r3, r2
 8000a1a:	b2db      	uxtb	r3, r3
 8000a1c:	337f      	adds	r3, #127	; 0x7f
 8000a1e:	73fb      	strb	r3, [r7, #15]
 8000a20:	e008      	b.n	8000a34 <lcd_goto_XY+0x34>
 8000a22:	683b      	ldr	r3, [r7, #0]
 8000a24:	b2db      	uxtb	r3, r3
 8000a26:	3340      	adds	r3, #64	; 0x40
 8000a28:	b2db      	uxtb	r3, r3
 8000a2a:	b25b      	sxtb	r3, r3
 8000a2c:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8000a30:	b25b      	sxtb	r3, r3
 8000a32:	73fb      	strb	r3, [r7, #15]
 8000a34:	7bfb      	ldrb	r3, [r7, #15]
 8000a36:	4618      	mov	r0, r3
 8000a38:	f7ff ff38 	bl	80008ac <lcd_send_cmd>
 8000a3c:	bf00      	nop
 8000a3e:	3710      	adds	r7, #16
 8000a40:	46bd      	mov	sp, r7
 8000a42:	bd80      	pop	{r7, pc}

08000a44 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000a44:	b580      	push	{r7, lr}
 8000a46:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000a48:	f000 fc62 	bl	8001310 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000a4c:	f000 f818 	bl	8000a80 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000a50:	f000 f8cc 	bl	8000bec <MX_GPIO_Init>
  MX_TIM2_Init();
 8000a54:	f000 f87e 	bl	8000b54 <MX_TIM2_Init>
  MX_I2C1_Init();
 8000a58:	f000 f84e 	bl	8000af8 <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8000a5c:	4806      	ldr	r0, [pc, #24]	; (8000a78 <main+0x34>)
 8000a5e:	f002 f885 	bl	8002b6c <HAL_TIM_Base_Start_IT>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

  lcd_init();
 8000a62:	f7ff ff83 	bl	800096c <lcd_init>
  status0 = INIT_BUTTON;
 8000a66:	4b05      	ldr	r3, [pc, #20]	; (8000a7c <main+0x38>)
 8000a68:	2200      	movs	r2, #0
 8000a6a:	601a      	str	r2, [r3, #0]
  while (1)
  {
    /* USER CODE END WHILE */
		fsm_automatic_run();
 8000a6c:	f7ff fc7e 	bl	800036c <fsm_automatic_run>
		fsm_manual_run();
 8000a70:	f7ff fc86 	bl	8000380 <fsm_manual_run>
		fsm_automatic_run();
 8000a74:	e7fa      	b.n	8000a6c <main+0x28>
 8000a76:	bf00      	nop
 8000a78:	2000017c 	.word	0x2000017c
 8000a7c:	200000f0 	.word	0x200000f0

08000a80 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000a80:	b580      	push	{r7, lr}
 8000a82:	b090      	sub	sp, #64	; 0x40
 8000a84:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000a86:	f107 0318 	add.w	r3, r7, #24
 8000a8a:	2228      	movs	r2, #40	; 0x28
 8000a8c:	2100      	movs	r1, #0
 8000a8e:	4618      	mov	r0, r3
 8000a90:	f002 fc38 	bl	8003304 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000a94:	1d3b      	adds	r3, r7, #4
 8000a96:	2200      	movs	r2, #0
 8000a98:	601a      	str	r2, [r3, #0]
 8000a9a:	605a      	str	r2, [r3, #4]
 8000a9c:	609a      	str	r2, [r3, #8]
 8000a9e:	60da      	str	r2, [r3, #12]
 8000aa0:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000aa2:	2302      	movs	r3, #2
 8000aa4:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000aa6:	2301      	movs	r3, #1
 8000aa8:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000aaa:	2310      	movs	r3, #16
 8000aac:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000aae:	2300      	movs	r3, #0
 8000ab0:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000ab2:	f107 0318 	add.w	r3, r7, #24
 8000ab6:	4618      	mov	r0, r3
 8000ab8:	f001 fc0e 	bl	80022d8 <HAL_RCC_OscConfig>
 8000abc:	4603      	mov	r3, r0
 8000abe:	2b00      	cmp	r3, #0
 8000ac0:	d001      	beq.n	8000ac6 <SystemClock_Config+0x46>
  {
    Error_Handler();
 8000ac2:	f000 f901 	bl	8000cc8 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000ac6:	230f      	movs	r3, #15
 8000ac8:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000aca:	2300      	movs	r3, #0
 8000acc:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000ace:	2300      	movs	r3, #0
 8000ad0:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000ad2:	2300      	movs	r3, #0
 8000ad4:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000ad6:	2300      	movs	r3, #0
 8000ad8:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000ada:	1d3b      	adds	r3, r7, #4
 8000adc:	2100      	movs	r1, #0
 8000ade:	4618      	mov	r0, r3
 8000ae0:	f001 fe7a 	bl	80027d8 <HAL_RCC_ClockConfig>
 8000ae4:	4603      	mov	r3, r0
 8000ae6:	2b00      	cmp	r3, #0
 8000ae8:	d001      	beq.n	8000aee <SystemClock_Config+0x6e>
  {
    Error_Handler();
 8000aea:	f000 f8ed 	bl	8000cc8 <Error_Handler>
  }
}
 8000aee:	bf00      	nop
 8000af0:	3740      	adds	r7, #64	; 0x40
 8000af2:	46bd      	mov	sp, r7
 8000af4:	bd80      	pop	{r7, pc}
	...

08000af8 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8000af8:	b580      	push	{r7, lr}
 8000afa:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000afc:	4b12      	ldr	r3, [pc, #72]	; (8000b48 <MX_I2C1_Init+0x50>)
 8000afe:	4a13      	ldr	r2, [pc, #76]	; (8000b4c <MX_I2C1_Init+0x54>)
 8000b00:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8000b02:	4b11      	ldr	r3, [pc, #68]	; (8000b48 <MX_I2C1_Init+0x50>)
 8000b04:	4a12      	ldr	r2, [pc, #72]	; (8000b50 <MX_I2C1_Init+0x58>)
 8000b06:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000b08:	4b0f      	ldr	r3, [pc, #60]	; (8000b48 <MX_I2C1_Init+0x50>)
 8000b0a:	2200      	movs	r2, #0
 8000b0c:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8000b0e:	4b0e      	ldr	r3, [pc, #56]	; (8000b48 <MX_I2C1_Init+0x50>)
 8000b10:	2200      	movs	r2, #0
 8000b12:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000b14:	4b0c      	ldr	r3, [pc, #48]	; (8000b48 <MX_I2C1_Init+0x50>)
 8000b16:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000b1a:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000b1c:	4b0a      	ldr	r3, [pc, #40]	; (8000b48 <MX_I2C1_Init+0x50>)
 8000b1e:	2200      	movs	r2, #0
 8000b20:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8000b22:	4b09      	ldr	r3, [pc, #36]	; (8000b48 <MX_I2C1_Init+0x50>)
 8000b24:	2200      	movs	r2, #0
 8000b26:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000b28:	4b07      	ldr	r3, [pc, #28]	; (8000b48 <MX_I2C1_Init+0x50>)
 8000b2a:	2200      	movs	r2, #0
 8000b2c:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000b2e:	4b06      	ldr	r3, [pc, #24]	; (8000b48 <MX_I2C1_Init+0x50>)
 8000b30:	2200      	movs	r2, #0
 8000b32:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8000b34:	4804      	ldr	r0, [pc, #16]	; (8000b48 <MX_I2C1_Init+0x50>)
 8000b36:	f000 ff33 	bl	80019a0 <HAL_I2C_Init>
 8000b3a:	4603      	mov	r3, r0
 8000b3c:	2b00      	cmp	r3, #0
 8000b3e:	d001      	beq.n	8000b44 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8000b40:	f000 f8c2 	bl	8000cc8 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8000b44:	bf00      	nop
 8000b46:	bd80      	pop	{r7, pc}
 8000b48:	20000128 	.word	0x20000128
 8000b4c:	40005400 	.word	0x40005400
 8000b50:	000186a0 	.word	0x000186a0

08000b54 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000b54:	b580      	push	{r7, lr}
 8000b56:	b086      	sub	sp, #24
 8000b58:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000b5a:	f107 0308 	add.w	r3, r7, #8
 8000b5e:	2200      	movs	r2, #0
 8000b60:	601a      	str	r2, [r3, #0]
 8000b62:	605a      	str	r2, [r3, #4]
 8000b64:	609a      	str	r2, [r3, #8]
 8000b66:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000b68:	463b      	mov	r3, r7
 8000b6a:	2200      	movs	r2, #0
 8000b6c:	601a      	str	r2, [r3, #0]
 8000b6e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000b70:	4b1d      	ldr	r3, [pc, #116]	; (8000be8 <MX_TIM2_Init+0x94>)
 8000b72:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000b76:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7999;
 8000b78:	4b1b      	ldr	r3, [pc, #108]	; (8000be8 <MX_TIM2_Init+0x94>)
 8000b7a:	f641 723f 	movw	r2, #7999	; 0x1f3f
 8000b7e:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000b80:	4b19      	ldr	r3, [pc, #100]	; (8000be8 <MX_TIM2_Init+0x94>)
 8000b82:	2200      	movs	r2, #0
 8000b84:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9;
 8000b86:	4b18      	ldr	r3, [pc, #96]	; (8000be8 <MX_TIM2_Init+0x94>)
 8000b88:	2209      	movs	r2, #9
 8000b8a:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000b8c:	4b16      	ldr	r3, [pc, #88]	; (8000be8 <MX_TIM2_Init+0x94>)
 8000b8e:	2200      	movs	r2, #0
 8000b90:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000b92:	4b15      	ldr	r3, [pc, #84]	; (8000be8 <MX_TIM2_Init+0x94>)
 8000b94:	2200      	movs	r2, #0
 8000b96:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000b98:	4813      	ldr	r0, [pc, #76]	; (8000be8 <MX_TIM2_Init+0x94>)
 8000b9a:	f001 ff97 	bl	8002acc <HAL_TIM_Base_Init>
 8000b9e:	4603      	mov	r3, r0
 8000ba0:	2b00      	cmp	r3, #0
 8000ba2:	d001      	beq.n	8000ba8 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8000ba4:	f000 f890 	bl	8000cc8 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000ba8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000bac:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000bae:	f107 0308 	add.w	r3, r7, #8
 8000bb2:	4619      	mov	r1, r3
 8000bb4:	480c      	ldr	r0, [pc, #48]	; (8000be8 <MX_TIM2_Init+0x94>)
 8000bb6:	f002 f91b 	bl	8002df0 <HAL_TIM_ConfigClockSource>
 8000bba:	4603      	mov	r3, r0
 8000bbc:	2b00      	cmp	r3, #0
 8000bbe:	d001      	beq.n	8000bc4 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8000bc0:	f000 f882 	bl	8000cc8 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000bc4:	2300      	movs	r3, #0
 8000bc6:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000bc8:	2300      	movs	r3, #0
 8000bca:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000bcc:	463b      	mov	r3, r7
 8000bce:	4619      	mov	r1, r3
 8000bd0:	4805      	ldr	r0, [pc, #20]	; (8000be8 <MX_TIM2_Init+0x94>)
 8000bd2:	f002 fafd 	bl	80031d0 <HAL_TIMEx_MasterConfigSynchronization>
 8000bd6:	4603      	mov	r3, r0
 8000bd8:	2b00      	cmp	r3, #0
 8000bda:	d001      	beq.n	8000be0 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8000bdc:	f000 f874 	bl	8000cc8 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000be0:	bf00      	nop
 8000be2:	3718      	adds	r7, #24
 8000be4:	46bd      	mov	sp, r7
 8000be6:	bd80      	pop	{r7, pc}
 8000be8:	2000017c 	.word	0x2000017c

08000bec <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000bec:	b580      	push	{r7, lr}
 8000bee:	b086      	sub	sp, #24
 8000bf0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000bf2:	f107 0308 	add.w	r3, r7, #8
 8000bf6:	2200      	movs	r2, #0
 8000bf8:	601a      	str	r2, [r3, #0]
 8000bfa:	605a      	str	r2, [r3, #4]
 8000bfc:	609a      	str	r2, [r3, #8]
 8000bfe:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000c00:	4b28      	ldr	r3, [pc, #160]	; (8000ca4 <MX_GPIO_Init+0xb8>)
 8000c02:	699b      	ldr	r3, [r3, #24]
 8000c04:	4a27      	ldr	r2, [pc, #156]	; (8000ca4 <MX_GPIO_Init+0xb8>)
 8000c06:	f043 0304 	orr.w	r3, r3, #4
 8000c0a:	6193      	str	r3, [r2, #24]
 8000c0c:	4b25      	ldr	r3, [pc, #148]	; (8000ca4 <MX_GPIO_Init+0xb8>)
 8000c0e:	699b      	ldr	r3, [r3, #24]
 8000c10:	f003 0304 	and.w	r3, r3, #4
 8000c14:	607b      	str	r3, [r7, #4]
 8000c16:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c18:	4b22      	ldr	r3, [pc, #136]	; (8000ca4 <MX_GPIO_Init+0xb8>)
 8000c1a:	699b      	ldr	r3, [r3, #24]
 8000c1c:	4a21      	ldr	r2, [pc, #132]	; (8000ca4 <MX_GPIO_Init+0xb8>)
 8000c1e:	f043 0308 	orr.w	r3, r3, #8
 8000c22:	6193      	str	r3, [r2, #24]
 8000c24:	4b1f      	ldr	r3, [pc, #124]	; (8000ca4 <MX_GPIO_Init+0xb8>)
 8000c26:	699b      	ldr	r3, [r3, #24]
 8000c28:	f003 0308 	and.w	r3, r3, #8
 8000c2c:	603b      	str	r3, [r7, #0]
 8000c2e:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LED1_Pin|LED4_8_Pin|LED4_9_Pin, GPIO_PIN_RESET);
 8000c30:	2200      	movs	r2, #0
 8000c32:	f44f 7148 	mov.w	r1, #800	; 0x320
 8000c36:	481c      	ldr	r0, [pc, #112]	; (8000ca8 <MX_GPIO_Init+0xbc>)
 8000c38:	f000 fe99 	bl	800196e <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED1_3_Pin|LED1_5_Pin, GPIO_PIN_RESET);
 8000c3c:	2200      	movs	r2, #0
 8000c3e:	2128      	movs	r1, #40	; 0x28
 8000c40:	481a      	ldr	r0, [pc, #104]	; (8000cac <MX_GPIO_Init+0xc0>)
 8000c42:	f000 fe94 	bl	800196e <HAL_GPIO_WritePin>

  /*Configure GPIO pins : LED1_Pin LED4_8_Pin LED4_9_Pin */
  GPIO_InitStruct.Pin = LED1_Pin|LED4_8_Pin|LED4_9_Pin;
 8000c46:	f44f 7348 	mov.w	r3, #800	; 0x320
 8000c4a:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c4c:	2301      	movs	r3, #1
 8000c4e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c50:	2300      	movs	r3, #0
 8000c52:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c54:	2302      	movs	r3, #2
 8000c56:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000c58:	f107 0308 	add.w	r3, r7, #8
 8000c5c:	4619      	mov	r1, r3
 8000c5e:	4812      	ldr	r0, [pc, #72]	; (8000ca8 <MX_GPIO_Init+0xbc>)
 8000c60:	f000 fcea 	bl	8001638 <HAL_GPIO_Init>

  /*Configure GPIO pins : BUTTON2_Pin BUTTON1_Pin BUTTON3_Pin */
  GPIO_InitStruct.Pin = BUTTON2_Pin|BUTTON1_Pin|BUTTON3_Pin;
 8000c64:	f44f 638a 	mov.w	r3, #1104	; 0x450
 8000c68:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000c6a:	2300      	movs	r3, #0
 8000c6c:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000c6e:	2302      	movs	r3, #2
 8000c70:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c72:	f107 0308 	add.w	r3, r7, #8
 8000c76:	4619      	mov	r1, r3
 8000c78:	480c      	ldr	r0, [pc, #48]	; (8000cac <MX_GPIO_Init+0xc0>)
 8000c7a:	f000 fcdd 	bl	8001638 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED1_3_Pin LED1_5_Pin */
  GPIO_InitStruct.Pin = LED1_3_Pin|LED1_5_Pin;
 8000c7e:	2328      	movs	r3, #40	; 0x28
 8000c80:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c82:	2301      	movs	r3, #1
 8000c84:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c86:	2300      	movs	r3, #0
 8000c88:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c8a:	2302      	movs	r3, #2
 8000c8c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c8e:	f107 0308 	add.w	r3, r7, #8
 8000c92:	4619      	mov	r1, r3
 8000c94:	4805      	ldr	r0, [pc, #20]	; (8000cac <MX_GPIO_Init+0xc0>)
 8000c96:	f000 fccf 	bl	8001638 <HAL_GPIO_Init>

}
 8000c9a:	bf00      	nop
 8000c9c:	3718      	adds	r7, #24
 8000c9e:	46bd      	mov	sp, r7
 8000ca0:	bd80      	pop	{r7, pc}
 8000ca2:	bf00      	nop
 8000ca4:	40021000 	.word	0x40021000
 8000ca8:	40010800 	.word	0x40010800
 8000cac:	40010c00 	.word	0x40010c00

08000cb0 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000cb0:	b580      	push	{r7, lr}
 8000cb2:	b082      	sub	sp, #8
 8000cb4:	af00      	add	r7, sp, #0
 8000cb6:	6078      	str	r0, [r7, #4]
	getKeyInput();
 8000cb8:	f7ff fa76 	bl	80001a8 <getKeyInput>
	timer_run();
 8000cbc:	f000 f828 	bl	8000d10 <timer_run>
}
 8000cc0:	bf00      	nop
 8000cc2:	3708      	adds	r7, #8
 8000cc4:	46bd      	mov	sp, r7
 8000cc6:	bd80      	pop	{r7, pc}

08000cc8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000cc8:	b480      	push	{r7}
 8000cca:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000ccc:	b672      	cpsid	i
}
 8000cce:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000cd0:	e7fe      	b.n	8000cd0 <Error_Handler+0x8>
	...

08000cd4 <setTimer0>:
 8000cd4:	b480      	push	{r7}
 8000cd6:	b083      	sub	sp, #12
 8000cd8:	af00      	add	r7, sp, #0
 8000cda:	6078      	str	r0, [r7, #4]
 8000cdc:	6039      	str	r1, [r7, #0]
 8000cde:	4b09      	ldr	r3, [pc, #36]	; (8000d04 <setTimer0+0x30>)
 8000ce0:	681b      	ldr	r3, [r3, #0]
 8000ce2:	683a      	ldr	r2, [r7, #0]
 8000ce4:	fb92 f2f3 	sdiv	r2, r2, r3
 8000ce8:	4907      	ldr	r1, [pc, #28]	; (8000d08 <setTimer0+0x34>)
 8000cea:	687b      	ldr	r3, [r7, #4]
 8000cec:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000cf0:	4a06      	ldr	r2, [pc, #24]	; (8000d0c <setTimer0+0x38>)
 8000cf2:	687b      	ldr	r3, [r7, #4]
 8000cf4:	2100      	movs	r1, #0
 8000cf6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000cfa:	bf00      	nop
 8000cfc:	370c      	adds	r7, #12
 8000cfe:	46bd      	mov	sp, r7
 8000d00:	bc80      	pop	{r7}
 8000d02:	4770      	bx	lr
 8000d04:	20000054 	.word	0x20000054
 8000d08:	200001c4 	.word	0x200001c4
 8000d0c:	200001ec 	.word	0x200001ec

08000d10 <timer_run>:
 8000d10:	b480      	push	{r7}
 8000d12:	af00      	add	r7, sp, #0
 8000d14:	4b21      	ldr	r3, [pc, #132]	; (8000d9c <timer_run+0x8c>)
 8000d16:	681b      	ldr	r3, [r3, #0]
 8000d18:	2b00      	cmp	r3, #0
 8000d1a:	dd0b      	ble.n	8000d34 <timer_run+0x24>
 8000d1c:	4b1f      	ldr	r3, [pc, #124]	; (8000d9c <timer_run+0x8c>)
 8000d1e:	681b      	ldr	r3, [r3, #0]
 8000d20:	3b01      	subs	r3, #1
 8000d22:	4a1e      	ldr	r2, [pc, #120]	; (8000d9c <timer_run+0x8c>)
 8000d24:	6013      	str	r3, [r2, #0]
 8000d26:	4b1d      	ldr	r3, [pc, #116]	; (8000d9c <timer_run+0x8c>)
 8000d28:	681b      	ldr	r3, [r3, #0]
 8000d2a:	2b00      	cmp	r3, #0
 8000d2c:	dc02      	bgt.n	8000d34 <timer_run+0x24>
 8000d2e:	4b1c      	ldr	r3, [pc, #112]	; (8000da0 <timer_run+0x90>)
 8000d30:	2201      	movs	r2, #1
 8000d32:	601a      	str	r2, [r3, #0]
 8000d34:	4b19      	ldr	r3, [pc, #100]	; (8000d9c <timer_run+0x8c>)
 8000d36:	685b      	ldr	r3, [r3, #4]
 8000d38:	2b00      	cmp	r3, #0
 8000d3a:	dd0b      	ble.n	8000d54 <timer_run+0x44>
 8000d3c:	4b17      	ldr	r3, [pc, #92]	; (8000d9c <timer_run+0x8c>)
 8000d3e:	685b      	ldr	r3, [r3, #4]
 8000d40:	3b01      	subs	r3, #1
 8000d42:	4a16      	ldr	r2, [pc, #88]	; (8000d9c <timer_run+0x8c>)
 8000d44:	6053      	str	r3, [r2, #4]
 8000d46:	4b15      	ldr	r3, [pc, #84]	; (8000d9c <timer_run+0x8c>)
 8000d48:	685b      	ldr	r3, [r3, #4]
 8000d4a:	2b00      	cmp	r3, #0
 8000d4c:	dc02      	bgt.n	8000d54 <timer_run+0x44>
 8000d4e:	4b14      	ldr	r3, [pc, #80]	; (8000da0 <timer_run+0x90>)
 8000d50:	2201      	movs	r2, #1
 8000d52:	605a      	str	r2, [r3, #4]
 8000d54:	4b11      	ldr	r3, [pc, #68]	; (8000d9c <timer_run+0x8c>)
 8000d56:	689b      	ldr	r3, [r3, #8]
 8000d58:	2b00      	cmp	r3, #0
 8000d5a:	dd0b      	ble.n	8000d74 <timer_run+0x64>
 8000d5c:	4b0f      	ldr	r3, [pc, #60]	; (8000d9c <timer_run+0x8c>)
 8000d5e:	689b      	ldr	r3, [r3, #8]
 8000d60:	3b01      	subs	r3, #1
 8000d62:	4a0e      	ldr	r2, [pc, #56]	; (8000d9c <timer_run+0x8c>)
 8000d64:	6093      	str	r3, [r2, #8]
 8000d66:	4b0d      	ldr	r3, [pc, #52]	; (8000d9c <timer_run+0x8c>)
 8000d68:	689b      	ldr	r3, [r3, #8]
 8000d6a:	2b00      	cmp	r3, #0
 8000d6c:	dc02      	bgt.n	8000d74 <timer_run+0x64>
 8000d6e:	4b0c      	ldr	r3, [pc, #48]	; (8000da0 <timer_run+0x90>)
 8000d70:	2201      	movs	r2, #1
 8000d72:	609a      	str	r2, [r3, #8]
 8000d74:	4b09      	ldr	r3, [pc, #36]	; (8000d9c <timer_run+0x8c>)
 8000d76:	68db      	ldr	r3, [r3, #12]
 8000d78:	2b00      	cmp	r3, #0
 8000d7a:	dd0b      	ble.n	8000d94 <timer_run+0x84>
 8000d7c:	4b07      	ldr	r3, [pc, #28]	; (8000d9c <timer_run+0x8c>)
 8000d7e:	68db      	ldr	r3, [r3, #12]
 8000d80:	3b01      	subs	r3, #1
 8000d82:	4a06      	ldr	r2, [pc, #24]	; (8000d9c <timer_run+0x8c>)
 8000d84:	60d3      	str	r3, [r2, #12]
 8000d86:	4b05      	ldr	r3, [pc, #20]	; (8000d9c <timer_run+0x8c>)
 8000d88:	68db      	ldr	r3, [r3, #12]
 8000d8a:	2b00      	cmp	r3, #0
 8000d8c:	dc02      	bgt.n	8000d94 <timer_run+0x84>
 8000d8e:	4b04      	ldr	r3, [pc, #16]	; (8000da0 <timer_run+0x90>)
 8000d90:	2201      	movs	r2, #1
 8000d92:	60da      	str	r2, [r3, #12]
 8000d94:	bf00      	nop
 8000d96:	46bd      	mov	sp, r7
 8000d98:	bc80      	pop	{r7}
 8000d9a:	4770      	bx	lr
 8000d9c:	200001c4 	.word	0x200001c4
 8000da0:	200001ec 	.word	0x200001ec

08000da4 <HAL_MspInit>:
 8000da4:	b480      	push	{r7}
 8000da6:	b085      	sub	sp, #20
 8000da8:	af00      	add	r7, sp, #0
 8000daa:	4b15      	ldr	r3, [pc, #84]	; (8000e00 <HAL_MspInit+0x5c>)
 8000dac:	699b      	ldr	r3, [r3, #24]
 8000dae:	4a14      	ldr	r2, [pc, #80]	; (8000e00 <HAL_MspInit+0x5c>)
 8000db0:	f043 0301 	orr.w	r3, r3, #1
 8000db4:	6193      	str	r3, [r2, #24]
 8000db6:	4b12      	ldr	r3, [pc, #72]	; (8000e00 <HAL_MspInit+0x5c>)
 8000db8:	699b      	ldr	r3, [r3, #24]
 8000dba:	f003 0301 	and.w	r3, r3, #1
 8000dbe:	60bb      	str	r3, [r7, #8]
 8000dc0:	68bb      	ldr	r3, [r7, #8]
 8000dc2:	4b0f      	ldr	r3, [pc, #60]	; (8000e00 <HAL_MspInit+0x5c>)
 8000dc4:	69db      	ldr	r3, [r3, #28]
 8000dc6:	4a0e      	ldr	r2, [pc, #56]	; (8000e00 <HAL_MspInit+0x5c>)
 8000dc8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000dcc:	61d3      	str	r3, [r2, #28]
 8000dce:	4b0c      	ldr	r3, [pc, #48]	; (8000e00 <HAL_MspInit+0x5c>)
 8000dd0:	69db      	ldr	r3, [r3, #28]
 8000dd2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000dd6:	607b      	str	r3, [r7, #4]
 8000dd8:	687b      	ldr	r3, [r7, #4]
 8000dda:	4b0a      	ldr	r3, [pc, #40]	; (8000e04 <HAL_MspInit+0x60>)
 8000ddc:	685b      	ldr	r3, [r3, #4]
 8000dde:	60fb      	str	r3, [r7, #12]
 8000de0:	68fb      	ldr	r3, [r7, #12]
 8000de2:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000de6:	60fb      	str	r3, [r7, #12]
 8000de8:	68fb      	ldr	r3, [r7, #12]
 8000dea:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000dee:	60fb      	str	r3, [r7, #12]
 8000df0:	4a04      	ldr	r2, [pc, #16]	; (8000e04 <HAL_MspInit+0x60>)
 8000df2:	68fb      	ldr	r3, [r7, #12]
 8000df4:	6053      	str	r3, [r2, #4]
 8000df6:	bf00      	nop
 8000df8:	3714      	adds	r7, #20
 8000dfa:	46bd      	mov	sp, r7
 8000dfc:	bc80      	pop	{r7}
 8000dfe:	4770      	bx	lr
 8000e00:	40021000 	.word	0x40021000
 8000e04:	40010000 	.word	0x40010000

08000e08 <HAL_I2C_MspInit>:
 8000e08:	b580      	push	{r7, lr}
 8000e0a:	b08a      	sub	sp, #40	; 0x28
 8000e0c:	af00      	add	r7, sp, #0
 8000e0e:	6078      	str	r0, [r7, #4]
 8000e10:	f107 0314 	add.w	r3, r7, #20
 8000e14:	2200      	movs	r2, #0
 8000e16:	601a      	str	r2, [r3, #0]
 8000e18:	605a      	str	r2, [r3, #4]
 8000e1a:	609a      	str	r2, [r3, #8]
 8000e1c:	60da      	str	r2, [r3, #12]
 8000e1e:	687b      	ldr	r3, [r7, #4]
 8000e20:	681b      	ldr	r3, [r3, #0]
 8000e22:	4a1d      	ldr	r2, [pc, #116]	; (8000e98 <HAL_I2C_MspInit+0x90>)
 8000e24:	4293      	cmp	r3, r2
 8000e26:	d132      	bne.n	8000e8e <HAL_I2C_MspInit+0x86>
 8000e28:	4b1c      	ldr	r3, [pc, #112]	; (8000e9c <HAL_I2C_MspInit+0x94>)
 8000e2a:	699b      	ldr	r3, [r3, #24]
 8000e2c:	4a1b      	ldr	r2, [pc, #108]	; (8000e9c <HAL_I2C_MspInit+0x94>)
 8000e2e:	f043 0308 	orr.w	r3, r3, #8
 8000e32:	6193      	str	r3, [r2, #24]
 8000e34:	4b19      	ldr	r3, [pc, #100]	; (8000e9c <HAL_I2C_MspInit+0x94>)
 8000e36:	699b      	ldr	r3, [r3, #24]
 8000e38:	f003 0308 	and.w	r3, r3, #8
 8000e3c:	613b      	str	r3, [r7, #16]
 8000e3e:	693b      	ldr	r3, [r7, #16]
 8000e40:	f44f 7340 	mov.w	r3, #768	; 0x300
 8000e44:	617b      	str	r3, [r7, #20]
 8000e46:	2312      	movs	r3, #18
 8000e48:	61bb      	str	r3, [r7, #24]
 8000e4a:	2303      	movs	r3, #3
 8000e4c:	623b      	str	r3, [r7, #32]
 8000e4e:	f107 0314 	add.w	r3, r7, #20
 8000e52:	4619      	mov	r1, r3
 8000e54:	4812      	ldr	r0, [pc, #72]	; (8000ea0 <HAL_I2C_MspInit+0x98>)
 8000e56:	f000 fbef 	bl	8001638 <HAL_GPIO_Init>
 8000e5a:	4b12      	ldr	r3, [pc, #72]	; (8000ea4 <HAL_I2C_MspInit+0x9c>)
 8000e5c:	685b      	ldr	r3, [r3, #4]
 8000e5e:	627b      	str	r3, [r7, #36]	; 0x24
 8000e60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000e62:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8000e66:	627b      	str	r3, [r7, #36]	; 0x24
 8000e68:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000e6a:	f043 0302 	orr.w	r3, r3, #2
 8000e6e:	627b      	str	r3, [r7, #36]	; 0x24
 8000e70:	4a0c      	ldr	r2, [pc, #48]	; (8000ea4 <HAL_I2C_MspInit+0x9c>)
 8000e72:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000e74:	6053      	str	r3, [r2, #4]
 8000e76:	4b09      	ldr	r3, [pc, #36]	; (8000e9c <HAL_I2C_MspInit+0x94>)
 8000e78:	69db      	ldr	r3, [r3, #28]
 8000e7a:	4a08      	ldr	r2, [pc, #32]	; (8000e9c <HAL_I2C_MspInit+0x94>)
 8000e7c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000e80:	61d3      	str	r3, [r2, #28]
 8000e82:	4b06      	ldr	r3, [pc, #24]	; (8000e9c <HAL_I2C_MspInit+0x94>)
 8000e84:	69db      	ldr	r3, [r3, #28]
 8000e86:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8000e8a:	60fb      	str	r3, [r7, #12]
 8000e8c:	68fb      	ldr	r3, [r7, #12]
 8000e8e:	bf00      	nop
 8000e90:	3728      	adds	r7, #40	; 0x28
 8000e92:	46bd      	mov	sp, r7
 8000e94:	bd80      	pop	{r7, pc}
 8000e96:	bf00      	nop
 8000e98:	40005400 	.word	0x40005400
 8000e9c:	40021000 	.word	0x40021000
 8000ea0:	40010c00 	.word	0x40010c00
 8000ea4:	40010000 	.word	0x40010000

08000ea8 <HAL_TIM_Base_MspInit>:
 8000ea8:	b580      	push	{r7, lr}
 8000eaa:	b084      	sub	sp, #16
 8000eac:	af00      	add	r7, sp, #0
 8000eae:	6078      	str	r0, [r7, #4]
 8000eb0:	687b      	ldr	r3, [r7, #4]
 8000eb2:	681b      	ldr	r3, [r3, #0]
 8000eb4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000eb8:	d113      	bne.n	8000ee2 <HAL_TIM_Base_MspInit+0x3a>
 8000eba:	4b0c      	ldr	r3, [pc, #48]	; (8000eec <HAL_TIM_Base_MspInit+0x44>)
 8000ebc:	69db      	ldr	r3, [r3, #28]
 8000ebe:	4a0b      	ldr	r2, [pc, #44]	; (8000eec <HAL_TIM_Base_MspInit+0x44>)
 8000ec0:	f043 0301 	orr.w	r3, r3, #1
 8000ec4:	61d3      	str	r3, [r2, #28]
 8000ec6:	4b09      	ldr	r3, [pc, #36]	; (8000eec <HAL_TIM_Base_MspInit+0x44>)
 8000ec8:	69db      	ldr	r3, [r3, #28]
 8000eca:	f003 0301 	and.w	r3, r3, #1
 8000ece:	60fb      	str	r3, [r7, #12]
 8000ed0:	68fb      	ldr	r3, [r7, #12]
 8000ed2:	2200      	movs	r2, #0
 8000ed4:	2100      	movs	r1, #0
 8000ed6:	201c      	movs	r0, #28
 8000ed8:	f000 fb77 	bl	80015ca <HAL_NVIC_SetPriority>
 8000edc:	201c      	movs	r0, #28
 8000ede:	f000 fb90 	bl	8001602 <HAL_NVIC_EnableIRQ>
 8000ee2:	bf00      	nop
 8000ee4:	3710      	adds	r7, #16
 8000ee6:	46bd      	mov	sp, r7
 8000ee8:	bd80      	pop	{r7, pc}
 8000eea:	bf00      	nop
 8000eec:	40021000 	.word	0x40021000

08000ef0 <NMI_Handler>:
 8000ef0:	b480      	push	{r7}
 8000ef2:	af00      	add	r7, sp, #0
 8000ef4:	e7fe      	b.n	8000ef4 <NMI_Handler+0x4>

08000ef6 <HardFault_Handler>:
 8000ef6:	b480      	push	{r7}
 8000ef8:	af00      	add	r7, sp, #0
 8000efa:	e7fe      	b.n	8000efa <HardFault_Handler+0x4>

08000efc <MemManage_Handler>:
 8000efc:	b480      	push	{r7}
 8000efe:	af00      	add	r7, sp, #0
 8000f00:	e7fe      	b.n	8000f00 <MemManage_Handler+0x4>

08000f02 <BusFault_Handler>:
 8000f02:	b480      	push	{r7}
 8000f04:	af00      	add	r7, sp, #0
 8000f06:	e7fe      	b.n	8000f06 <BusFault_Handler+0x4>

08000f08 <UsageFault_Handler>:
 8000f08:	b480      	push	{r7}
 8000f0a:	af00      	add	r7, sp, #0
 8000f0c:	e7fe      	b.n	8000f0c <UsageFault_Handler+0x4>

08000f0e <SVC_Handler>:
 8000f0e:	b480      	push	{r7}
 8000f10:	af00      	add	r7, sp, #0
 8000f12:	bf00      	nop
 8000f14:	46bd      	mov	sp, r7
 8000f16:	bc80      	pop	{r7}
 8000f18:	4770      	bx	lr

08000f1a <DebugMon_Handler>:
 8000f1a:	b480      	push	{r7}
 8000f1c:	af00      	add	r7, sp, #0
 8000f1e:	bf00      	nop
 8000f20:	46bd      	mov	sp, r7
 8000f22:	bc80      	pop	{r7}
 8000f24:	4770      	bx	lr

08000f26 <PendSV_Handler>:
 8000f26:	b480      	push	{r7}
 8000f28:	af00      	add	r7, sp, #0
 8000f2a:	bf00      	nop
 8000f2c:	46bd      	mov	sp, r7
 8000f2e:	bc80      	pop	{r7}
 8000f30:	4770      	bx	lr

08000f32 <SysTick_Handler>:
 8000f32:	b580      	push	{r7, lr}
 8000f34:	af00      	add	r7, sp, #0
 8000f36:	f000 fa31 	bl	800139c <HAL_IncTick>
 8000f3a:	bf00      	nop
 8000f3c:	bd80      	pop	{r7, pc}
	...

08000f40 <TIM2_IRQHandler>:
 8000f40:	b580      	push	{r7, lr}
 8000f42:	af00      	add	r7, sp, #0
 8000f44:	4802      	ldr	r0, [pc, #8]	; (8000f50 <TIM2_IRQHandler+0x10>)
 8000f46:	f001 fe63 	bl	8002c10 <HAL_TIM_IRQHandler>
 8000f4a:	bf00      	nop
 8000f4c:	bd80      	pop	{r7, pc}
 8000f4e:	bf00      	nop
 8000f50:	2000017c 	.word	0x2000017c

08000f54 <_sbrk>:
 8000f54:	b580      	push	{r7, lr}
 8000f56:	b086      	sub	sp, #24
 8000f58:	af00      	add	r7, sp, #0
 8000f5a:	6078      	str	r0, [r7, #4]
 8000f5c:	4a14      	ldr	r2, [pc, #80]	; (8000fb0 <_sbrk+0x5c>)
 8000f5e:	4b15      	ldr	r3, [pc, #84]	; (8000fb4 <_sbrk+0x60>)
 8000f60:	1ad3      	subs	r3, r2, r3
 8000f62:	617b      	str	r3, [r7, #20]
 8000f64:	697b      	ldr	r3, [r7, #20]
 8000f66:	613b      	str	r3, [r7, #16]
 8000f68:	4b13      	ldr	r3, [pc, #76]	; (8000fb8 <_sbrk+0x64>)
 8000f6a:	681b      	ldr	r3, [r3, #0]
 8000f6c:	2b00      	cmp	r3, #0
 8000f6e:	d102      	bne.n	8000f76 <_sbrk+0x22>
 8000f70:	4b11      	ldr	r3, [pc, #68]	; (8000fb8 <_sbrk+0x64>)
 8000f72:	4a12      	ldr	r2, [pc, #72]	; (8000fbc <_sbrk+0x68>)
 8000f74:	601a      	str	r2, [r3, #0]
 8000f76:	4b10      	ldr	r3, [pc, #64]	; (8000fb8 <_sbrk+0x64>)
 8000f78:	681a      	ldr	r2, [r3, #0]
 8000f7a:	687b      	ldr	r3, [r7, #4]
 8000f7c:	4413      	add	r3, r2
 8000f7e:	693a      	ldr	r2, [r7, #16]
 8000f80:	429a      	cmp	r2, r3
 8000f82:	d207      	bcs.n	8000f94 <_sbrk+0x40>
 8000f84:	f002 f994 	bl	80032b0 <__errno>
 8000f88:	4603      	mov	r3, r0
 8000f8a:	220c      	movs	r2, #12
 8000f8c:	601a      	str	r2, [r3, #0]
 8000f8e:	f04f 33ff 	mov.w	r3, #4294967295
 8000f92:	e009      	b.n	8000fa8 <_sbrk+0x54>
 8000f94:	4b08      	ldr	r3, [pc, #32]	; (8000fb8 <_sbrk+0x64>)
 8000f96:	681b      	ldr	r3, [r3, #0]
 8000f98:	60fb      	str	r3, [r7, #12]
 8000f9a:	4b07      	ldr	r3, [pc, #28]	; (8000fb8 <_sbrk+0x64>)
 8000f9c:	681a      	ldr	r2, [r3, #0]
 8000f9e:	687b      	ldr	r3, [r7, #4]
 8000fa0:	4413      	add	r3, r2
 8000fa2:	4a05      	ldr	r2, [pc, #20]	; (8000fb8 <_sbrk+0x64>)
 8000fa4:	6013      	str	r3, [r2, #0]
 8000fa6:	68fb      	ldr	r3, [r7, #12]
 8000fa8:	4618      	mov	r0, r3
 8000faa:	3718      	adds	r7, #24
 8000fac:	46bd      	mov	sp, r7
 8000fae:	bd80      	pop	{r7, pc}
 8000fb0:	20005000 	.word	0x20005000
 8000fb4:	00000400 	.word	0x00000400
 8000fb8:	20000110 	.word	0x20000110
 8000fbc:	20000228 	.word	0x20000228

08000fc0 <SystemInit>:
 8000fc0:	b480      	push	{r7}
 8000fc2:	af00      	add	r7, sp, #0
 8000fc4:	bf00      	nop
 8000fc6:	46bd      	mov	sp, r7
 8000fc8:	bc80      	pop	{r7}
 8000fca:	4770      	bx	lr

08000fcc <traffic_light1>:
 */


#include"traffic_light.h"

void traffic_light1(int status1){
 8000fcc:	b580      	push	{r7, lr}
 8000fce:	b082      	sub	sp, #8
 8000fd0:	af00      	add	r7, sp, #0
 8000fd2:	6078      	str	r0, [r7, #4]
 8000fd4:	687b      	ldr	r3, [r7, #4]
 8000fd6:	2b03      	cmp	r3, #3
 8000fd8:	d836      	bhi.n	8001048 <traffic_light1+0x7c>
 8000fda:	a201      	add	r2, pc, #4	; (adr r2, 8000fe0 <traffic_light1+0x14>)
 8000fdc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000fe0:	08000ff1 	.word	0x08000ff1
 8000fe4:	08001007 	.word	0x08001007
 8000fe8:	08001033 	.word	0x08001033
 8000fec:	0800101d 	.word	0x0800101d
	switch(status1){
			case INIT_LED:
				HAL_GPIO_WritePin(LED1_3_GPIO_Port, LED1_3_Pin, GPIO_PIN_RESET);
 8000ff0:	2200      	movs	r2, #0
 8000ff2:	2108      	movs	r1, #8
 8000ff4:	4817      	ldr	r0, [pc, #92]	; (8001054 <traffic_light1+0x88>)
 8000ff6:	f000 fcba 	bl	800196e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(LED1_5_GPIO_Port, LED1_5_Pin, GPIO_PIN_RESET);
 8000ffa:	2200      	movs	r2, #0
 8000ffc:	2120      	movs	r1, #32
 8000ffe:	4815      	ldr	r0, [pc, #84]	; (8001054 <traffic_light1+0x88>)
 8001000:	f000 fcb5 	bl	800196e <HAL_GPIO_WritePin>
				break;
 8001004:	e021      	b.n	800104a <traffic_light1+0x7e>

			case AUTO_RED1:
				HAL_GPIO_WritePin(LED1_3_GPIO_Port, LED1_3_Pin, GPIO_PIN_SET);
 8001006:	2201      	movs	r2, #1
 8001008:	2108      	movs	r1, #8
 800100a:	4812      	ldr	r0, [pc, #72]	; (8001054 <traffic_light1+0x88>)
 800100c:	f000 fcaf 	bl	800196e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(LED1_5_GPIO_Port, LED1_5_Pin, GPIO_PIN_SET);
 8001010:	2201      	movs	r2, #1
 8001012:	2120      	movs	r1, #32
 8001014:	480f      	ldr	r0, [pc, #60]	; (8001054 <traffic_light1+0x88>)
 8001016:	f000 fcaa 	bl	800196e <HAL_GPIO_WritePin>
				break;
 800101a:	e016      	b.n	800104a <traffic_light1+0x7e>

			case AUTO_AMBER1:
				HAL_GPIO_WritePin(LED1_3_GPIO_Port, LED1_3_Pin, GPIO_PIN_RESET);
 800101c:	2200      	movs	r2, #0
 800101e:	2108      	movs	r1, #8
 8001020:	480c      	ldr	r0, [pc, #48]	; (8001054 <traffic_light1+0x88>)
 8001022:	f000 fca4 	bl	800196e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(LED1_5_GPIO_Port, LED1_5_Pin, GPIO_PIN_SET);
 8001026:	2201      	movs	r2, #1
 8001028:	2120      	movs	r1, #32
 800102a:	480a      	ldr	r0, [pc, #40]	; (8001054 <traffic_light1+0x88>)
 800102c:	f000 fc9f 	bl	800196e <HAL_GPIO_WritePin>
				break;
 8001030:	e00b      	b.n	800104a <traffic_light1+0x7e>

			case AUTO_GREEN1:
				HAL_GPIO_WritePin(LED1_3_GPIO_Port, LED1_3_Pin, GPIO_PIN_SET);
 8001032:	2201      	movs	r2, #1
 8001034:	2108      	movs	r1, #8
 8001036:	4807      	ldr	r0, [pc, #28]	; (8001054 <traffic_light1+0x88>)
 8001038:	f000 fc99 	bl	800196e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(LED1_5_GPIO_Port, LED1_5_Pin, GPIO_PIN_RESET);
 800103c:	2200      	movs	r2, #0
 800103e:	2120      	movs	r1, #32
 8001040:	4804      	ldr	r0, [pc, #16]	; (8001054 <traffic_light1+0x88>)
 8001042:	f000 fc94 	bl	800196e <HAL_GPIO_WritePin>
				break;
 8001046:	e000      	b.n	800104a <traffic_light1+0x7e>

			default:
				break;
 8001048:	bf00      	nop
		}
}
 800104a:	bf00      	nop
 800104c:	3708      	adds	r7, #8
 800104e:	46bd      	mov	sp, r7
 8001050:	bd80      	pop	{r7, pc}
 8001052:	bf00      	nop
 8001054:	40010c00 	.word	0x40010c00

08001058 <traffic_light2>:


void traffic_light2(int status2){
 8001058:	b580      	push	{r7, lr}
 800105a:	b082      	sub	sp, #8
 800105c:	af00      	add	r7, sp, #0
 800105e:	6078      	str	r0, [r7, #4]
 8001060:	687b      	ldr	r3, [r7, #4]
 8001062:	2b07      	cmp	r3, #7
 8001064:	d846      	bhi.n	80010f4 <traffic_light2+0x9c>
 8001066:	a201      	add	r2, pc, #4	; (adr r2, 800106c <traffic_light2+0x14>)
 8001068:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800106c:	0800108d 	.word	0x0800108d
 8001070:	080010f5 	.word	0x080010f5
 8001074:	080010f5 	.word	0x080010f5
 8001078:	080010f5 	.word	0x080010f5
 800107c:	080010f5 	.word	0x080010f5
 8001080:	080010a7 	.word	0x080010a7
 8001084:	080010db 	.word	0x080010db
 8001088:	080010c1 	.word	0x080010c1
	switch(status2){
			case INIT_LED:
				HAL_GPIO_WritePin(LED4_9_GPIO_Port, LED4_9_Pin, GPIO_PIN_RESET);
 800108c:	2200      	movs	r2, #0
 800108e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001092:	481b      	ldr	r0, [pc, #108]	; (8001100 <traffic_light2+0xa8>)
 8001094:	f000 fc6b 	bl	800196e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(LED4_8_GPIO_Port, LED4_8_Pin, GPIO_PIN_RESET);
 8001098:	2200      	movs	r2, #0
 800109a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800109e:	4818      	ldr	r0, [pc, #96]	; (8001100 <traffic_light2+0xa8>)
 80010a0:	f000 fc65 	bl	800196e <HAL_GPIO_WritePin>
				break;
 80010a4:	e027      	b.n	80010f6 <traffic_light2+0x9e>

			case AUTO_RED2:
				HAL_GPIO_WritePin(LED4_9_GPIO_Port, LED4_9_Pin, GPIO_PIN_SET);
 80010a6:	2201      	movs	r2, #1
 80010a8:	f44f 7100 	mov.w	r1, #512	; 0x200
 80010ac:	4814      	ldr	r0, [pc, #80]	; (8001100 <traffic_light2+0xa8>)
 80010ae:	f000 fc5e 	bl	800196e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(LED4_8_GPIO_Port, LED4_8_Pin, GPIO_PIN_SET);
 80010b2:	2201      	movs	r2, #1
 80010b4:	f44f 7180 	mov.w	r1, #256	; 0x100
 80010b8:	4811      	ldr	r0, [pc, #68]	; (8001100 <traffic_light2+0xa8>)
 80010ba:	f000 fc58 	bl	800196e <HAL_GPIO_WritePin>
				break;
 80010be:	e01a      	b.n	80010f6 <traffic_light2+0x9e>

			case AUTO_AMBER2:
				HAL_GPIO_WritePin(LED4_9_GPIO_Port, LED4_9_Pin, GPIO_PIN_SET);
 80010c0:	2201      	movs	r2, #1
 80010c2:	f44f 7100 	mov.w	r1, #512	; 0x200
 80010c6:	480e      	ldr	r0, [pc, #56]	; (8001100 <traffic_light2+0xa8>)
 80010c8:	f000 fc51 	bl	800196e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(LED4_8_GPIO_Port, LED4_8_Pin, GPIO_PIN_RESET);
 80010cc:	2200      	movs	r2, #0
 80010ce:	f44f 7180 	mov.w	r1, #256	; 0x100
 80010d2:	480b      	ldr	r0, [pc, #44]	; (8001100 <traffic_light2+0xa8>)
 80010d4:	f000 fc4b 	bl	800196e <HAL_GPIO_WritePin>
				break;
 80010d8:	e00d      	b.n	80010f6 <traffic_light2+0x9e>

			case AUTO_GREEN2:
				HAL_GPIO_WritePin(LED4_9_GPIO_Port, LED4_9_Pin, GPIO_PIN_RESET);
 80010da:	2200      	movs	r2, #0
 80010dc:	f44f 7100 	mov.w	r1, #512	; 0x200
 80010e0:	4807      	ldr	r0, [pc, #28]	; (8001100 <traffic_light2+0xa8>)
 80010e2:	f000 fc44 	bl	800196e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(LED4_8_GPIO_Port, LED4_8_Pin, GPIO_PIN_SET);
 80010e6:	2201      	movs	r2, #1
 80010e8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80010ec:	4804      	ldr	r0, [pc, #16]	; (8001100 <traffic_light2+0xa8>)
 80010ee:	f000 fc3e 	bl	800196e <HAL_GPIO_WritePin>
				break;
 80010f2:	e000      	b.n	80010f6 <traffic_light2+0x9e>

			default:
				break;
 80010f4:	bf00      	nop
		}
}
 80010f6:	bf00      	nop
 80010f8:	3708      	adds	r7, #8
 80010fa:	46bd      	mov	sp, r7
 80010fc:	bd80      	pop	{r7, pc}
 80010fe:	bf00      	nop
 8001100:	40010800 	.word	0x40010800

08001104 <fsm_automatic_traffic_light>:


void fsm_automatic_traffic_light(){
 8001104:	b580      	push	{r7, lr}
 8001106:	af00      	add	r7, sp, #0
	if(status0 == MODE1){
 8001108:	4b67      	ldr	r3, [pc, #412]	; (80012a8 <fsm_automatic_traffic_light+0x1a4>)
 800110a:	681b      	ldr	r3, [r3, #0]
 800110c:	2b0b      	cmp	r3, #11
 800110e:	f040 80be 	bne.w	800128e <fsm_automatic_traffic_light+0x18a>
		switch(status1){
 8001112:	4b66      	ldr	r3, [pc, #408]	; (80012ac <fsm_automatic_traffic_light+0x1a8>)
 8001114:	681b      	ldr	r3, [r3, #0]
 8001116:	2b03      	cmp	r3, #3
 8001118:	d851      	bhi.n	80011be <fsm_automatic_traffic_light+0xba>
 800111a:	a201      	add	r2, pc, #4	; (adr r2, 8001120 <fsm_automatic_traffic_light+0x1c>)
 800111c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001120:	08001131 	.word	0x08001131
 8001124:	0800114d 	.word	0x0800114d
 8001128:	08001199 	.word	0x08001199
 800112c:	08001173 	.word	0x08001173
				case INIT_LED:
					if(timer_flag[0] == 1){
 8001130:	4b5f      	ldr	r3, [pc, #380]	; (80012b0 <fsm_automatic_traffic_light+0x1ac>)
 8001132:	681b      	ldr	r3, [r3, #0]
 8001134:	2b01      	cmp	r3, #1
 8001136:	d144      	bne.n	80011c2 <fsm_automatic_traffic_light+0xbe>
						status1 = AUTO_RED1;
 8001138:	4b5c      	ldr	r3, [pc, #368]	; (80012ac <fsm_automatic_traffic_light+0x1a8>)
 800113a:	2201      	movs	r2, #1
 800113c:	601a      	str	r2, [r3, #0]
						setTimer0(0, TIME_RED);
 800113e:	4b5d      	ldr	r3, [pc, #372]	; (80012b4 <fsm_automatic_traffic_light+0x1b0>)
 8001140:	681b      	ldr	r3, [r3, #0]
 8001142:	4619      	mov	r1, r3
 8001144:	2000      	movs	r0, #0
 8001146:	f7ff fdc5 	bl	8000cd4 <setTimer0>
					}
					break;
 800114a:	e03a      	b.n	80011c2 <fsm_automatic_traffic_light+0xbe>

				case AUTO_RED1:
					traffic_light1(status1);
 800114c:	4b57      	ldr	r3, [pc, #348]	; (80012ac <fsm_automatic_traffic_light+0x1a8>)
 800114e:	681b      	ldr	r3, [r3, #0]
 8001150:	4618      	mov	r0, r3
 8001152:	f7ff ff3b 	bl	8000fcc <traffic_light1>
					if(timer_flag[0] == 1){
 8001156:	4b56      	ldr	r3, [pc, #344]	; (80012b0 <fsm_automatic_traffic_light+0x1ac>)
 8001158:	681b      	ldr	r3, [r3, #0]
 800115a:	2b01      	cmp	r3, #1
 800115c:	d133      	bne.n	80011c6 <fsm_automatic_traffic_light+0xc2>
						status1 = AUTO_GREEN1;
 800115e:	4b53      	ldr	r3, [pc, #332]	; (80012ac <fsm_automatic_traffic_light+0x1a8>)
 8001160:	2202      	movs	r2, #2
 8001162:	601a      	str	r2, [r3, #0]
						setTimer0(0, TIME_GREEN);
 8001164:	4b54      	ldr	r3, [pc, #336]	; (80012b8 <fsm_automatic_traffic_light+0x1b4>)
 8001166:	681b      	ldr	r3, [r3, #0]
 8001168:	4619      	mov	r1, r3
 800116a:	2000      	movs	r0, #0
 800116c:	f7ff fdb2 	bl	8000cd4 <setTimer0>
					}
					break;
 8001170:	e029      	b.n	80011c6 <fsm_automatic_traffic_light+0xc2>

				case AUTO_AMBER1:
					traffic_light1(status1);
 8001172:	4b4e      	ldr	r3, [pc, #312]	; (80012ac <fsm_automatic_traffic_light+0x1a8>)
 8001174:	681b      	ldr	r3, [r3, #0]
 8001176:	4618      	mov	r0, r3
 8001178:	f7ff ff28 	bl	8000fcc <traffic_light1>
					if(timer_flag[0] == 1){
 800117c:	4b4c      	ldr	r3, [pc, #304]	; (80012b0 <fsm_automatic_traffic_light+0x1ac>)
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	2b01      	cmp	r3, #1
 8001182:	d122      	bne.n	80011ca <fsm_automatic_traffic_light+0xc6>
						status1 = AUTO_RED1;
 8001184:	4b49      	ldr	r3, [pc, #292]	; (80012ac <fsm_automatic_traffic_light+0x1a8>)
 8001186:	2201      	movs	r2, #1
 8001188:	601a      	str	r2, [r3, #0]
						setTimer0(0, TIME_RED);
 800118a:	4b4a      	ldr	r3, [pc, #296]	; (80012b4 <fsm_automatic_traffic_light+0x1b0>)
 800118c:	681b      	ldr	r3, [r3, #0]
 800118e:	4619      	mov	r1, r3
 8001190:	2000      	movs	r0, #0
 8001192:	f7ff fd9f 	bl	8000cd4 <setTimer0>
					}
					break;
 8001196:	e018      	b.n	80011ca <fsm_automatic_traffic_light+0xc6>

				case AUTO_GREEN1:
					traffic_light1(status1);
 8001198:	4b44      	ldr	r3, [pc, #272]	; (80012ac <fsm_automatic_traffic_light+0x1a8>)
 800119a:	681b      	ldr	r3, [r3, #0]
 800119c:	4618      	mov	r0, r3
 800119e:	f7ff ff15 	bl	8000fcc <traffic_light1>
					if(timer_flag[0] == 1){
 80011a2:	4b43      	ldr	r3, [pc, #268]	; (80012b0 <fsm_automatic_traffic_light+0x1ac>)
 80011a4:	681b      	ldr	r3, [r3, #0]
 80011a6:	2b01      	cmp	r3, #1
 80011a8:	d111      	bne.n	80011ce <fsm_automatic_traffic_light+0xca>
						status1 = AUTO_AMBER1;
 80011aa:	4b40      	ldr	r3, [pc, #256]	; (80012ac <fsm_automatic_traffic_light+0x1a8>)
 80011ac:	2203      	movs	r2, #3
 80011ae:	601a      	str	r2, [r3, #0]
						setTimer0(0, TIME_YELLOW);
 80011b0:	4b42      	ldr	r3, [pc, #264]	; (80012bc <fsm_automatic_traffic_light+0x1b8>)
 80011b2:	681b      	ldr	r3, [r3, #0]
 80011b4:	4619      	mov	r1, r3
 80011b6:	2000      	movs	r0, #0
 80011b8:	f7ff fd8c 	bl	8000cd4 <setTimer0>
					}
					break;
 80011bc:	e007      	b.n	80011ce <fsm_automatic_traffic_light+0xca>

				default:
					break;
 80011be:	bf00      	nop
 80011c0:	e006      	b.n	80011d0 <fsm_automatic_traffic_light+0xcc>
					break;
 80011c2:	bf00      	nop
 80011c4:	e004      	b.n	80011d0 <fsm_automatic_traffic_light+0xcc>
					break;
 80011c6:	bf00      	nop
 80011c8:	e002      	b.n	80011d0 <fsm_automatic_traffic_light+0xcc>
					break;
 80011ca:	bf00      	nop
 80011cc:	e000      	b.n	80011d0 <fsm_automatic_traffic_light+0xcc>
					break;
 80011ce:	bf00      	nop
		}

		switch(status2){
 80011d0:	4b3b      	ldr	r3, [pc, #236]	; (80012c0 <fsm_automatic_traffic_light+0x1bc>)
 80011d2:	681b      	ldr	r3, [r3, #0]
 80011d4:	2b07      	cmp	r3, #7
 80011d6:	d85c      	bhi.n	8001292 <fsm_automatic_traffic_light+0x18e>
 80011d8:	a201      	add	r2, pc, #4	; (adr r2, 80011e0 <fsm_automatic_traffic_light+0xdc>)
 80011da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80011de:	bf00      	nop
 80011e0:	08001201 	.word	0x08001201
 80011e4:	08001293 	.word	0x08001293
 80011e8:	08001293 	.word	0x08001293
 80011ec:	08001293 	.word	0x08001293
 80011f0:	08001293 	.word	0x08001293
 80011f4:	0800121d 	.word	0x0800121d
 80011f8:	08001269 	.word	0x08001269
 80011fc:	08001243 	.word	0x08001243
				case INIT_LED:
					if(timer_flag[1] == 1){
 8001200:	4b2b      	ldr	r3, [pc, #172]	; (80012b0 <fsm_automatic_traffic_light+0x1ac>)
 8001202:	685b      	ldr	r3, [r3, #4]
 8001204:	2b01      	cmp	r3, #1
 8001206:	d146      	bne.n	8001296 <fsm_automatic_traffic_light+0x192>
						status2 = AUTO_GREEN2;
 8001208:	4b2d      	ldr	r3, [pc, #180]	; (80012c0 <fsm_automatic_traffic_light+0x1bc>)
 800120a:	2206      	movs	r2, #6
 800120c:	601a      	str	r2, [r3, #0]
						setTimer0(1, TIME_GREEN);
 800120e:	4b2a      	ldr	r3, [pc, #168]	; (80012b8 <fsm_automatic_traffic_light+0x1b4>)
 8001210:	681b      	ldr	r3, [r3, #0]
 8001212:	4619      	mov	r1, r3
 8001214:	2001      	movs	r0, #1
 8001216:	f7ff fd5d 	bl	8000cd4 <setTimer0>
					}
					break;
 800121a:	e03c      	b.n	8001296 <fsm_automatic_traffic_light+0x192>

				case AUTO_RED2:
					traffic_light2(status2);
 800121c:	4b28      	ldr	r3, [pc, #160]	; (80012c0 <fsm_automatic_traffic_light+0x1bc>)
 800121e:	681b      	ldr	r3, [r3, #0]
 8001220:	4618      	mov	r0, r3
 8001222:	f7ff ff19 	bl	8001058 <traffic_light2>
					if(timer_flag[1] == 1){
 8001226:	4b22      	ldr	r3, [pc, #136]	; (80012b0 <fsm_automatic_traffic_light+0x1ac>)
 8001228:	685b      	ldr	r3, [r3, #4]
 800122a:	2b01      	cmp	r3, #1
 800122c:	d135      	bne.n	800129a <fsm_automatic_traffic_light+0x196>
						status2 = AUTO_GREEN2;
 800122e:	4b24      	ldr	r3, [pc, #144]	; (80012c0 <fsm_automatic_traffic_light+0x1bc>)
 8001230:	2206      	movs	r2, #6
 8001232:	601a      	str	r2, [r3, #0]
						setTimer0(1, TIME_GREEN);
 8001234:	4b20      	ldr	r3, [pc, #128]	; (80012b8 <fsm_automatic_traffic_light+0x1b4>)
 8001236:	681b      	ldr	r3, [r3, #0]
 8001238:	4619      	mov	r1, r3
 800123a:	2001      	movs	r0, #1
 800123c:	f7ff fd4a 	bl	8000cd4 <setTimer0>
					}

					break;
 8001240:	e02b      	b.n	800129a <fsm_automatic_traffic_light+0x196>

				case AUTO_AMBER2:
					traffic_light2(status2);
 8001242:	4b1f      	ldr	r3, [pc, #124]	; (80012c0 <fsm_automatic_traffic_light+0x1bc>)
 8001244:	681b      	ldr	r3, [r3, #0]
 8001246:	4618      	mov	r0, r3
 8001248:	f7ff ff06 	bl	8001058 <traffic_light2>
					if(timer_flag[1] == 1){
 800124c:	4b18      	ldr	r3, [pc, #96]	; (80012b0 <fsm_automatic_traffic_light+0x1ac>)
 800124e:	685b      	ldr	r3, [r3, #4]
 8001250:	2b01      	cmp	r3, #1
 8001252:	d124      	bne.n	800129e <fsm_automatic_traffic_light+0x19a>
						status2 = AUTO_RED2;
 8001254:	4b1a      	ldr	r3, [pc, #104]	; (80012c0 <fsm_automatic_traffic_light+0x1bc>)
 8001256:	2205      	movs	r2, #5
 8001258:	601a      	str	r2, [r3, #0]
						setTimer0(1, TIME_RED);
 800125a:	4b16      	ldr	r3, [pc, #88]	; (80012b4 <fsm_automatic_traffic_light+0x1b0>)
 800125c:	681b      	ldr	r3, [r3, #0]
 800125e:	4619      	mov	r1, r3
 8001260:	2001      	movs	r0, #1
 8001262:	f7ff fd37 	bl	8000cd4 <setTimer0>
					}

					break;
 8001266:	e01a      	b.n	800129e <fsm_automatic_traffic_light+0x19a>

				case AUTO_GREEN2:
					traffic_light2(status2);
 8001268:	4b15      	ldr	r3, [pc, #84]	; (80012c0 <fsm_automatic_traffic_light+0x1bc>)
 800126a:	681b      	ldr	r3, [r3, #0]
 800126c:	4618      	mov	r0, r3
 800126e:	f7ff fef3 	bl	8001058 <traffic_light2>
					if(timer_flag[1] == 1){
 8001272:	4b0f      	ldr	r3, [pc, #60]	; (80012b0 <fsm_automatic_traffic_light+0x1ac>)
 8001274:	685b      	ldr	r3, [r3, #4]
 8001276:	2b01      	cmp	r3, #1
 8001278:	d113      	bne.n	80012a2 <fsm_automatic_traffic_light+0x19e>
						status2 = AUTO_AMBER2;
 800127a:	4b11      	ldr	r3, [pc, #68]	; (80012c0 <fsm_automatic_traffic_light+0x1bc>)
 800127c:	2207      	movs	r2, #7
 800127e:	601a      	str	r2, [r3, #0]
						setTimer0(1, TIME_YELLOW);
 8001280:	4b0e      	ldr	r3, [pc, #56]	; (80012bc <fsm_automatic_traffic_light+0x1b8>)
 8001282:	681b      	ldr	r3, [r3, #0]
 8001284:	4619      	mov	r1, r3
 8001286:	2001      	movs	r0, #1
 8001288:	f7ff fd24 	bl	8000cd4 <setTimer0>
					}

					break;
 800128c:	e009      	b.n	80012a2 <fsm_automatic_traffic_light+0x19e>

				default:
					break;
			}
	}
 800128e:	bf00      	nop
 8001290:	e008      	b.n	80012a4 <fsm_automatic_traffic_light+0x1a0>
					break;
 8001292:	bf00      	nop
 8001294:	e006      	b.n	80012a4 <fsm_automatic_traffic_light+0x1a0>
					break;
 8001296:	bf00      	nop
 8001298:	e004      	b.n	80012a4 <fsm_automatic_traffic_light+0x1a0>
					break;
 800129a:	bf00      	nop
 800129c:	e002      	b.n	80012a4 <fsm_automatic_traffic_light+0x1a0>
					break;
 800129e:	bf00      	nop
 80012a0:	e000      	b.n	80012a4 <fsm_automatic_traffic_light+0x1a0>
					break;
 80012a2:	bf00      	nop
}
 80012a4:	bf00      	nop
 80012a6:	bd80      	pop	{r7, pc}
 80012a8:	200000f0 	.word	0x200000f0
 80012ac:	200000f4 	.word	0x200000f4
 80012b0:	200001ec 	.word	0x200001ec
 80012b4:	20000044 	.word	0x20000044
 80012b8:	2000004c 	.word	0x2000004c
 80012bc:	20000048 	.word	0x20000048
 80012c0:	200000f8 	.word	0x200000f8

080012c4 <Reset_Handler>:
 80012c4:	f7ff fe7c 	bl	8000fc0 <SystemInit>
 80012c8:	480b      	ldr	r0, [pc, #44]	; (80012f8 <LoopFillZerobss+0xe>)
 80012ca:	490c      	ldr	r1, [pc, #48]	; (80012fc <LoopFillZerobss+0x12>)
 80012cc:	4a0c      	ldr	r2, [pc, #48]	; (8001300 <LoopFillZerobss+0x16>)
 80012ce:	2300      	movs	r3, #0
 80012d0:	e002      	b.n	80012d8 <LoopCopyDataInit>

080012d2 <CopyDataInit>:
 80012d2:	58d4      	ldr	r4, [r2, r3]
 80012d4:	50c4      	str	r4, [r0, r3]
 80012d6:	3304      	adds	r3, #4

080012d8 <LoopCopyDataInit>:
 80012d8:	18c4      	adds	r4, r0, r3
 80012da:	428c      	cmp	r4, r1
 80012dc:	d3f9      	bcc.n	80012d2 <CopyDataInit>
 80012de:	4a09      	ldr	r2, [pc, #36]	; (8001304 <LoopFillZerobss+0x1a>)
 80012e0:	4c09      	ldr	r4, [pc, #36]	; (8001308 <LoopFillZerobss+0x1e>)
 80012e2:	2300      	movs	r3, #0
 80012e4:	e001      	b.n	80012ea <LoopFillZerobss>

080012e6 <FillZerobss>:
 80012e6:	6013      	str	r3, [r2, #0]
 80012e8:	3204      	adds	r2, #4

080012ea <LoopFillZerobss>:
 80012ea:	42a2      	cmp	r2, r4
 80012ec:	d3fb      	bcc.n	80012e6 <FillZerobss>
 80012ee:	f001 ffe5 	bl	80032bc <__libc_init_array>
 80012f2:	f7ff fba7 	bl	8000a44 <main>
 80012f6:	4770      	bx	lr
 80012f8:	20000000 	.word	0x20000000
 80012fc:	200000c8 	.word	0x200000c8
 8001300:	08003c18 	.word	0x08003c18
 8001304:	200000c8 	.word	0x200000c8
 8001308:	20000228 	.word	0x20000228

0800130c <ADC1_2_IRQHandler>:
 800130c:	e7fe      	b.n	800130c <ADC1_2_IRQHandler>
	...

08001310 <HAL_Init>:
 8001310:	b580      	push	{r7, lr}
 8001312:	af00      	add	r7, sp, #0
 8001314:	4b08      	ldr	r3, [pc, #32]	; (8001338 <HAL_Init+0x28>)
 8001316:	681b      	ldr	r3, [r3, #0]
 8001318:	4a07      	ldr	r2, [pc, #28]	; (8001338 <HAL_Init+0x28>)
 800131a:	f043 0310 	orr.w	r3, r3, #16
 800131e:	6013      	str	r3, [r2, #0]
 8001320:	2003      	movs	r0, #3
 8001322:	f000 f947 	bl	80015b4 <HAL_NVIC_SetPriorityGrouping>
 8001326:	200f      	movs	r0, #15
 8001328:	f000 f808 	bl	800133c <HAL_InitTick>
 800132c:	f7ff fd3a 	bl	8000da4 <HAL_MspInit>
 8001330:	2300      	movs	r3, #0
 8001332:	4618      	mov	r0, r3
 8001334:	bd80      	pop	{r7, pc}
 8001336:	bf00      	nop
 8001338:	40022000 	.word	0x40022000

0800133c <HAL_InitTick>:
 800133c:	b580      	push	{r7, lr}
 800133e:	b082      	sub	sp, #8
 8001340:	af00      	add	r7, sp, #0
 8001342:	6078      	str	r0, [r7, #4]
 8001344:	4b12      	ldr	r3, [pc, #72]	; (8001390 <HAL_InitTick+0x54>)
 8001346:	681a      	ldr	r2, [r3, #0]
 8001348:	4b12      	ldr	r3, [pc, #72]	; (8001394 <HAL_InitTick+0x58>)
 800134a:	781b      	ldrb	r3, [r3, #0]
 800134c:	4619      	mov	r1, r3
 800134e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001352:	fbb3 f3f1 	udiv	r3, r3, r1
 8001356:	fbb2 f3f3 	udiv	r3, r2, r3
 800135a:	4618      	mov	r0, r3
 800135c:	f000 f95f 	bl	800161e <HAL_SYSTICK_Config>
 8001360:	4603      	mov	r3, r0
 8001362:	2b00      	cmp	r3, #0
 8001364:	d001      	beq.n	800136a <HAL_InitTick+0x2e>
 8001366:	2301      	movs	r3, #1
 8001368:	e00e      	b.n	8001388 <HAL_InitTick+0x4c>
 800136a:	687b      	ldr	r3, [r7, #4]
 800136c:	2b0f      	cmp	r3, #15
 800136e:	d80a      	bhi.n	8001386 <HAL_InitTick+0x4a>
 8001370:	2200      	movs	r2, #0
 8001372:	6879      	ldr	r1, [r7, #4]
 8001374:	f04f 30ff 	mov.w	r0, #4294967295
 8001378:	f000 f927 	bl	80015ca <HAL_NVIC_SetPriority>
 800137c:	4a06      	ldr	r2, [pc, #24]	; (8001398 <HAL_InitTick+0x5c>)
 800137e:	687b      	ldr	r3, [r7, #4]
 8001380:	6013      	str	r3, [r2, #0]
 8001382:	2300      	movs	r3, #0
 8001384:	e000      	b.n	8001388 <HAL_InitTick+0x4c>
 8001386:	2301      	movs	r3, #1
 8001388:	4618      	mov	r0, r3
 800138a:	3708      	adds	r7, #8
 800138c:	46bd      	mov	sp, r7
 800138e:	bd80      	pop	{r7, pc}
 8001390:	20000058 	.word	0x20000058
 8001394:	20000060 	.word	0x20000060
 8001398:	2000005c 	.word	0x2000005c

0800139c <HAL_IncTick>:
 800139c:	b480      	push	{r7}
 800139e:	af00      	add	r7, sp, #0
 80013a0:	4b05      	ldr	r3, [pc, #20]	; (80013b8 <HAL_IncTick+0x1c>)
 80013a2:	781b      	ldrb	r3, [r3, #0]
 80013a4:	461a      	mov	r2, r3
 80013a6:	4b05      	ldr	r3, [pc, #20]	; (80013bc <HAL_IncTick+0x20>)
 80013a8:	681b      	ldr	r3, [r3, #0]
 80013aa:	4413      	add	r3, r2
 80013ac:	4a03      	ldr	r2, [pc, #12]	; (80013bc <HAL_IncTick+0x20>)
 80013ae:	6013      	str	r3, [r2, #0]
 80013b0:	bf00      	nop
 80013b2:	46bd      	mov	sp, r7
 80013b4:	bc80      	pop	{r7}
 80013b6:	4770      	bx	lr
 80013b8:	20000060 	.word	0x20000060
 80013bc:	20000214 	.word	0x20000214

080013c0 <HAL_GetTick>:
 80013c0:	b480      	push	{r7}
 80013c2:	af00      	add	r7, sp, #0
 80013c4:	4b02      	ldr	r3, [pc, #8]	; (80013d0 <HAL_GetTick+0x10>)
 80013c6:	681b      	ldr	r3, [r3, #0]
 80013c8:	4618      	mov	r0, r3
 80013ca:	46bd      	mov	sp, r7
 80013cc:	bc80      	pop	{r7}
 80013ce:	4770      	bx	lr
 80013d0:	20000214 	.word	0x20000214

080013d4 <HAL_Delay>:
 80013d4:	b580      	push	{r7, lr}
 80013d6:	b084      	sub	sp, #16
 80013d8:	af00      	add	r7, sp, #0
 80013da:	6078      	str	r0, [r7, #4]
 80013dc:	f7ff fff0 	bl	80013c0 <HAL_GetTick>
 80013e0:	60b8      	str	r0, [r7, #8]
 80013e2:	687b      	ldr	r3, [r7, #4]
 80013e4:	60fb      	str	r3, [r7, #12]
 80013e6:	68fb      	ldr	r3, [r7, #12]
 80013e8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80013ec:	d005      	beq.n	80013fa <HAL_Delay+0x26>
 80013ee:	4b0a      	ldr	r3, [pc, #40]	; (8001418 <HAL_Delay+0x44>)
 80013f0:	781b      	ldrb	r3, [r3, #0]
 80013f2:	461a      	mov	r2, r3
 80013f4:	68fb      	ldr	r3, [r7, #12]
 80013f6:	4413      	add	r3, r2
 80013f8:	60fb      	str	r3, [r7, #12]
 80013fa:	bf00      	nop
 80013fc:	f7ff ffe0 	bl	80013c0 <HAL_GetTick>
 8001400:	4602      	mov	r2, r0
 8001402:	68bb      	ldr	r3, [r7, #8]
 8001404:	1ad3      	subs	r3, r2, r3
 8001406:	68fa      	ldr	r2, [r7, #12]
 8001408:	429a      	cmp	r2, r3
 800140a:	d8f7      	bhi.n	80013fc <HAL_Delay+0x28>
 800140c:	bf00      	nop
 800140e:	bf00      	nop
 8001410:	3710      	adds	r7, #16
 8001412:	46bd      	mov	sp, r7
 8001414:	bd80      	pop	{r7, pc}
 8001416:	bf00      	nop
 8001418:	20000060 	.word	0x20000060

0800141c <__NVIC_SetPriorityGrouping>:
 800141c:	b480      	push	{r7}
 800141e:	b085      	sub	sp, #20
 8001420:	af00      	add	r7, sp, #0
 8001422:	6078      	str	r0, [r7, #4]
 8001424:	687b      	ldr	r3, [r7, #4]
 8001426:	f003 0307 	and.w	r3, r3, #7
 800142a:	60fb      	str	r3, [r7, #12]
 800142c:	4b0c      	ldr	r3, [pc, #48]	; (8001460 <__NVIC_SetPriorityGrouping+0x44>)
 800142e:	68db      	ldr	r3, [r3, #12]
 8001430:	60bb      	str	r3, [r7, #8]
 8001432:	68ba      	ldr	r2, [r7, #8]
 8001434:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001438:	4013      	ands	r3, r2
 800143a:	60bb      	str	r3, [r7, #8]
 800143c:	68fb      	ldr	r3, [r7, #12]
 800143e:	021a      	lsls	r2, r3, #8
 8001440:	68bb      	ldr	r3, [r7, #8]
 8001442:	4313      	orrs	r3, r2
 8001444:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001448:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800144c:	60bb      	str	r3, [r7, #8]
 800144e:	4a04      	ldr	r2, [pc, #16]	; (8001460 <__NVIC_SetPriorityGrouping+0x44>)
 8001450:	68bb      	ldr	r3, [r7, #8]
 8001452:	60d3      	str	r3, [r2, #12]
 8001454:	bf00      	nop
 8001456:	3714      	adds	r7, #20
 8001458:	46bd      	mov	sp, r7
 800145a:	bc80      	pop	{r7}
 800145c:	4770      	bx	lr
 800145e:	bf00      	nop
 8001460:	e000ed00 	.word	0xe000ed00

08001464 <__NVIC_GetPriorityGrouping>:
 8001464:	b480      	push	{r7}
 8001466:	af00      	add	r7, sp, #0
 8001468:	4b04      	ldr	r3, [pc, #16]	; (800147c <__NVIC_GetPriorityGrouping+0x18>)
 800146a:	68db      	ldr	r3, [r3, #12]
 800146c:	0a1b      	lsrs	r3, r3, #8
 800146e:	f003 0307 	and.w	r3, r3, #7
 8001472:	4618      	mov	r0, r3
 8001474:	46bd      	mov	sp, r7
 8001476:	bc80      	pop	{r7}
 8001478:	4770      	bx	lr
 800147a:	bf00      	nop
 800147c:	e000ed00 	.word	0xe000ed00

08001480 <__NVIC_EnableIRQ>:
 8001480:	b480      	push	{r7}
 8001482:	b083      	sub	sp, #12
 8001484:	af00      	add	r7, sp, #0
 8001486:	4603      	mov	r3, r0
 8001488:	71fb      	strb	r3, [r7, #7]
 800148a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800148e:	2b00      	cmp	r3, #0
 8001490:	db0b      	blt.n	80014aa <__NVIC_EnableIRQ+0x2a>
 8001492:	79fb      	ldrb	r3, [r7, #7]
 8001494:	f003 021f 	and.w	r2, r3, #31
 8001498:	4906      	ldr	r1, [pc, #24]	; (80014b4 <__NVIC_EnableIRQ+0x34>)
 800149a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800149e:	095b      	lsrs	r3, r3, #5
 80014a0:	2001      	movs	r0, #1
 80014a2:	fa00 f202 	lsl.w	r2, r0, r2
 80014a6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80014aa:	bf00      	nop
 80014ac:	370c      	adds	r7, #12
 80014ae:	46bd      	mov	sp, r7
 80014b0:	bc80      	pop	{r7}
 80014b2:	4770      	bx	lr
 80014b4:	e000e100 	.word	0xe000e100

080014b8 <__NVIC_SetPriority>:
 80014b8:	b480      	push	{r7}
 80014ba:	b083      	sub	sp, #12
 80014bc:	af00      	add	r7, sp, #0
 80014be:	4603      	mov	r3, r0
 80014c0:	6039      	str	r1, [r7, #0]
 80014c2:	71fb      	strb	r3, [r7, #7]
 80014c4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014c8:	2b00      	cmp	r3, #0
 80014ca:	db0a      	blt.n	80014e2 <__NVIC_SetPriority+0x2a>
 80014cc:	683b      	ldr	r3, [r7, #0]
 80014ce:	b2da      	uxtb	r2, r3
 80014d0:	490c      	ldr	r1, [pc, #48]	; (8001504 <__NVIC_SetPriority+0x4c>)
 80014d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014d6:	0112      	lsls	r2, r2, #4
 80014d8:	b2d2      	uxtb	r2, r2
 80014da:	440b      	add	r3, r1
 80014dc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80014e0:	e00a      	b.n	80014f8 <__NVIC_SetPriority+0x40>
 80014e2:	683b      	ldr	r3, [r7, #0]
 80014e4:	b2da      	uxtb	r2, r3
 80014e6:	4908      	ldr	r1, [pc, #32]	; (8001508 <__NVIC_SetPriority+0x50>)
 80014e8:	79fb      	ldrb	r3, [r7, #7]
 80014ea:	f003 030f 	and.w	r3, r3, #15
 80014ee:	3b04      	subs	r3, #4
 80014f0:	0112      	lsls	r2, r2, #4
 80014f2:	b2d2      	uxtb	r2, r2
 80014f4:	440b      	add	r3, r1
 80014f6:	761a      	strb	r2, [r3, #24]
 80014f8:	bf00      	nop
 80014fa:	370c      	adds	r7, #12
 80014fc:	46bd      	mov	sp, r7
 80014fe:	bc80      	pop	{r7}
 8001500:	4770      	bx	lr
 8001502:	bf00      	nop
 8001504:	e000e100 	.word	0xe000e100
 8001508:	e000ed00 	.word	0xe000ed00

0800150c <NVIC_EncodePriority>:
 800150c:	b480      	push	{r7}
 800150e:	b089      	sub	sp, #36	; 0x24
 8001510:	af00      	add	r7, sp, #0
 8001512:	60f8      	str	r0, [r7, #12]
 8001514:	60b9      	str	r1, [r7, #8]
 8001516:	607a      	str	r2, [r7, #4]
 8001518:	68fb      	ldr	r3, [r7, #12]
 800151a:	f003 0307 	and.w	r3, r3, #7
 800151e:	61fb      	str	r3, [r7, #28]
 8001520:	69fb      	ldr	r3, [r7, #28]
 8001522:	f1c3 0307 	rsb	r3, r3, #7
 8001526:	2b04      	cmp	r3, #4
 8001528:	bf28      	it	cs
 800152a:	2304      	movcs	r3, #4
 800152c:	61bb      	str	r3, [r7, #24]
 800152e:	69fb      	ldr	r3, [r7, #28]
 8001530:	3304      	adds	r3, #4
 8001532:	2b06      	cmp	r3, #6
 8001534:	d902      	bls.n	800153c <NVIC_EncodePriority+0x30>
 8001536:	69fb      	ldr	r3, [r7, #28]
 8001538:	3b03      	subs	r3, #3
 800153a:	e000      	b.n	800153e <NVIC_EncodePriority+0x32>
 800153c:	2300      	movs	r3, #0
 800153e:	617b      	str	r3, [r7, #20]
 8001540:	f04f 32ff 	mov.w	r2, #4294967295
 8001544:	69bb      	ldr	r3, [r7, #24]
 8001546:	fa02 f303 	lsl.w	r3, r2, r3
 800154a:	43da      	mvns	r2, r3
 800154c:	68bb      	ldr	r3, [r7, #8]
 800154e:	401a      	ands	r2, r3
 8001550:	697b      	ldr	r3, [r7, #20]
 8001552:	409a      	lsls	r2, r3
 8001554:	f04f 31ff 	mov.w	r1, #4294967295
 8001558:	697b      	ldr	r3, [r7, #20]
 800155a:	fa01 f303 	lsl.w	r3, r1, r3
 800155e:	43d9      	mvns	r1, r3
 8001560:	687b      	ldr	r3, [r7, #4]
 8001562:	400b      	ands	r3, r1
 8001564:	4313      	orrs	r3, r2
 8001566:	4618      	mov	r0, r3
 8001568:	3724      	adds	r7, #36	; 0x24
 800156a:	46bd      	mov	sp, r7
 800156c:	bc80      	pop	{r7}
 800156e:	4770      	bx	lr

08001570 <SysTick_Config>:
 8001570:	b580      	push	{r7, lr}
 8001572:	b082      	sub	sp, #8
 8001574:	af00      	add	r7, sp, #0
 8001576:	6078      	str	r0, [r7, #4]
 8001578:	687b      	ldr	r3, [r7, #4]
 800157a:	3b01      	subs	r3, #1
 800157c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001580:	d301      	bcc.n	8001586 <SysTick_Config+0x16>
 8001582:	2301      	movs	r3, #1
 8001584:	e00f      	b.n	80015a6 <SysTick_Config+0x36>
 8001586:	4a0a      	ldr	r2, [pc, #40]	; (80015b0 <SysTick_Config+0x40>)
 8001588:	687b      	ldr	r3, [r7, #4]
 800158a:	3b01      	subs	r3, #1
 800158c:	6053      	str	r3, [r2, #4]
 800158e:	210f      	movs	r1, #15
 8001590:	f04f 30ff 	mov.w	r0, #4294967295
 8001594:	f7ff ff90 	bl	80014b8 <__NVIC_SetPriority>
 8001598:	4b05      	ldr	r3, [pc, #20]	; (80015b0 <SysTick_Config+0x40>)
 800159a:	2200      	movs	r2, #0
 800159c:	609a      	str	r2, [r3, #8]
 800159e:	4b04      	ldr	r3, [pc, #16]	; (80015b0 <SysTick_Config+0x40>)
 80015a0:	2207      	movs	r2, #7
 80015a2:	601a      	str	r2, [r3, #0]
 80015a4:	2300      	movs	r3, #0
 80015a6:	4618      	mov	r0, r3
 80015a8:	3708      	adds	r7, #8
 80015aa:	46bd      	mov	sp, r7
 80015ac:	bd80      	pop	{r7, pc}
 80015ae:	bf00      	nop
 80015b0:	e000e010 	.word	0xe000e010

080015b4 <HAL_NVIC_SetPriorityGrouping>:
 80015b4:	b580      	push	{r7, lr}
 80015b6:	b082      	sub	sp, #8
 80015b8:	af00      	add	r7, sp, #0
 80015ba:	6078      	str	r0, [r7, #4]
 80015bc:	6878      	ldr	r0, [r7, #4]
 80015be:	f7ff ff2d 	bl	800141c <__NVIC_SetPriorityGrouping>
 80015c2:	bf00      	nop
 80015c4:	3708      	adds	r7, #8
 80015c6:	46bd      	mov	sp, r7
 80015c8:	bd80      	pop	{r7, pc}

080015ca <HAL_NVIC_SetPriority>:
 80015ca:	b580      	push	{r7, lr}
 80015cc:	b086      	sub	sp, #24
 80015ce:	af00      	add	r7, sp, #0
 80015d0:	4603      	mov	r3, r0
 80015d2:	60b9      	str	r1, [r7, #8]
 80015d4:	607a      	str	r2, [r7, #4]
 80015d6:	73fb      	strb	r3, [r7, #15]
 80015d8:	2300      	movs	r3, #0
 80015da:	617b      	str	r3, [r7, #20]
 80015dc:	f7ff ff42 	bl	8001464 <__NVIC_GetPriorityGrouping>
 80015e0:	6178      	str	r0, [r7, #20]
 80015e2:	687a      	ldr	r2, [r7, #4]
 80015e4:	68b9      	ldr	r1, [r7, #8]
 80015e6:	6978      	ldr	r0, [r7, #20]
 80015e8:	f7ff ff90 	bl	800150c <NVIC_EncodePriority>
 80015ec:	4602      	mov	r2, r0
 80015ee:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80015f2:	4611      	mov	r1, r2
 80015f4:	4618      	mov	r0, r3
 80015f6:	f7ff ff5f 	bl	80014b8 <__NVIC_SetPriority>
 80015fa:	bf00      	nop
 80015fc:	3718      	adds	r7, #24
 80015fe:	46bd      	mov	sp, r7
 8001600:	bd80      	pop	{r7, pc}

08001602 <HAL_NVIC_EnableIRQ>:
 8001602:	b580      	push	{r7, lr}
 8001604:	b082      	sub	sp, #8
 8001606:	af00      	add	r7, sp, #0
 8001608:	4603      	mov	r3, r0
 800160a:	71fb      	strb	r3, [r7, #7]
 800160c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001610:	4618      	mov	r0, r3
 8001612:	f7ff ff35 	bl	8001480 <__NVIC_EnableIRQ>
 8001616:	bf00      	nop
 8001618:	3708      	adds	r7, #8
 800161a:	46bd      	mov	sp, r7
 800161c:	bd80      	pop	{r7, pc}

0800161e <HAL_SYSTICK_Config>:
 800161e:	b580      	push	{r7, lr}
 8001620:	b082      	sub	sp, #8
 8001622:	af00      	add	r7, sp, #0
 8001624:	6078      	str	r0, [r7, #4]
 8001626:	6878      	ldr	r0, [r7, #4]
 8001628:	f7ff ffa2 	bl	8001570 <SysTick_Config>
 800162c:	4603      	mov	r3, r0
 800162e:	4618      	mov	r0, r3
 8001630:	3708      	adds	r7, #8
 8001632:	46bd      	mov	sp, r7
 8001634:	bd80      	pop	{r7, pc}
	...

08001638 <HAL_GPIO_Init>:
 8001638:	b480      	push	{r7}
 800163a:	b08b      	sub	sp, #44	; 0x2c
 800163c:	af00      	add	r7, sp, #0
 800163e:	6078      	str	r0, [r7, #4]
 8001640:	6039      	str	r1, [r7, #0]
 8001642:	2300      	movs	r3, #0
 8001644:	627b      	str	r3, [r7, #36]	; 0x24
 8001646:	2300      	movs	r3, #0
 8001648:	623b      	str	r3, [r7, #32]
 800164a:	e169      	b.n	8001920 <HAL_GPIO_Init+0x2e8>
 800164c:	2201      	movs	r2, #1
 800164e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001650:	fa02 f303 	lsl.w	r3, r2, r3
 8001654:	61fb      	str	r3, [r7, #28]
 8001656:	683b      	ldr	r3, [r7, #0]
 8001658:	681b      	ldr	r3, [r3, #0]
 800165a:	69fa      	ldr	r2, [r7, #28]
 800165c:	4013      	ands	r3, r2
 800165e:	61bb      	str	r3, [r7, #24]
 8001660:	69ba      	ldr	r2, [r7, #24]
 8001662:	69fb      	ldr	r3, [r7, #28]
 8001664:	429a      	cmp	r2, r3
 8001666:	f040 8158 	bne.w	800191a <HAL_GPIO_Init+0x2e2>
 800166a:	683b      	ldr	r3, [r7, #0]
 800166c:	685b      	ldr	r3, [r3, #4]
 800166e:	4a9a      	ldr	r2, [pc, #616]	; (80018d8 <HAL_GPIO_Init+0x2a0>)
 8001670:	4293      	cmp	r3, r2
 8001672:	d05e      	beq.n	8001732 <HAL_GPIO_Init+0xfa>
 8001674:	4a98      	ldr	r2, [pc, #608]	; (80018d8 <HAL_GPIO_Init+0x2a0>)
 8001676:	4293      	cmp	r3, r2
 8001678:	d875      	bhi.n	8001766 <HAL_GPIO_Init+0x12e>
 800167a:	4a98      	ldr	r2, [pc, #608]	; (80018dc <HAL_GPIO_Init+0x2a4>)
 800167c:	4293      	cmp	r3, r2
 800167e:	d058      	beq.n	8001732 <HAL_GPIO_Init+0xfa>
 8001680:	4a96      	ldr	r2, [pc, #600]	; (80018dc <HAL_GPIO_Init+0x2a4>)
 8001682:	4293      	cmp	r3, r2
 8001684:	d86f      	bhi.n	8001766 <HAL_GPIO_Init+0x12e>
 8001686:	4a96      	ldr	r2, [pc, #600]	; (80018e0 <HAL_GPIO_Init+0x2a8>)
 8001688:	4293      	cmp	r3, r2
 800168a:	d052      	beq.n	8001732 <HAL_GPIO_Init+0xfa>
 800168c:	4a94      	ldr	r2, [pc, #592]	; (80018e0 <HAL_GPIO_Init+0x2a8>)
 800168e:	4293      	cmp	r3, r2
 8001690:	d869      	bhi.n	8001766 <HAL_GPIO_Init+0x12e>
 8001692:	4a94      	ldr	r2, [pc, #592]	; (80018e4 <HAL_GPIO_Init+0x2ac>)
 8001694:	4293      	cmp	r3, r2
 8001696:	d04c      	beq.n	8001732 <HAL_GPIO_Init+0xfa>
 8001698:	4a92      	ldr	r2, [pc, #584]	; (80018e4 <HAL_GPIO_Init+0x2ac>)
 800169a:	4293      	cmp	r3, r2
 800169c:	d863      	bhi.n	8001766 <HAL_GPIO_Init+0x12e>
 800169e:	4a92      	ldr	r2, [pc, #584]	; (80018e8 <HAL_GPIO_Init+0x2b0>)
 80016a0:	4293      	cmp	r3, r2
 80016a2:	d046      	beq.n	8001732 <HAL_GPIO_Init+0xfa>
 80016a4:	4a90      	ldr	r2, [pc, #576]	; (80018e8 <HAL_GPIO_Init+0x2b0>)
 80016a6:	4293      	cmp	r3, r2
 80016a8:	d85d      	bhi.n	8001766 <HAL_GPIO_Init+0x12e>
 80016aa:	2b12      	cmp	r3, #18
 80016ac:	d82a      	bhi.n	8001704 <HAL_GPIO_Init+0xcc>
 80016ae:	2b12      	cmp	r3, #18
 80016b0:	d859      	bhi.n	8001766 <HAL_GPIO_Init+0x12e>
 80016b2:	a201      	add	r2, pc, #4	; (adr r2, 80016b8 <HAL_GPIO_Init+0x80>)
 80016b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80016b8:	08001733 	.word	0x08001733
 80016bc:	0800170d 	.word	0x0800170d
 80016c0:	0800171f 	.word	0x0800171f
 80016c4:	08001761 	.word	0x08001761
 80016c8:	08001767 	.word	0x08001767
 80016cc:	08001767 	.word	0x08001767
 80016d0:	08001767 	.word	0x08001767
 80016d4:	08001767 	.word	0x08001767
 80016d8:	08001767 	.word	0x08001767
 80016dc:	08001767 	.word	0x08001767
 80016e0:	08001767 	.word	0x08001767
 80016e4:	08001767 	.word	0x08001767
 80016e8:	08001767 	.word	0x08001767
 80016ec:	08001767 	.word	0x08001767
 80016f0:	08001767 	.word	0x08001767
 80016f4:	08001767 	.word	0x08001767
 80016f8:	08001767 	.word	0x08001767
 80016fc:	08001715 	.word	0x08001715
 8001700:	08001729 	.word	0x08001729
 8001704:	4a79      	ldr	r2, [pc, #484]	; (80018ec <HAL_GPIO_Init+0x2b4>)
 8001706:	4293      	cmp	r3, r2
 8001708:	d013      	beq.n	8001732 <HAL_GPIO_Init+0xfa>
 800170a:	e02c      	b.n	8001766 <HAL_GPIO_Init+0x12e>
 800170c:	683b      	ldr	r3, [r7, #0]
 800170e:	68db      	ldr	r3, [r3, #12]
 8001710:	623b      	str	r3, [r7, #32]
 8001712:	e029      	b.n	8001768 <HAL_GPIO_Init+0x130>
 8001714:	683b      	ldr	r3, [r7, #0]
 8001716:	68db      	ldr	r3, [r3, #12]
 8001718:	3304      	adds	r3, #4
 800171a:	623b      	str	r3, [r7, #32]
 800171c:	e024      	b.n	8001768 <HAL_GPIO_Init+0x130>
 800171e:	683b      	ldr	r3, [r7, #0]
 8001720:	68db      	ldr	r3, [r3, #12]
 8001722:	3308      	adds	r3, #8
 8001724:	623b      	str	r3, [r7, #32]
 8001726:	e01f      	b.n	8001768 <HAL_GPIO_Init+0x130>
 8001728:	683b      	ldr	r3, [r7, #0]
 800172a:	68db      	ldr	r3, [r3, #12]
 800172c:	330c      	adds	r3, #12
 800172e:	623b      	str	r3, [r7, #32]
 8001730:	e01a      	b.n	8001768 <HAL_GPIO_Init+0x130>
 8001732:	683b      	ldr	r3, [r7, #0]
 8001734:	689b      	ldr	r3, [r3, #8]
 8001736:	2b00      	cmp	r3, #0
 8001738:	d102      	bne.n	8001740 <HAL_GPIO_Init+0x108>
 800173a:	2304      	movs	r3, #4
 800173c:	623b      	str	r3, [r7, #32]
 800173e:	e013      	b.n	8001768 <HAL_GPIO_Init+0x130>
 8001740:	683b      	ldr	r3, [r7, #0]
 8001742:	689b      	ldr	r3, [r3, #8]
 8001744:	2b01      	cmp	r3, #1
 8001746:	d105      	bne.n	8001754 <HAL_GPIO_Init+0x11c>
 8001748:	2308      	movs	r3, #8
 800174a:	623b      	str	r3, [r7, #32]
 800174c:	687b      	ldr	r3, [r7, #4]
 800174e:	69fa      	ldr	r2, [r7, #28]
 8001750:	611a      	str	r2, [r3, #16]
 8001752:	e009      	b.n	8001768 <HAL_GPIO_Init+0x130>
 8001754:	2308      	movs	r3, #8
 8001756:	623b      	str	r3, [r7, #32]
 8001758:	687b      	ldr	r3, [r7, #4]
 800175a:	69fa      	ldr	r2, [r7, #28]
 800175c:	615a      	str	r2, [r3, #20]
 800175e:	e003      	b.n	8001768 <HAL_GPIO_Init+0x130>
 8001760:	2300      	movs	r3, #0
 8001762:	623b      	str	r3, [r7, #32]
 8001764:	e000      	b.n	8001768 <HAL_GPIO_Init+0x130>
 8001766:	bf00      	nop
 8001768:	69bb      	ldr	r3, [r7, #24]
 800176a:	2bff      	cmp	r3, #255	; 0xff
 800176c:	d801      	bhi.n	8001772 <HAL_GPIO_Init+0x13a>
 800176e:	687b      	ldr	r3, [r7, #4]
 8001770:	e001      	b.n	8001776 <HAL_GPIO_Init+0x13e>
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	3304      	adds	r3, #4
 8001776:	617b      	str	r3, [r7, #20]
 8001778:	69bb      	ldr	r3, [r7, #24]
 800177a:	2bff      	cmp	r3, #255	; 0xff
 800177c:	d802      	bhi.n	8001784 <HAL_GPIO_Init+0x14c>
 800177e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001780:	009b      	lsls	r3, r3, #2
 8001782:	e002      	b.n	800178a <HAL_GPIO_Init+0x152>
 8001784:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001786:	3b08      	subs	r3, #8
 8001788:	009b      	lsls	r3, r3, #2
 800178a:	613b      	str	r3, [r7, #16]
 800178c:	697b      	ldr	r3, [r7, #20]
 800178e:	681a      	ldr	r2, [r3, #0]
 8001790:	210f      	movs	r1, #15
 8001792:	693b      	ldr	r3, [r7, #16]
 8001794:	fa01 f303 	lsl.w	r3, r1, r3
 8001798:	43db      	mvns	r3, r3
 800179a:	401a      	ands	r2, r3
 800179c:	6a39      	ldr	r1, [r7, #32]
 800179e:	693b      	ldr	r3, [r7, #16]
 80017a0:	fa01 f303 	lsl.w	r3, r1, r3
 80017a4:	431a      	orrs	r2, r3
 80017a6:	697b      	ldr	r3, [r7, #20]
 80017a8:	601a      	str	r2, [r3, #0]
 80017aa:	683b      	ldr	r3, [r7, #0]
 80017ac:	685b      	ldr	r3, [r3, #4]
 80017ae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80017b2:	2b00      	cmp	r3, #0
 80017b4:	f000 80b1 	beq.w	800191a <HAL_GPIO_Init+0x2e2>
 80017b8:	4b4d      	ldr	r3, [pc, #308]	; (80018f0 <HAL_GPIO_Init+0x2b8>)
 80017ba:	699b      	ldr	r3, [r3, #24]
 80017bc:	4a4c      	ldr	r2, [pc, #304]	; (80018f0 <HAL_GPIO_Init+0x2b8>)
 80017be:	f043 0301 	orr.w	r3, r3, #1
 80017c2:	6193      	str	r3, [r2, #24]
 80017c4:	4b4a      	ldr	r3, [pc, #296]	; (80018f0 <HAL_GPIO_Init+0x2b8>)
 80017c6:	699b      	ldr	r3, [r3, #24]
 80017c8:	f003 0301 	and.w	r3, r3, #1
 80017cc:	60bb      	str	r3, [r7, #8]
 80017ce:	68bb      	ldr	r3, [r7, #8]
 80017d0:	4a48      	ldr	r2, [pc, #288]	; (80018f4 <HAL_GPIO_Init+0x2bc>)
 80017d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017d4:	089b      	lsrs	r3, r3, #2
 80017d6:	3302      	adds	r3, #2
 80017d8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80017dc:	60fb      	str	r3, [r7, #12]
 80017de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017e0:	f003 0303 	and.w	r3, r3, #3
 80017e4:	009b      	lsls	r3, r3, #2
 80017e6:	220f      	movs	r2, #15
 80017e8:	fa02 f303 	lsl.w	r3, r2, r3
 80017ec:	43db      	mvns	r3, r3
 80017ee:	68fa      	ldr	r2, [r7, #12]
 80017f0:	4013      	ands	r3, r2
 80017f2:	60fb      	str	r3, [r7, #12]
 80017f4:	687b      	ldr	r3, [r7, #4]
 80017f6:	4a40      	ldr	r2, [pc, #256]	; (80018f8 <HAL_GPIO_Init+0x2c0>)
 80017f8:	4293      	cmp	r3, r2
 80017fa:	d013      	beq.n	8001824 <HAL_GPIO_Init+0x1ec>
 80017fc:	687b      	ldr	r3, [r7, #4]
 80017fe:	4a3f      	ldr	r2, [pc, #252]	; (80018fc <HAL_GPIO_Init+0x2c4>)
 8001800:	4293      	cmp	r3, r2
 8001802:	d00d      	beq.n	8001820 <HAL_GPIO_Init+0x1e8>
 8001804:	687b      	ldr	r3, [r7, #4]
 8001806:	4a3e      	ldr	r2, [pc, #248]	; (8001900 <HAL_GPIO_Init+0x2c8>)
 8001808:	4293      	cmp	r3, r2
 800180a:	d007      	beq.n	800181c <HAL_GPIO_Init+0x1e4>
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	4a3d      	ldr	r2, [pc, #244]	; (8001904 <HAL_GPIO_Init+0x2cc>)
 8001810:	4293      	cmp	r3, r2
 8001812:	d101      	bne.n	8001818 <HAL_GPIO_Init+0x1e0>
 8001814:	2303      	movs	r3, #3
 8001816:	e006      	b.n	8001826 <HAL_GPIO_Init+0x1ee>
 8001818:	2304      	movs	r3, #4
 800181a:	e004      	b.n	8001826 <HAL_GPIO_Init+0x1ee>
 800181c:	2302      	movs	r3, #2
 800181e:	e002      	b.n	8001826 <HAL_GPIO_Init+0x1ee>
 8001820:	2301      	movs	r3, #1
 8001822:	e000      	b.n	8001826 <HAL_GPIO_Init+0x1ee>
 8001824:	2300      	movs	r3, #0
 8001826:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001828:	f002 0203 	and.w	r2, r2, #3
 800182c:	0092      	lsls	r2, r2, #2
 800182e:	4093      	lsls	r3, r2
 8001830:	68fa      	ldr	r2, [r7, #12]
 8001832:	4313      	orrs	r3, r2
 8001834:	60fb      	str	r3, [r7, #12]
 8001836:	492f      	ldr	r1, [pc, #188]	; (80018f4 <HAL_GPIO_Init+0x2bc>)
 8001838:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800183a:	089b      	lsrs	r3, r3, #2
 800183c:	3302      	adds	r3, #2
 800183e:	68fa      	ldr	r2, [r7, #12]
 8001840:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001844:	683b      	ldr	r3, [r7, #0]
 8001846:	685b      	ldr	r3, [r3, #4]
 8001848:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800184c:	2b00      	cmp	r3, #0
 800184e:	d006      	beq.n	800185e <HAL_GPIO_Init+0x226>
 8001850:	4b2d      	ldr	r3, [pc, #180]	; (8001908 <HAL_GPIO_Init+0x2d0>)
 8001852:	689a      	ldr	r2, [r3, #8]
 8001854:	492c      	ldr	r1, [pc, #176]	; (8001908 <HAL_GPIO_Init+0x2d0>)
 8001856:	69bb      	ldr	r3, [r7, #24]
 8001858:	4313      	orrs	r3, r2
 800185a:	608b      	str	r3, [r1, #8]
 800185c:	e006      	b.n	800186c <HAL_GPIO_Init+0x234>
 800185e:	4b2a      	ldr	r3, [pc, #168]	; (8001908 <HAL_GPIO_Init+0x2d0>)
 8001860:	689a      	ldr	r2, [r3, #8]
 8001862:	69bb      	ldr	r3, [r7, #24]
 8001864:	43db      	mvns	r3, r3
 8001866:	4928      	ldr	r1, [pc, #160]	; (8001908 <HAL_GPIO_Init+0x2d0>)
 8001868:	4013      	ands	r3, r2
 800186a:	608b      	str	r3, [r1, #8]
 800186c:	683b      	ldr	r3, [r7, #0]
 800186e:	685b      	ldr	r3, [r3, #4]
 8001870:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001874:	2b00      	cmp	r3, #0
 8001876:	d006      	beq.n	8001886 <HAL_GPIO_Init+0x24e>
 8001878:	4b23      	ldr	r3, [pc, #140]	; (8001908 <HAL_GPIO_Init+0x2d0>)
 800187a:	68da      	ldr	r2, [r3, #12]
 800187c:	4922      	ldr	r1, [pc, #136]	; (8001908 <HAL_GPIO_Init+0x2d0>)
 800187e:	69bb      	ldr	r3, [r7, #24]
 8001880:	4313      	orrs	r3, r2
 8001882:	60cb      	str	r3, [r1, #12]
 8001884:	e006      	b.n	8001894 <HAL_GPIO_Init+0x25c>
 8001886:	4b20      	ldr	r3, [pc, #128]	; (8001908 <HAL_GPIO_Init+0x2d0>)
 8001888:	68da      	ldr	r2, [r3, #12]
 800188a:	69bb      	ldr	r3, [r7, #24]
 800188c:	43db      	mvns	r3, r3
 800188e:	491e      	ldr	r1, [pc, #120]	; (8001908 <HAL_GPIO_Init+0x2d0>)
 8001890:	4013      	ands	r3, r2
 8001892:	60cb      	str	r3, [r1, #12]
 8001894:	683b      	ldr	r3, [r7, #0]
 8001896:	685b      	ldr	r3, [r3, #4]
 8001898:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800189c:	2b00      	cmp	r3, #0
 800189e:	d006      	beq.n	80018ae <HAL_GPIO_Init+0x276>
 80018a0:	4b19      	ldr	r3, [pc, #100]	; (8001908 <HAL_GPIO_Init+0x2d0>)
 80018a2:	685a      	ldr	r2, [r3, #4]
 80018a4:	4918      	ldr	r1, [pc, #96]	; (8001908 <HAL_GPIO_Init+0x2d0>)
 80018a6:	69bb      	ldr	r3, [r7, #24]
 80018a8:	4313      	orrs	r3, r2
 80018aa:	604b      	str	r3, [r1, #4]
 80018ac:	e006      	b.n	80018bc <HAL_GPIO_Init+0x284>
 80018ae:	4b16      	ldr	r3, [pc, #88]	; (8001908 <HAL_GPIO_Init+0x2d0>)
 80018b0:	685a      	ldr	r2, [r3, #4]
 80018b2:	69bb      	ldr	r3, [r7, #24]
 80018b4:	43db      	mvns	r3, r3
 80018b6:	4914      	ldr	r1, [pc, #80]	; (8001908 <HAL_GPIO_Init+0x2d0>)
 80018b8:	4013      	ands	r3, r2
 80018ba:	604b      	str	r3, [r1, #4]
 80018bc:	683b      	ldr	r3, [r7, #0]
 80018be:	685b      	ldr	r3, [r3, #4]
 80018c0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80018c4:	2b00      	cmp	r3, #0
 80018c6:	d021      	beq.n	800190c <HAL_GPIO_Init+0x2d4>
 80018c8:	4b0f      	ldr	r3, [pc, #60]	; (8001908 <HAL_GPIO_Init+0x2d0>)
 80018ca:	681a      	ldr	r2, [r3, #0]
 80018cc:	490e      	ldr	r1, [pc, #56]	; (8001908 <HAL_GPIO_Init+0x2d0>)
 80018ce:	69bb      	ldr	r3, [r7, #24]
 80018d0:	4313      	orrs	r3, r2
 80018d2:	600b      	str	r3, [r1, #0]
 80018d4:	e021      	b.n	800191a <HAL_GPIO_Init+0x2e2>
 80018d6:	bf00      	nop
 80018d8:	10320000 	.word	0x10320000
 80018dc:	10310000 	.word	0x10310000
 80018e0:	10220000 	.word	0x10220000
 80018e4:	10210000 	.word	0x10210000
 80018e8:	10120000 	.word	0x10120000
 80018ec:	10110000 	.word	0x10110000
 80018f0:	40021000 	.word	0x40021000
 80018f4:	40010000 	.word	0x40010000
 80018f8:	40010800 	.word	0x40010800
 80018fc:	40010c00 	.word	0x40010c00
 8001900:	40011000 	.word	0x40011000
 8001904:	40011400 	.word	0x40011400
 8001908:	40010400 	.word	0x40010400
 800190c:	4b0b      	ldr	r3, [pc, #44]	; (800193c <HAL_GPIO_Init+0x304>)
 800190e:	681a      	ldr	r2, [r3, #0]
 8001910:	69bb      	ldr	r3, [r7, #24]
 8001912:	43db      	mvns	r3, r3
 8001914:	4909      	ldr	r1, [pc, #36]	; (800193c <HAL_GPIO_Init+0x304>)
 8001916:	4013      	ands	r3, r2
 8001918:	600b      	str	r3, [r1, #0]
 800191a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800191c:	3301      	adds	r3, #1
 800191e:	627b      	str	r3, [r7, #36]	; 0x24
 8001920:	683b      	ldr	r3, [r7, #0]
 8001922:	681a      	ldr	r2, [r3, #0]
 8001924:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001926:	fa22 f303 	lsr.w	r3, r2, r3
 800192a:	2b00      	cmp	r3, #0
 800192c:	f47f ae8e 	bne.w	800164c <HAL_GPIO_Init+0x14>
 8001930:	bf00      	nop
 8001932:	bf00      	nop
 8001934:	372c      	adds	r7, #44	; 0x2c
 8001936:	46bd      	mov	sp, r7
 8001938:	bc80      	pop	{r7}
 800193a:	4770      	bx	lr
 800193c:	40010400 	.word	0x40010400

08001940 <HAL_GPIO_ReadPin>:
 8001940:	b480      	push	{r7}
 8001942:	b085      	sub	sp, #20
 8001944:	af00      	add	r7, sp, #0
 8001946:	6078      	str	r0, [r7, #4]
 8001948:	460b      	mov	r3, r1
 800194a:	807b      	strh	r3, [r7, #2]
 800194c:	687b      	ldr	r3, [r7, #4]
 800194e:	689a      	ldr	r2, [r3, #8]
 8001950:	887b      	ldrh	r3, [r7, #2]
 8001952:	4013      	ands	r3, r2
 8001954:	2b00      	cmp	r3, #0
 8001956:	d002      	beq.n	800195e <HAL_GPIO_ReadPin+0x1e>
 8001958:	2301      	movs	r3, #1
 800195a:	73fb      	strb	r3, [r7, #15]
 800195c:	e001      	b.n	8001962 <HAL_GPIO_ReadPin+0x22>
 800195e:	2300      	movs	r3, #0
 8001960:	73fb      	strb	r3, [r7, #15]
 8001962:	7bfb      	ldrb	r3, [r7, #15]
 8001964:	4618      	mov	r0, r3
 8001966:	3714      	adds	r7, #20
 8001968:	46bd      	mov	sp, r7
 800196a:	bc80      	pop	{r7}
 800196c:	4770      	bx	lr

0800196e <HAL_GPIO_WritePin>:
 800196e:	b480      	push	{r7}
 8001970:	b083      	sub	sp, #12
 8001972:	af00      	add	r7, sp, #0
 8001974:	6078      	str	r0, [r7, #4]
 8001976:	460b      	mov	r3, r1
 8001978:	807b      	strh	r3, [r7, #2]
 800197a:	4613      	mov	r3, r2
 800197c:	707b      	strb	r3, [r7, #1]
 800197e:	787b      	ldrb	r3, [r7, #1]
 8001980:	2b00      	cmp	r3, #0
 8001982:	d003      	beq.n	800198c <HAL_GPIO_WritePin+0x1e>
 8001984:	887a      	ldrh	r2, [r7, #2]
 8001986:	687b      	ldr	r3, [r7, #4]
 8001988:	611a      	str	r2, [r3, #16]
 800198a:	e003      	b.n	8001994 <HAL_GPIO_WritePin+0x26>
 800198c:	887b      	ldrh	r3, [r7, #2]
 800198e:	041a      	lsls	r2, r3, #16
 8001990:	687b      	ldr	r3, [r7, #4]
 8001992:	611a      	str	r2, [r3, #16]
 8001994:	bf00      	nop
 8001996:	370c      	adds	r7, #12
 8001998:	46bd      	mov	sp, r7
 800199a:	bc80      	pop	{r7}
 800199c:	4770      	bx	lr
	...

080019a0 <HAL_I2C_Init>:
 80019a0:	b580      	push	{r7, lr}
 80019a2:	b084      	sub	sp, #16
 80019a4:	af00      	add	r7, sp, #0
 80019a6:	6078      	str	r0, [r7, #4]
 80019a8:	687b      	ldr	r3, [r7, #4]
 80019aa:	2b00      	cmp	r3, #0
 80019ac:	d101      	bne.n	80019b2 <HAL_I2C_Init+0x12>
 80019ae:	2301      	movs	r3, #1
 80019b0:	e12b      	b.n	8001c0a <HAL_I2C_Init+0x26a>
 80019b2:	687b      	ldr	r3, [r7, #4]
 80019b4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80019b8:	b2db      	uxtb	r3, r3
 80019ba:	2b00      	cmp	r3, #0
 80019bc:	d106      	bne.n	80019cc <HAL_I2C_Init+0x2c>
 80019be:	687b      	ldr	r3, [r7, #4]
 80019c0:	2200      	movs	r2, #0
 80019c2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80019c6:	6878      	ldr	r0, [r7, #4]
 80019c8:	f7ff fa1e 	bl	8000e08 <HAL_I2C_MspInit>
 80019cc:	687b      	ldr	r3, [r7, #4]
 80019ce:	2224      	movs	r2, #36	; 0x24
 80019d0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80019d4:	687b      	ldr	r3, [r7, #4]
 80019d6:	681b      	ldr	r3, [r3, #0]
 80019d8:	681a      	ldr	r2, [r3, #0]
 80019da:	687b      	ldr	r3, [r7, #4]
 80019dc:	681b      	ldr	r3, [r3, #0]
 80019de:	f022 0201 	bic.w	r2, r2, #1
 80019e2:	601a      	str	r2, [r3, #0]
 80019e4:	687b      	ldr	r3, [r7, #4]
 80019e6:	681b      	ldr	r3, [r3, #0]
 80019e8:	681a      	ldr	r2, [r3, #0]
 80019ea:	687b      	ldr	r3, [r7, #4]
 80019ec:	681b      	ldr	r3, [r3, #0]
 80019ee:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80019f2:	601a      	str	r2, [r3, #0]
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	681b      	ldr	r3, [r3, #0]
 80019f8:	681a      	ldr	r2, [r3, #0]
 80019fa:	687b      	ldr	r3, [r7, #4]
 80019fc:	681b      	ldr	r3, [r3, #0]
 80019fe:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8001a02:	601a      	str	r2, [r3, #0]
 8001a04:	f001 f830 	bl	8002a68 <HAL_RCC_GetPCLK1Freq>
 8001a08:	60f8      	str	r0, [r7, #12]
 8001a0a:	687b      	ldr	r3, [r7, #4]
 8001a0c:	685b      	ldr	r3, [r3, #4]
 8001a0e:	4a81      	ldr	r2, [pc, #516]	; (8001c14 <HAL_I2C_Init+0x274>)
 8001a10:	4293      	cmp	r3, r2
 8001a12:	d807      	bhi.n	8001a24 <HAL_I2C_Init+0x84>
 8001a14:	68fb      	ldr	r3, [r7, #12]
 8001a16:	4a80      	ldr	r2, [pc, #512]	; (8001c18 <HAL_I2C_Init+0x278>)
 8001a18:	4293      	cmp	r3, r2
 8001a1a:	bf94      	ite	ls
 8001a1c:	2301      	movls	r3, #1
 8001a1e:	2300      	movhi	r3, #0
 8001a20:	b2db      	uxtb	r3, r3
 8001a22:	e006      	b.n	8001a32 <HAL_I2C_Init+0x92>
 8001a24:	68fb      	ldr	r3, [r7, #12]
 8001a26:	4a7d      	ldr	r2, [pc, #500]	; (8001c1c <HAL_I2C_Init+0x27c>)
 8001a28:	4293      	cmp	r3, r2
 8001a2a:	bf94      	ite	ls
 8001a2c:	2301      	movls	r3, #1
 8001a2e:	2300      	movhi	r3, #0
 8001a30:	b2db      	uxtb	r3, r3
 8001a32:	2b00      	cmp	r3, #0
 8001a34:	d001      	beq.n	8001a3a <HAL_I2C_Init+0x9a>
 8001a36:	2301      	movs	r3, #1
 8001a38:	e0e7      	b.n	8001c0a <HAL_I2C_Init+0x26a>
 8001a3a:	68fb      	ldr	r3, [r7, #12]
 8001a3c:	4a78      	ldr	r2, [pc, #480]	; (8001c20 <HAL_I2C_Init+0x280>)
 8001a3e:	fba2 2303 	umull	r2, r3, r2, r3
 8001a42:	0c9b      	lsrs	r3, r3, #18
 8001a44:	60bb      	str	r3, [r7, #8]
 8001a46:	687b      	ldr	r3, [r7, #4]
 8001a48:	681b      	ldr	r3, [r3, #0]
 8001a4a:	685b      	ldr	r3, [r3, #4]
 8001a4c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8001a50:	687b      	ldr	r3, [r7, #4]
 8001a52:	681b      	ldr	r3, [r3, #0]
 8001a54:	68ba      	ldr	r2, [r7, #8]
 8001a56:	430a      	orrs	r2, r1
 8001a58:	605a      	str	r2, [r3, #4]
 8001a5a:	687b      	ldr	r3, [r7, #4]
 8001a5c:	681b      	ldr	r3, [r3, #0]
 8001a5e:	6a1b      	ldr	r3, [r3, #32]
 8001a60:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8001a64:	687b      	ldr	r3, [r7, #4]
 8001a66:	685b      	ldr	r3, [r3, #4]
 8001a68:	4a6a      	ldr	r2, [pc, #424]	; (8001c14 <HAL_I2C_Init+0x274>)
 8001a6a:	4293      	cmp	r3, r2
 8001a6c:	d802      	bhi.n	8001a74 <HAL_I2C_Init+0xd4>
 8001a6e:	68bb      	ldr	r3, [r7, #8]
 8001a70:	3301      	adds	r3, #1
 8001a72:	e009      	b.n	8001a88 <HAL_I2C_Init+0xe8>
 8001a74:	68bb      	ldr	r3, [r7, #8]
 8001a76:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8001a7a:	fb02 f303 	mul.w	r3, r2, r3
 8001a7e:	4a69      	ldr	r2, [pc, #420]	; (8001c24 <HAL_I2C_Init+0x284>)
 8001a80:	fba2 2303 	umull	r2, r3, r2, r3
 8001a84:	099b      	lsrs	r3, r3, #6
 8001a86:	3301      	adds	r3, #1
 8001a88:	687a      	ldr	r2, [r7, #4]
 8001a8a:	6812      	ldr	r2, [r2, #0]
 8001a8c:	430b      	orrs	r3, r1
 8001a8e:	6213      	str	r3, [r2, #32]
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	681b      	ldr	r3, [r3, #0]
 8001a94:	69db      	ldr	r3, [r3, #28]
 8001a96:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8001a9a:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8001a9e:	687b      	ldr	r3, [r7, #4]
 8001aa0:	685b      	ldr	r3, [r3, #4]
 8001aa2:	495c      	ldr	r1, [pc, #368]	; (8001c14 <HAL_I2C_Init+0x274>)
 8001aa4:	428b      	cmp	r3, r1
 8001aa6:	d819      	bhi.n	8001adc <HAL_I2C_Init+0x13c>
 8001aa8:	68fb      	ldr	r3, [r7, #12]
 8001aaa:	1e59      	subs	r1, r3, #1
 8001aac:	687b      	ldr	r3, [r7, #4]
 8001aae:	685b      	ldr	r3, [r3, #4]
 8001ab0:	005b      	lsls	r3, r3, #1
 8001ab2:	fbb1 f3f3 	udiv	r3, r1, r3
 8001ab6:	1c59      	adds	r1, r3, #1
 8001ab8:	f640 73fc 	movw	r3, #4092	; 0xffc
 8001abc:	400b      	ands	r3, r1
 8001abe:	2b00      	cmp	r3, #0
 8001ac0:	d00a      	beq.n	8001ad8 <HAL_I2C_Init+0x138>
 8001ac2:	68fb      	ldr	r3, [r7, #12]
 8001ac4:	1e59      	subs	r1, r3, #1
 8001ac6:	687b      	ldr	r3, [r7, #4]
 8001ac8:	685b      	ldr	r3, [r3, #4]
 8001aca:	005b      	lsls	r3, r3, #1
 8001acc:	fbb1 f3f3 	udiv	r3, r1, r3
 8001ad0:	3301      	adds	r3, #1
 8001ad2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001ad6:	e051      	b.n	8001b7c <HAL_I2C_Init+0x1dc>
 8001ad8:	2304      	movs	r3, #4
 8001ada:	e04f      	b.n	8001b7c <HAL_I2C_Init+0x1dc>
 8001adc:	687b      	ldr	r3, [r7, #4]
 8001ade:	689b      	ldr	r3, [r3, #8]
 8001ae0:	2b00      	cmp	r3, #0
 8001ae2:	d111      	bne.n	8001b08 <HAL_I2C_Init+0x168>
 8001ae4:	68fb      	ldr	r3, [r7, #12]
 8001ae6:	1e58      	subs	r0, r3, #1
 8001ae8:	687b      	ldr	r3, [r7, #4]
 8001aea:	6859      	ldr	r1, [r3, #4]
 8001aec:	460b      	mov	r3, r1
 8001aee:	005b      	lsls	r3, r3, #1
 8001af0:	440b      	add	r3, r1
 8001af2:	fbb0 f3f3 	udiv	r3, r0, r3
 8001af6:	3301      	adds	r3, #1
 8001af8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001afc:	2b00      	cmp	r3, #0
 8001afe:	bf0c      	ite	eq
 8001b00:	2301      	moveq	r3, #1
 8001b02:	2300      	movne	r3, #0
 8001b04:	b2db      	uxtb	r3, r3
 8001b06:	e012      	b.n	8001b2e <HAL_I2C_Init+0x18e>
 8001b08:	68fb      	ldr	r3, [r7, #12]
 8001b0a:	1e58      	subs	r0, r3, #1
 8001b0c:	687b      	ldr	r3, [r7, #4]
 8001b0e:	6859      	ldr	r1, [r3, #4]
 8001b10:	460b      	mov	r3, r1
 8001b12:	009b      	lsls	r3, r3, #2
 8001b14:	440b      	add	r3, r1
 8001b16:	0099      	lsls	r1, r3, #2
 8001b18:	440b      	add	r3, r1
 8001b1a:	fbb0 f3f3 	udiv	r3, r0, r3
 8001b1e:	3301      	adds	r3, #1
 8001b20:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001b24:	2b00      	cmp	r3, #0
 8001b26:	bf0c      	ite	eq
 8001b28:	2301      	moveq	r3, #1
 8001b2a:	2300      	movne	r3, #0
 8001b2c:	b2db      	uxtb	r3, r3
 8001b2e:	2b00      	cmp	r3, #0
 8001b30:	d001      	beq.n	8001b36 <HAL_I2C_Init+0x196>
 8001b32:	2301      	movs	r3, #1
 8001b34:	e022      	b.n	8001b7c <HAL_I2C_Init+0x1dc>
 8001b36:	687b      	ldr	r3, [r7, #4]
 8001b38:	689b      	ldr	r3, [r3, #8]
 8001b3a:	2b00      	cmp	r3, #0
 8001b3c:	d10e      	bne.n	8001b5c <HAL_I2C_Init+0x1bc>
 8001b3e:	68fb      	ldr	r3, [r7, #12]
 8001b40:	1e58      	subs	r0, r3, #1
 8001b42:	687b      	ldr	r3, [r7, #4]
 8001b44:	6859      	ldr	r1, [r3, #4]
 8001b46:	460b      	mov	r3, r1
 8001b48:	005b      	lsls	r3, r3, #1
 8001b4a:	440b      	add	r3, r1
 8001b4c:	fbb0 f3f3 	udiv	r3, r0, r3
 8001b50:	3301      	adds	r3, #1
 8001b52:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001b56:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001b5a:	e00f      	b.n	8001b7c <HAL_I2C_Init+0x1dc>
 8001b5c:	68fb      	ldr	r3, [r7, #12]
 8001b5e:	1e58      	subs	r0, r3, #1
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	6859      	ldr	r1, [r3, #4]
 8001b64:	460b      	mov	r3, r1
 8001b66:	009b      	lsls	r3, r3, #2
 8001b68:	440b      	add	r3, r1
 8001b6a:	0099      	lsls	r1, r3, #2
 8001b6c:	440b      	add	r3, r1
 8001b6e:	fbb0 f3f3 	udiv	r3, r0, r3
 8001b72:	3301      	adds	r3, #1
 8001b74:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001b78:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001b7c:	6879      	ldr	r1, [r7, #4]
 8001b7e:	6809      	ldr	r1, [r1, #0]
 8001b80:	4313      	orrs	r3, r2
 8001b82:	61cb      	str	r3, [r1, #28]
 8001b84:	687b      	ldr	r3, [r7, #4]
 8001b86:	681b      	ldr	r3, [r3, #0]
 8001b88:	681b      	ldr	r3, [r3, #0]
 8001b8a:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8001b8e:	687b      	ldr	r3, [r7, #4]
 8001b90:	69da      	ldr	r2, [r3, #28]
 8001b92:	687b      	ldr	r3, [r7, #4]
 8001b94:	6a1b      	ldr	r3, [r3, #32]
 8001b96:	431a      	orrs	r2, r3
 8001b98:	687b      	ldr	r3, [r7, #4]
 8001b9a:	681b      	ldr	r3, [r3, #0]
 8001b9c:	430a      	orrs	r2, r1
 8001b9e:	601a      	str	r2, [r3, #0]
 8001ba0:	687b      	ldr	r3, [r7, #4]
 8001ba2:	681b      	ldr	r3, [r3, #0]
 8001ba4:	689b      	ldr	r3, [r3, #8]
 8001ba6:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8001baa:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8001bae:	687a      	ldr	r2, [r7, #4]
 8001bb0:	6911      	ldr	r1, [r2, #16]
 8001bb2:	687a      	ldr	r2, [r7, #4]
 8001bb4:	68d2      	ldr	r2, [r2, #12]
 8001bb6:	4311      	orrs	r1, r2
 8001bb8:	687a      	ldr	r2, [r7, #4]
 8001bba:	6812      	ldr	r2, [r2, #0]
 8001bbc:	430b      	orrs	r3, r1
 8001bbe:	6093      	str	r3, [r2, #8]
 8001bc0:	687b      	ldr	r3, [r7, #4]
 8001bc2:	681b      	ldr	r3, [r3, #0]
 8001bc4:	68db      	ldr	r3, [r3, #12]
 8001bc6:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8001bca:	687b      	ldr	r3, [r7, #4]
 8001bcc:	695a      	ldr	r2, [r3, #20]
 8001bce:	687b      	ldr	r3, [r7, #4]
 8001bd0:	699b      	ldr	r3, [r3, #24]
 8001bd2:	431a      	orrs	r2, r3
 8001bd4:	687b      	ldr	r3, [r7, #4]
 8001bd6:	681b      	ldr	r3, [r3, #0]
 8001bd8:	430a      	orrs	r2, r1
 8001bda:	60da      	str	r2, [r3, #12]
 8001bdc:	687b      	ldr	r3, [r7, #4]
 8001bde:	681b      	ldr	r3, [r3, #0]
 8001be0:	681a      	ldr	r2, [r3, #0]
 8001be2:	687b      	ldr	r3, [r7, #4]
 8001be4:	681b      	ldr	r3, [r3, #0]
 8001be6:	f042 0201 	orr.w	r2, r2, #1
 8001bea:	601a      	str	r2, [r3, #0]
 8001bec:	687b      	ldr	r3, [r7, #4]
 8001bee:	2200      	movs	r2, #0
 8001bf0:	641a      	str	r2, [r3, #64]	; 0x40
 8001bf2:	687b      	ldr	r3, [r7, #4]
 8001bf4:	2220      	movs	r2, #32
 8001bf6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001bfa:	687b      	ldr	r3, [r7, #4]
 8001bfc:	2200      	movs	r2, #0
 8001bfe:	631a      	str	r2, [r3, #48]	; 0x30
 8001c00:	687b      	ldr	r3, [r7, #4]
 8001c02:	2200      	movs	r2, #0
 8001c04:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001c08:	2300      	movs	r3, #0
 8001c0a:	4618      	mov	r0, r3
 8001c0c:	3710      	adds	r7, #16
 8001c0e:	46bd      	mov	sp, r7
 8001c10:	bd80      	pop	{r7, pc}
 8001c12:	bf00      	nop
 8001c14:	000186a0 	.word	0x000186a0
 8001c18:	001e847f 	.word	0x001e847f
 8001c1c:	003d08ff 	.word	0x003d08ff
 8001c20:	431bde83 	.word	0x431bde83
 8001c24:	10624dd3 	.word	0x10624dd3

08001c28 <HAL_I2C_Master_Transmit>:
 8001c28:	b580      	push	{r7, lr}
 8001c2a:	b088      	sub	sp, #32
 8001c2c:	af02      	add	r7, sp, #8
 8001c2e:	60f8      	str	r0, [r7, #12]
 8001c30:	607a      	str	r2, [r7, #4]
 8001c32:	461a      	mov	r2, r3
 8001c34:	460b      	mov	r3, r1
 8001c36:	817b      	strh	r3, [r7, #10]
 8001c38:	4613      	mov	r3, r2
 8001c3a:	813b      	strh	r3, [r7, #8]
 8001c3c:	f7ff fbc0 	bl	80013c0 <HAL_GetTick>
 8001c40:	6178      	str	r0, [r7, #20]
 8001c42:	68fb      	ldr	r3, [r7, #12]
 8001c44:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001c48:	b2db      	uxtb	r3, r3
 8001c4a:	2b20      	cmp	r3, #32
 8001c4c:	f040 80e0 	bne.w	8001e10 <HAL_I2C_Master_Transmit+0x1e8>
 8001c50:	697b      	ldr	r3, [r7, #20]
 8001c52:	9300      	str	r3, [sp, #0]
 8001c54:	2319      	movs	r3, #25
 8001c56:	2201      	movs	r2, #1
 8001c58:	4970      	ldr	r1, [pc, #448]	; (8001e1c <HAL_I2C_Master_Transmit+0x1f4>)
 8001c5a:	68f8      	ldr	r0, [r7, #12]
 8001c5c:	f000 f964 	bl	8001f28 <I2C_WaitOnFlagUntilTimeout>
 8001c60:	4603      	mov	r3, r0
 8001c62:	2b00      	cmp	r3, #0
 8001c64:	d001      	beq.n	8001c6a <HAL_I2C_Master_Transmit+0x42>
 8001c66:	2302      	movs	r3, #2
 8001c68:	e0d3      	b.n	8001e12 <HAL_I2C_Master_Transmit+0x1ea>
 8001c6a:	68fb      	ldr	r3, [r7, #12]
 8001c6c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001c70:	2b01      	cmp	r3, #1
 8001c72:	d101      	bne.n	8001c78 <HAL_I2C_Master_Transmit+0x50>
 8001c74:	2302      	movs	r3, #2
 8001c76:	e0cc      	b.n	8001e12 <HAL_I2C_Master_Transmit+0x1ea>
 8001c78:	68fb      	ldr	r3, [r7, #12]
 8001c7a:	2201      	movs	r2, #1
 8001c7c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001c80:	68fb      	ldr	r3, [r7, #12]
 8001c82:	681b      	ldr	r3, [r3, #0]
 8001c84:	681b      	ldr	r3, [r3, #0]
 8001c86:	f003 0301 	and.w	r3, r3, #1
 8001c8a:	2b01      	cmp	r3, #1
 8001c8c:	d007      	beq.n	8001c9e <HAL_I2C_Master_Transmit+0x76>
 8001c8e:	68fb      	ldr	r3, [r7, #12]
 8001c90:	681b      	ldr	r3, [r3, #0]
 8001c92:	681a      	ldr	r2, [r3, #0]
 8001c94:	68fb      	ldr	r3, [r7, #12]
 8001c96:	681b      	ldr	r3, [r3, #0]
 8001c98:	f042 0201 	orr.w	r2, r2, #1
 8001c9c:	601a      	str	r2, [r3, #0]
 8001c9e:	68fb      	ldr	r3, [r7, #12]
 8001ca0:	681b      	ldr	r3, [r3, #0]
 8001ca2:	681a      	ldr	r2, [r3, #0]
 8001ca4:	68fb      	ldr	r3, [r7, #12]
 8001ca6:	681b      	ldr	r3, [r3, #0]
 8001ca8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001cac:	601a      	str	r2, [r3, #0]
 8001cae:	68fb      	ldr	r3, [r7, #12]
 8001cb0:	2221      	movs	r2, #33	; 0x21
 8001cb2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001cb6:	68fb      	ldr	r3, [r7, #12]
 8001cb8:	2210      	movs	r2, #16
 8001cba:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001cbe:	68fb      	ldr	r3, [r7, #12]
 8001cc0:	2200      	movs	r2, #0
 8001cc2:	641a      	str	r2, [r3, #64]	; 0x40
 8001cc4:	68fb      	ldr	r3, [r7, #12]
 8001cc6:	687a      	ldr	r2, [r7, #4]
 8001cc8:	625a      	str	r2, [r3, #36]	; 0x24
 8001cca:	68fb      	ldr	r3, [r7, #12]
 8001ccc:	893a      	ldrh	r2, [r7, #8]
 8001cce:	855a      	strh	r2, [r3, #42]	; 0x2a
 8001cd0:	68fb      	ldr	r3, [r7, #12]
 8001cd2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001cd4:	b29a      	uxth	r2, r3
 8001cd6:	68fb      	ldr	r3, [r7, #12]
 8001cd8:	851a      	strh	r2, [r3, #40]	; 0x28
 8001cda:	68fb      	ldr	r3, [r7, #12]
 8001cdc:	4a50      	ldr	r2, [pc, #320]	; (8001e20 <HAL_I2C_Master_Transmit+0x1f8>)
 8001cde:	62da      	str	r2, [r3, #44]	; 0x2c
 8001ce0:	8979      	ldrh	r1, [r7, #10]
 8001ce2:	697b      	ldr	r3, [r7, #20]
 8001ce4:	6a3a      	ldr	r2, [r7, #32]
 8001ce6:	68f8      	ldr	r0, [r7, #12]
 8001ce8:	f000 f89c 	bl	8001e24 <I2C_MasterRequestWrite>
 8001cec:	4603      	mov	r3, r0
 8001cee:	2b00      	cmp	r3, #0
 8001cf0:	d001      	beq.n	8001cf6 <HAL_I2C_Master_Transmit+0xce>
 8001cf2:	2301      	movs	r3, #1
 8001cf4:	e08d      	b.n	8001e12 <HAL_I2C_Master_Transmit+0x1ea>
 8001cf6:	2300      	movs	r3, #0
 8001cf8:	613b      	str	r3, [r7, #16]
 8001cfa:	68fb      	ldr	r3, [r7, #12]
 8001cfc:	681b      	ldr	r3, [r3, #0]
 8001cfe:	695b      	ldr	r3, [r3, #20]
 8001d00:	613b      	str	r3, [r7, #16]
 8001d02:	68fb      	ldr	r3, [r7, #12]
 8001d04:	681b      	ldr	r3, [r3, #0]
 8001d06:	699b      	ldr	r3, [r3, #24]
 8001d08:	613b      	str	r3, [r7, #16]
 8001d0a:	693b      	ldr	r3, [r7, #16]
 8001d0c:	e066      	b.n	8001ddc <HAL_I2C_Master_Transmit+0x1b4>
 8001d0e:	697a      	ldr	r2, [r7, #20]
 8001d10:	6a39      	ldr	r1, [r7, #32]
 8001d12:	68f8      	ldr	r0, [r7, #12]
 8001d14:	f000 fa22 	bl	800215c <I2C_WaitOnTXEFlagUntilTimeout>
 8001d18:	4603      	mov	r3, r0
 8001d1a:	2b00      	cmp	r3, #0
 8001d1c:	d00d      	beq.n	8001d3a <HAL_I2C_Master_Transmit+0x112>
 8001d1e:	68fb      	ldr	r3, [r7, #12]
 8001d20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d22:	2b04      	cmp	r3, #4
 8001d24:	d107      	bne.n	8001d36 <HAL_I2C_Master_Transmit+0x10e>
 8001d26:	68fb      	ldr	r3, [r7, #12]
 8001d28:	681b      	ldr	r3, [r3, #0]
 8001d2a:	681a      	ldr	r2, [r3, #0]
 8001d2c:	68fb      	ldr	r3, [r7, #12]
 8001d2e:	681b      	ldr	r3, [r3, #0]
 8001d30:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001d34:	601a      	str	r2, [r3, #0]
 8001d36:	2301      	movs	r3, #1
 8001d38:	e06b      	b.n	8001e12 <HAL_I2C_Master_Transmit+0x1ea>
 8001d3a:	68fb      	ldr	r3, [r7, #12]
 8001d3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d3e:	781a      	ldrb	r2, [r3, #0]
 8001d40:	68fb      	ldr	r3, [r7, #12]
 8001d42:	681b      	ldr	r3, [r3, #0]
 8001d44:	611a      	str	r2, [r3, #16]
 8001d46:	68fb      	ldr	r3, [r7, #12]
 8001d48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d4a:	1c5a      	adds	r2, r3, #1
 8001d4c:	68fb      	ldr	r3, [r7, #12]
 8001d4e:	625a      	str	r2, [r3, #36]	; 0x24
 8001d50:	68fb      	ldr	r3, [r7, #12]
 8001d52:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001d54:	b29b      	uxth	r3, r3
 8001d56:	3b01      	subs	r3, #1
 8001d58:	b29a      	uxth	r2, r3
 8001d5a:	68fb      	ldr	r3, [r7, #12]
 8001d5c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8001d5e:	68fb      	ldr	r3, [r7, #12]
 8001d60:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001d62:	3b01      	subs	r3, #1
 8001d64:	b29a      	uxth	r2, r3
 8001d66:	68fb      	ldr	r3, [r7, #12]
 8001d68:	851a      	strh	r2, [r3, #40]	; 0x28
 8001d6a:	68fb      	ldr	r3, [r7, #12]
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	695b      	ldr	r3, [r3, #20]
 8001d70:	f003 0304 	and.w	r3, r3, #4
 8001d74:	2b04      	cmp	r3, #4
 8001d76:	d11b      	bne.n	8001db0 <HAL_I2C_Master_Transmit+0x188>
 8001d78:	68fb      	ldr	r3, [r7, #12]
 8001d7a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001d7c:	2b00      	cmp	r3, #0
 8001d7e:	d017      	beq.n	8001db0 <HAL_I2C_Master_Transmit+0x188>
 8001d80:	68fb      	ldr	r3, [r7, #12]
 8001d82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d84:	781a      	ldrb	r2, [r3, #0]
 8001d86:	68fb      	ldr	r3, [r7, #12]
 8001d88:	681b      	ldr	r3, [r3, #0]
 8001d8a:	611a      	str	r2, [r3, #16]
 8001d8c:	68fb      	ldr	r3, [r7, #12]
 8001d8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d90:	1c5a      	adds	r2, r3, #1
 8001d92:	68fb      	ldr	r3, [r7, #12]
 8001d94:	625a      	str	r2, [r3, #36]	; 0x24
 8001d96:	68fb      	ldr	r3, [r7, #12]
 8001d98:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001d9a:	b29b      	uxth	r3, r3
 8001d9c:	3b01      	subs	r3, #1
 8001d9e:	b29a      	uxth	r2, r3
 8001da0:	68fb      	ldr	r3, [r7, #12]
 8001da2:	855a      	strh	r2, [r3, #42]	; 0x2a
 8001da4:	68fb      	ldr	r3, [r7, #12]
 8001da6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001da8:	3b01      	subs	r3, #1
 8001daa:	b29a      	uxth	r2, r3
 8001dac:	68fb      	ldr	r3, [r7, #12]
 8001dae:	851a      	strh	r2, [r3, #40]	; 0x28
 8001db0:	697a      	ldr	r2, [r7, #20]
 8001db2:	6a39      	ldr	r1, [r7, #32]
 8001db4:	68f8      	ldr	r0, [r7, #12]
 8001db6:	f000 fa19 	bl	80021ec <I2C_WaitOnBTFFlagUntilTimeout>
 8001dba:	4603      	mov	r3, r0
 8001dbc:	2b00      	cmp	r3, #0
 8001dbe:	d00d      	beq.n	8001ddc <HAL_I2C_Master_Transmit+0x1b4>
 8001dc0:	68fb      	ldr	r3, [r7, #12]
 8001dc2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001dc4:	2b04      	cmp	r3, #4
 8001dc6:	d107      	bne.n	8001dd8 <HAL_I2C_Master_Transmit+0x1b0>
 8001dc8:	68fb      	ldr	r3, [r7, #12]
 8001dca:	681b      	ldr	r3, [r3, #0]
 8001dcc:	681a      	ldr	r2, [r3, #0]
 8001dce:	68fb      	ldr	r3, [r7, #12]
 8001dd0:	681b      	ldr	r3, [r3, #0]
 8001dd2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001dd6:	601a      	str	r2, [r3, #0]
 8001dd8:	2301      	movs	r3, #1
 8001dda:	e01a      	b.n	8001e12 <HAL_I2C_Master_Transmit+0x1ea>
 8001ddc:	68fb      	ldr	r3, [r7, #12]
 8001dde:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001de0:	2b00      	cmp	r3, #0
 8001de2:	d194      	bne.n	8001d0e <HAL_I2C_Master_Transmit+0xe6>
 8001de4:	68fb      	ldr	r3, [r7, #12]
 8001de6:	681b      	ldr	r3, [r3, #0]
 8001de8:	681a      	ldr	r2, [r3, #0]
 8001dea:	68fb      	ldr	r3, [r7, #12]
 8001dec:	681b      	ldr	r3, [r3, #0]
 8001dee:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001df2:	601a      	str	r2, [r3, #0]
 8001df4:	68fb      	ldr	r3, [r7, #12]
 8001df6:	2220      	movs	r2, #32
 8001df8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001dfc:	68fb      	ldr	r3, [r7, #12]
 8001dfe:	2200      	movs	r2, #0
 8001e00:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001e04:	68fb      	ldr	r3, [r7, #12]
 8001e06:	2200      	movs	r2, #0
 8001e08:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001e0c:	2300      	movs	r3, #0
 8001e0e:	e000      	b.n	8001e12 <HAL_I2C_Master_Transmit+0x1ea>
 8001e10:	2302      	movs	r3, #2
 8001e12:	4618      	mov	r0, r3
 8001e14:	3718      	adds	r7, #24
 8001e16:	46bd      	mov	sp, r7
 8001e18:	bd80      	pop	{r7, pc}
 8001e1a:	bf00      	nop
 8001e1c:	00100002 	.word	0x00100002
 8001e20:	ffff0000 	.word	0xffff0000

08001e24 <I2C_MasterRequestWrite>:
 8001e24:	b580      	push	{r7, lr}
 8001e26:	b088      	sub	sp, #32
 8001e28:	af02      	add	r7, sp, #8
 8001e2a:	60f8      	str	r0, [r7, #12]
 8001e2c:	607a      	str	r2, [r7, #4]
 8001e2e:	603b      	str	r3, [r7, #0]
 8001e30:	460b      	mov	r3, r1
 8001e32:	817b      	strh	r3, [r7, #10]
 8001e34:	68fb      	ldr	r3, [r7, #12]
 8001e36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001e38:	617b      	str	r3, [r7, #20]
 8001e3a:	697b      	ldr	r3, [r7, #20]
 8001e3c:	2b08      	cmp	r3, #8
 8001e3e:	d006      	beq.n	8001e4e <I2C_MasterRequestWrite+0x2a>
 8001e40:	697b      	ldr	r3, [r7, #20]
 8001e42:	2b01      	cmp	r3, #1
 8001e44:	d003      	beq.n	8001e4e <I2C_MasterRequestWrite+0x2a>
 8001e46:	697b      	ldr	r3, [r7, #20]
 8001e48:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8001e4c:	d108      	bne.n	8001e60 <I2C_MasterRequestWrite+0x3c>
 8001e4e:	68fb      	ldr	r3, [r7, #12]
 8001e50:	681b      	ldr	r3, [r3, #0]
 8001e52:	681a      	ldr	r2, [r3, #0]
 8001e54:	68fb      	ldr	r3, [r7, #12]
 8001e56:	681b      	ldr	r3, [r3, #0]
 8001e58:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001e5c:	601a      	str	r2, [r3, #0]
 8001e5e:	e00b      	b.n	8001e78 <I2C_MasterRequestWrite+0x54>
 8001e60:	68fb      	ldr	r3, [r7, #12]
 8001e62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e64:	2b12      	cmp	r3, #18
 8001e66:	d107      	bne.n	8001e78 <I2C_MasterRequestWrite+0x54>
 8001e68:	68fb      	ldr	r3, [r7, #12]
 8001e6a:	681b      	ldr	r3, [r3, #0]
 8001e6c:	681a      	ldr	r2, [r3, #0]
 8001e6e:	68fb      	ldr	r3, [r7, #12]
 8001e70:	681b      	ldr	r3, [r3, #0]
 8001e72:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001e76:	601a      	str	r2, [r3, #0]
 8001e78:	683b      	ldr	r3, [r7, #0]
 8001e7a:	9300      	str	r3, [sp, #0]
 8001e7c:	687b      	ldr	r3, [r7, #4]
 8001e7e:	2200      	movs	r2, #0
 8001e80:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8001e84:	68f8      	ldr	r0, [r7, #12]
 8001e86:	f000 f84f 	bl	8001f28 <I2C_WaitOnFlagUntilTimeout>
 8001e8a:	4603      	mov	r3, r0
 8001e8c:	2b00      	cmp	r3, #0
 8001e8e:	d00d      	beq.n	8001eac <I2C_MasterRequestWrite+0x88>
 8001e90:	68fb      	ldr	r3, [r7, #12]
 8001e92:	681b      	ldr	r3, [r3, #0]
 8001e94:	681b      	ldr	r3, [r3, #0]
 8001e96:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001e9a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001e9e:	d103      	bne.n	8001ea8 <I2C_MasterRequestWrite+0x84>
 8001ea0:	68fb      	ldr	r3, [r7, #12]
 8001ea2:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001ea6:	641a      	str	r2, [r3, #64]	; 0x40
 8001ea8:	2303      	movs	r3, #3
 8001eaa:	e035      	b.n	8001f18 <I2C_MasterRequestWrite+0xf4>
 8001eac:	68fb      	ldr	r3, [r7, #12]
 8001eae:	691b      	ldr	r3, [r3, #16]
 8001eb0:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8001eb4:	d108      	bne.n	8001ec8 <I2C_MasterRequestWrite+0xa4>
 8001eb6:	897b      	ldrh	r3, [r7, #10]
 8001eb8:	b2db      	uxtb	r3, r3
 8001eba:	461a      	mov	r2, r3
 8001ebc:	68fb      	ldr	r3, [r7, #12]
 8001ebe:	681b      	ldr	r3, [r3, #0]
 8001ec0:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8001ec4:	611a      	str	r2, [r3, #16]
 8001ec6:	e01b      	b.n	8001f00 <I2C_MasterRequestWrite+0xdc>
 8001ec8:	897b      	ldrh	r3, [r7, #10]
 8001eca:	11db      	asrs	r3, r3, #7
 8001ecc:	b2db      	uxtb	r3, r3
 8001ece:	f003 0306 	and.w	r3, r3, #6
 8001ed2:	b2db      	uxtb	r3, r3
 8001ed4:	f063 030f 	orn	r3, r3, #15
 8001ed8:	b2da      	uxtb	r2, r3
 8001eda:	68fb      	ldr	r3, [r7, #12]
 8001edc:	681b      	ldr	r3, [r3, #0]
 8001ede:	611a      	str	r2, [r3, #16]
 8001ee0:	683b      	ldr	r3, [r7, #0]
 8001ee2:	687a      	ldr	r2, [r7, #4]
 8001ee4:	490e      	ldr	r1, [pc, #56]	; (8001f20 <I2C_MasterRequestWrite+0xfc>)
 8001ee6:	68f8      	ldr	r0, [r7, #12]
 8001ee8:	f000 f898 	bl	800201c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8001eec:	4603      	mov	r3, r0
 8001eee:	2b00      	cmp	r3, #0
 8001ef0:	d001      	beq.n	8001ef6 <I2C_MasterRequestWrite+0xd2>
 8001ef2:	2301      	movs	r3, #1
 8001ef4:	e010      	b.n	8001f18 <I2C_MasterRequestWrite+0xf4>
 8001ef6:	897b      	ldrh	r3, [r7, #10]
 8001ef8:	b2da      	uxtb	r2, r3
 8001efa:	68fb      	ldr	r3, [r7, #12]
 8001efc:	681b      	ldr	r3, [r3, #0]
 8001efe:	611a      	str	r2, [r3, #16]
 8001f00:	683b      	ldr	r3, [r7, #0]
 8001f02:	687a      	ldr	r2, [r7, #4]
 8001f04:	4907      	ldr	r1, [pc, #28]	; (8001f24 <I2C_MasterRequestWrite+0x100>)
 8001f06:	68f8      	ldr	r0, [r7, #12]
 8001f08:	f000 f888 	bl	800201c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8001f0c:	4603      	mov	r3, r0
 8001f0e:	2b00      	cmp	r3, #0
 8001f10:	d001      	beq.n	8001f16 <I2C_MasterRequestWrite+0xf2>
 8001f12:	2301      	movs	r3, #1
 8001f14:	e000      	b.n	8001f18 <I2C_MasterRequestWrite+0xf4>
 8001f16:	2300      	movs	r3, #0
 8001f18:	4618      	mov	r0, r3
 8001f1a:	3718      	adds	r7, #24
 8001f1c:	46bd      	mov	sp, r7
 8001f1e:	bd80      	pop	{r7, pc}
 8001f20:	00010008 	.word	0x00010008
 8001f24:	00010002 	.word	0x00010002

08001f28 <I2C_WaitOnFlagUntilTimeout>:
 8001f28:	b580      	push	{r7, lr}
 8001f2a:	b084      	sub	sp, #16
 8001f2c:	af00      	add	r7, sp, #0
 8001f2e:	60f8      	str	r0, [r7, #12]
 8001f30:	60b9      	str	r1, [r7, #8]
 8001f32:	603b      	str	r3, [r7, #0]
 8001f34:	4613      	mov	r3, r2
 8001f36:	71fb      	strb	r3, [r7, #7]
 8001f38:	e048      	b.n	8001fcc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8001f3a:	683b      	ldr	r3, [r7, #0]
 8001f3c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001f40:	d044      	beq.n	8001fcc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8001f42:	f7ff fa3d 	bl	80013c0 <HAL_GetTick>
 8001f46:	4602      	mov	r2, r0
 8001f48:	69bb      	ldr	r3, [r7, #24]
 8001f4a:	1ad3      	subs	r3, r2, r3
 8001f4c:	683a      	ldr	r2, [r7, #0]
 8001f4e:	429a      	cmp	r2, r3
 8001f50:	d302      	bcc.n	8001f58 <I2C_WaitOnFlagUntilTimeout+0x30>
 8001f52:	683b      	ldr	r3, [r7, #0]
 8001f54:	2b00      	cmp	r3, #0
 8001f56:	d139      	bne.n	8001fcc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8001f58:	68bb      	ldr	r3, [r7, #8]
 8001f5a:	0c1b      	lsrs	r3, r3, #16
 8001f5c:	b2db      	uxtb	r3, r3
 8001f5e:	2b01      	cmp	r3, #1
 8001f60:	d10d      	bne.n	8001f7e <I2C_WaitOnFlagUntilTimeout+0x56>
 8001f62:	68fb      	ldr	r3, [r7, #12]
 8001f64:	681b      	ldr	r3, [r3, #0]
 8001f66:	695b      	ldr	r3, [r3, #20]
 8001f68:	43da      	mvns	r2, r3
 8001f6a:	68bb      	ldr	r3, [r7, #8]
 8001f6c:	4013      	ands	r3, r2
 8001f6e:	b29b      	uxth	r3, r3
 8001f70:	2b00      	cmp	r3, #0
 8001f72:	bf0c      	ite	eq
 8001f74:	2301      	moveq	r3, #1
 8001f76:	2300      	movne	r3, #0
 8001f78:	b2db      	uxtb	r3, r3
 8001f7a:	461a      	mov	r2, r3
 8001f7c:	e00c      	b.n	8001f98 <I2C_WaitOnFlagUntilTimeout+0x70>
 8001f7e:	68fb      	ldr	r3, [r7, #12]
 8001f80:	681b      	ldr	r3, [r3, #0]
 8001f82:	699b      	ldr	r3, [r3, #24]
 8001f84:	43da      	mvns	r2, r3
 8001f86:	68bb      	ldr	r3, [r7, #8]
 8001f88:	4013      	ands	r3, r2
 8001f8a:	b29b      	uxth	r3, r3
 8001f8c:	2b00      	cmp	r3, #0
 8001f8e:	bf0c      	ite	eq
 8001f90:	2301      	moveq	r3, #1
 8001f92:	2300      	movne	r3, #0
 8001f94:	b2db      	uxtb	r3, r3
 8001f96:	461a      	mov	r2, r3
 8001f98:	79fb      	ldrb	r3, [r7, #7]
 8001f9a:	429a      	cmp	r2, r3
 8001f9c:	d116      	bne.n	8001fcc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8001f9e:	68fb      	ldr	r3, [r7, #12]
 8001fa0:	2200      	movs	r2, #0
 8001fa2:	631a      	str	r2, [r3, #48]	; 0x30
 8001fa4:	68fb      	ldr	r3, [r7, #12]
 8001fa6:	2220      	movs	r2, #32
 8001fa8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001fac:	68fb      	ldr	r3, [r7, #12]
 8001fae:	2200      	movs	r2, #0
 8001fb0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001fb4:	68fb      	ldr	r3, [r7, #12]
 8001fb6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001fb8:	f043 0220 	orr.w	r2, r3, #32
 8001fbc:	68fb      	ldr	r3, [r7, #12]
 8001fbe:	641a      	str	r2, [r3, #64]	; 0x40
 8001fc0:	68fb      	ldr	r3, [r7, #12]
 8001fc2:	2200      	movs	r2, #0
 8001fc4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001fc8:	2301      	movs	r3, #1
 8001fca:	e023      	b.n	8002014 <I2C_WaitOnFlagUntilTimeout+0xec>
 8001fcc:	68bb      	ldr	r3, [r7, #8]
 8001fce:	0c1b      	lsrs	r3, r3, #16
 8001fd0:	b2db      	uxtb	r3, r3
 8001fd2:	2b01      	cmp	r3, #1
 8001fd4:	d10d      	bne.n	8001ff2 <I2C_WaitOnFlagUntilTimeout+0xca>
 8001fd6:	68fb      	ldr	r3, [r7, #12]
 8001fd8:	681b      	ldr	r3, [r3, #0]
 8001fda:	695b      	ldr	r3, [r3, #20]
 8001fdc:	43da      	mvns	r2, r3
 8001fde:	68bb      	ldr	r3, [r7, #8]
 8001fe0:	4013      	ands	r3, r2
 8001fe2:	b29b      	uxth	r3, r3
 8001fe4:	2b00      	cmp	r3, #0
 8001fe6:	bf0c      	ite	eq
 8001fe8:	2301      	moveq	r3, #1
 8001fea:	2300      	movne	r3, #0
 8001fec:	b2db      	uxtb	r3, r3
 8001fee:	461a      	mov	r2, r3
 8001ff0:	e00c      	b.n	800200c <I2C_WaitOnFlagUntilTimeout+0xe4>
 8001ff2:	68fb      	ldr	r3, [r7, #12]
 8001ff4:	681b      	ldr	r3, [r3, #0]
 8001ff6:	699b      	ldr	r3, [r3, #24]
 8001ff8:	43da      	mvns	r2, r3
 8001ffa:	68bb      	ldr	r3, [r7, #8]
 8001ffc:	4013      	ands	r3, r2
 8001ffe:	b29b      	uxth	r3, r3
 8002000:	2b00      	cmp	r3, #0
 8002002:	bf0c      	ite	eq
 8002004:	2301      	moveq	r3, #1
 8002006:	2300      	movne	r3, #0
 8002008:	b2db      	uxtb	r3, r3
 800200a:	461a      	mov	r2, r3
 800200c:	79fb      	ldrb	r3, [r7, #7]
 800200e:	429a      	cmp	r2, r3
 8002010:	d093      	beq.n	8001f3a <I2C_WaitOnFlagUntilTimeout+0x12>
 8002012:	2300      	movs	r3, #0
 8002014:	4618      	mov	r0, r3
 8002016:	3710      	adds	r7, #16
 8002018:	46bd      	mov	sp, r7
 800201a:	bd80      	pop	{r7, pc}

0800201c <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 800201c:	b580      	push	{r7, lr}
 800201e:	b084      	sub	sp, #16
 8002020:	af00      	add	r7, sp, #0
 8002022:	60f8      	str	r0, [r7, #12]
 8002024:	60b9      	str	r1, [r7, #8]
 8002026:	607a      	str	r2, [r7, #4]
 8002028:	603b      	str	r3, [r7, #0]
 800202a:	e071      	b.n	8002110 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 800202c:	68fb      	ldr	r3, [r7, #12]
 800202e:	681b      	ldr	r3, [r3, #0]
 8002030:	695b      	ldr	r3, [r3, #20]
 8002032:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002036:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800203a:	d123      	bne.n	8002084 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 800203c:	68fb      	ldr	r3, [r7, #12]
 800203e:	681b      	ldr	r3, [r3, #0]
 8002040:	681a      	ldr	r2, [r3, #0]
 8002042:	68fb      	ldr	r3, [r7, #12]
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800204a:	601a      	str	r2, [r3, #0]
 800204c:	68fb      	ldr	r3, [r7, #12]
 800204e:	681b      	ldr	r3, [r3, #0]
 8002050:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8002054:	615a      	str	r2, [r3, #20]
 8002056:	68fb      	ldr	r3, [r7, #12]
 8002058:	2200      	movs	r2, #0
 800205a:	631a      	str	r2, [r3, #48]	; 0x30
 800205c:	68fb      	ldr	r3, [r7, #12]
 800205e:	2220      	movs	r2, #32
 8002060:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002064:	68fb      	ldr	r3, [r7, #12]
 8002066:	2200      	movs	r2, #0
 8002068:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800206c:	68fb      	ldr	r3, [r7, #12]
 800206e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002070:	f043 0204 	orr.w	r2, r3, #4
 8002074:	68fb      	ldr	r3, [r7, #12]
 8002076:	641a      	str	r2, [r3, #64]	; 0x40
 8002078:	68fb      	ldr	r3, [r7, #12]
 800207a:	2200      	movs	r2, #0
 800207c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002080:	2301      	movs	r3, #1
 8002082:	e067      	b.n	8002154 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8002084:	687b      	ldr	r3, [r7, #4]
 8002086:	f1b3 3fff 	cmp.w	r3, #4294967295
 800208a:	d041      	beq.n	8002110 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 800208c:	f7ff f998 	bl	80013c0 <HAL_GetTick>
 8002090:	4602      	mov	r2, r0
 8002092:	683b      	ldr	r3, [r7, #0]
 8002094:	1ad3      	subs	r3, r2, r3
 8002096:	687a      	ldr	r2, [r7, #4]
 8002098:	429a      	cmp	r2, r3
 800209a:	d302      	bcc.n	80020a2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	2b00      	cmp	r3, #0
 80020a0:	d136      	bne.n	8002110 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80020a2:	68bb      	ldr	r3, [r7, #8]
 80020a4:	0c1b      	lsrs	r3, r3, #16
 80020a6:	b2db      	uxtb	r3, r3
 80020a8:	2b01      	cmp	r3, #1
 80020aa:	d10c      	bne.n	80020c6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 80020ac:	68fb      	ldr	r3, [r7, #12]
 80020ae:	681b      	ldr	r3, [r3, #0]
 80020b0:	695b      	ldr	r3, [r3, #20]
 80020b2:	43da      	mvns	r2, r3
 80020b4:	68bb      	ldr	r3, [r7, #8]
 80020b6:	4013      	ands	r3, r2
 80020b8:	b29b      	uxth	r3, r3
 80020ba:	2b00      	cmp	r3, #0
 80020bc:	bf14      	ite	ne
 80020be:	2301      	movne	r3, #1
 80020c0:	2300      	moveq	r3, #0
 80020c2:	b2db      	uxtb	r3, r3
 80020c4:	e00b      	b.n	80020de <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 80020c6:	68fb      	ldr	r3, [r7, #12]
 80020c8:	681b      	ldr	r3, [r3, #0]
 80020ca:	699b      	ldr	r3, [r3, #24]
 80020cc:	43da      	mvns	r2, r3
 80020ce:	68bb      	ldr	r3, [r7, #8]
 80020d0:	4013      	ands	r3, r2
 80020d2:	b29b      	uxth	r3, r3
 80020d4:	2b00      	cmp	r3, #0
 80020d6:	bf14      	ite	ne
 80020d8:	2301      	movne	r3, #1
 80020da:	2300      	moveq	r3, #0
 80020dc:	b2db      	uxtb	r3, r3
 80020de:	2b00      	cmp	r3, #0
 80020e0:	d016      	beq.n	8002110 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80020e2:	68fb      	ldr	r3, [r7, #12]
 80020e4:	2200      	movs	r2, #0
 80020e6:	631a      	str	r2, [r3, #48]	; 0x30
 80020e8:	68fb      	ldr	r3, [r7, #12]
 80020ea:	2220      	movs	r2, #32
 80020ec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80020f0:	68fb      	ldr	r3, [r7, #12]
 80020f2:	2200      	movs	r2, #0
 80020f4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80020f8:	68fb      	ldr	r3, [r7, #12]
 80020fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020fc:	f043 0220 	orr.w	r2, r3, #32
 8002100:	68fb      	ldr	r3, [r7, #12]
 8002102:	641a      	str	r2, [r3, #64]	; 0x40
 8002104:	68fb      	ldr	r3, [r7, #12]
 8002106:	2200      	movs	r2, #0
 8002108:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800210c:	2301      	movs	r3, #1
 800210e:	e021      	b.n	8002154 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8002110:	68bb      	ldr	r3, [r7, #8]
 8002112:	0c1b      	lsrs	r3, r3, #16
 8002114:	b2db      	uxtb	r3, r3
 8002116:	2b01      	cmp	r3, #1
 8002118:	d10c      	bne.n	8002134 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 800211a:	68fb      	ldr	r3, [r7, #12]
 800211c:	681b      	ldr	r3, [r3, #0]
 800211e:	695b      	ldr	r3, [r3, #20]
 8002120:	43da      	mvns	r2, r3
 8002122:	68bb      	ldr	r3, [r7, #8]
 8002124:	4013      	ands	r3, r2
 8002126:	b29b      	uxth	r3, r3
 8002128:	2b00      	cmp	r3, #0
 800212a:	bf14      	ite	ne
 800212c:	2301      	movne	r3, #1
 800212e:	2300      	moveq	r3, #0
 8002130:	b2db      	uxtb	r3, r3
 8002132:	e00b      	b.n	800214c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8002134:	68fb      	ldr	r3, [r7, #12]
 8002136:	681b      	ldr	r3, [r3, #0]
 8002138:	699b      	ldr	r3, [r3, #24]
 800213a:	43da      	mvns	r2, r3
 800213c:	68bb      	ldr	r3, [r7, #8]
 800213e:	4013      	ands	r3, r2
 8002140:	b29b      	uxth	r3, r3
 8002142:	2b00      	cmp	r3, #0
 8002144:	bf14      	ite	ne
 8002146:	2301      	movne	r3, #1
 8002148:	2300      	moveq	r3, #0
 800214a:	b2db      	uxtb	r3, r3
 800214c:	2b00      	cmp	r3, #0
 800214e:	f47f af6d 	bne.w	800202c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8002152:	2300      	movs	r3, #0
 8002154:	4618      	mov	r0, r3
 8002156:	3710      	adds	r7, #16
 8002158:	46bd      	mov	sp, r7
 800215a:	bd80      	pop	{r7, pc}

0800215c <I2C_WaitOnTXEFlagUntilTimeout>:
 800215c:	b580      	push	{r7, lr}
 800215e:	b084      	sub	sp, #16
 8002160:	af00      	add	r7, sp, #0
 8002162:	60f8      	str	r0, [r7, #12]
 8002164:	60b9      	str	r1, [r7, #8]
 8002166:	607a      	str	r2, [r7, #4]
 8002168:	e034      	b.n	80021d4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800216a:	68f8      	ldr	r0, [r7, #12]
 800216c:	f000 f886 	bl	800227c <I2C_IsAcknowledgeFailed>
 8002170:	4603      	mov	r3, r0
 8002172:	2b00      	cmp	r3, #0
 8002174:	d001      	beq.n	800217a <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8002176:	2301      	movs	r3, #1
 8002178:	e034      	b.n	80021e4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 800217a:	68bb      	ldr	r3, [r7, #8]
 800217c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002180:	d028      	beq.n	80021d4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8002182:	f7ff f91d 	bl	80013c0 <HAL_GetTick>
 8002186:	4602      	mov	r2, r0
 8002188:	687b      	ldr	r3, [r7, #4]
 800218a:	1ad3      	subs	r3, r2, r3
 800218c:	68ba      	ldr	r2, [r7, #8]
 800218e:	429a      	cmp	r2, r3
 8002190:	d302      	bcc.n	8002198 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8002192:	68bb      	ldr	r3, [r7, #8]
 8002194:	2b00      	cmp	r3, #0
 8002196:	d11d      	bne.n	80021d4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8002198:	68fb      	ldr	r3, [r7, #12]
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	695b      	ldr	r3, [r3, #20]
 800219e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80021a2:	2b80      	cmp	r3, #128	; 0x80
 80021a4:	d016      	beq.n	80021d4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80021a6:	68fb      	ldr	r3, [r7, #12]
 80021a8:	2200      	movs	r2, #0
 80021aa:	631a      	str	r2, [r3, #48]	; 0x30
 80021ac:	68fb      	ldr	r3, [r7, #12]
 80021ae:	2220      	movs	r2, #32
 80021b0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80021b4:	68fb      	ldr	r3, [r7, #12]
 80021b6:	2200      	movs	r2, #0
 80021b8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80021bc:	68fb      	ldr	r3, [r7, #12]
 80021be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021c0:	f043 0220 	orr.w	r2, r3, #32
 80021c4:	68fb      	ldr	r3, [r7, #12]
 80021c6:	641a      	str	r2, [r3, #64]	; 0x40
 80021c8:	68fb      	ldr	r3, [r7, #12]
 80021ca:	2200      	movs	r2, #0
 80021cc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80021d0:	2301      	movs	r3, #1
 80021d2:	e007      	b.n	80021e4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 80021d4:	68fb      	ldr	r3, [r7, #12]
 80021d6:	681b      	ldr	r3, [r3, #0]
 80021d8:	695b      	ldr	r3, [r3, #20]
 80021da:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80021de:	2b80      	cmp	r3, #128	; 0x80
 80021e0:	d1c3      	bne.n	800216a <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 80021e2:	2300      	movs	r3, #0
 80021e4:	4618      	mov	r0, r3
 80021e6:	3710      	adds	r7, #16
 80021e8:	46bd      	mov	sp, r7
 80021ea:	bd80      	pop	{r7, pc}

080021ec <I2C_WaitOnBTFFlagUntilTimeout>:
 80021ec:	b580      	push	{r7, lr}
 80021ee:	b084      	sub	sp, #16
 80021f0:	af00      	add	r7, sp, #0
 80021f2:	60f8      	str	r0, [r7, #12]
 80021f4:	60b9      	str	r1, [r7, #8]
 80021f6:	607a      	str	r2, [r7, #4]
 80021f8:	e034      	b.n	8002264 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80021fa:	68f8      	ldr	r0, [r7, #12]
 80021fc:	f000 f83e 	bl	800227c <I2C_IsAcknowledgeFailed>
 8002200:	4603      	mov	r3, r0
 8002202:	2b00      	cmp	r3, #0
 8002204:	d001      	beq.n	800220a <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8002206:	2301      	movs	r3, #1
 8002208:	e034      	b.n	8002274 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 800220a:	68bb      	ldr	r3, [r7, #8]
 800220c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002210:	d028      	beq.n	8002264 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002212:	f7ff f8d5 	bl	80013c0 <HAL_GetTick>
 8002216:	4602      	mov	r2, r0
 8002218:	687b      	ldr	r3, [r7, #4]
 800221a:	1ad3      	subs	r3, r2, r3
 800221c:	68ba      	ldr	r2, [r7, #8]
 800221e:	429a      	cmp	r2, r3
 8002220:	d302      	bcc.n	8002228 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8002222:	68bb      	ldr	r3, [r7, #8]
 8002224:	2b00      	cmp	r3, #0
 8002226:	d11d      	bne.n	8002264 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002228:	68fb      	ldr	r3, [r7, #12]
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	695b      	ldr	r3, [r3, #20]
 800222e:	f003 0304 	and.w	r3, r3, #4
 8002232:	2b04      	cmp	r3, #4
 8002234:	d016      	beq.n	8002264 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002236:	68fb      	ldr	r3, [r7, #12]
 8002238:	2200      	movs	r2, #0
 800223a:	631a      	str	r2, [r3, #48]	; 0x30
 800223c:	68fb      	ldr	r3, [r7, #12]
 800223e:	2220      	movs	r2, #32
 8002240:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002244:	68fb      	ldr	r3, [r7, #12]
 8002246:	2200      	movs	r2, #0
 8002248:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800224c:	68fb      	ldr	r3, [r7, #12]
 800224e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002250:	f043 0220 	orr.w	r2, r3, #32
 8002254:	68fb      	ldr	r3, [r7, #12]
 8002256:	641a      	str	r2, [r3, #64]	; 0x40
 8002258:	68fb      	ldr	r3, [r7, #12]
 800225a:	2200      	movs	r2, #0
 800225c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002260:	2301      	movs	r3, #1
 8002262:	e007      	b.n	8002274 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8002264:	68fb      	ldr	r3, [r7, #12]
 8002266:	681b      	ldr	r3, [r3, #0]
 8002268:	695b      	ldr	r3, [r3, #20]
 800226a:	f003 0304 	and.w	r3, r3, #4
 800226e:	2b04      	cmp	r3, #4
 8002270:	d1c3      	bne.n	80021fa <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8002272:	2300      	movs	r3, #0
 8002274:	4618      	mov	r0, r3
 8002276:	3710      	adds	r7, #16
 8002278:	46bd      	mov	sp, r7
 800227a:	bd80      	pop	{r7, pc}

0800227c <I2C_IsAcknowledgeFailed>:
 800227c:	b480      	push	{r7}
 800227e:	b083      	sub	sp, #12
 8002280:	af00      	add	r7, sp, #0
 8002282:	6078      	str	r0, [r7, #4]
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	681b      	ldr	r3, [r3, #0]
 8002288:	695b      	ldr	r3, [r3, #20]
 800228a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800228e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002292:	d11b      	bne.n	80022cc <I2C_IsAcknowledgeFailed+0x50>
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	681b      	ldr	r3, [r3, #0]
 8002298:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800229c:	615a      	str	r2, [r3, #20]
 800229e:	687b      	ldr	r3, [r7, #4]
 80022a0:	2200      	movs	r2, #0
 80022a2:	631a      	str	r2, [r3, #48]	; 0x30
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	2220      	movs	r2, #32
 80022a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	2200      	movs	r2, #0
 80022b0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022b8:	f043 0204 	orr.w	r2, r3, #4
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	641a      	str	r2, [r3, #64]	; 0x40
 80022c0:	687b      	ldr	r3, [r7, #4]
 80022c2:	2200      	movs	r2, #0
 80022c4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80022c8:	2301      	movs	r3, #1
 80022ca:	e000      	b.n	80022ce <I2C_IsAcknowledgeFailed+0x52>
 80022cc:	2300      	movs	r3, #0
 80022ce:	4618      	mov	r0, r3
 80022d0:	370c      	adds	r7, #12
 80022d2:	46bd      	mov	sp, r7
 80022d4:	bc80      	pop	{r7}
 80022d6:	4770      	bx	lr

080022d8 <HAL_RCC_OscConfig>:
 80022d8:	b580      	push	{r7, lr}
 80022da:	b086      	sub	sp, #24
 80022dc:	af00      	add	r7, sp, #0
 80022de:	6078      	str	r0, [r7, #4]
 80022e0:	687b      	ldr	r3, [r7, #4]
 80022e2:	2b00      	cmp	r3, #0
 80022e4:	d101      	bne.n	80022ea <HAL_RCC_OscConfig+0x12>
 80022e6:	2301      	movs	r3, #1
 80022e8:	e26c      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	681b      	ldr	r3, [r3, #0]
 80022ee:	f003 0301 	and.w	r3, r3, #1
 80022f2:	2b00      	cmp	r3, #0
 80022f4:	f000 8087 	beq.w	8002406 <HAL_RCC_OscConfig+0x12e>
 80022f8:	4b92      	ldr	r3, [pc, #584]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 80022fa:	685b      	ldr	r3, [r3, #4]
 80022fc:	f003 030c 	and.w	r3, r3, #12
 8002300:	2b04      	cmp	r3, #4
 8002302:	d00c      	beq.n	800231e <HAL_RCC_OscConfig+0x46>
 8002304:	4b8f      	ldr	r3, [pc, #572]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 8002306:	685b      	ldr	r3, [r3, #4]
 8002308:	f003 030c 	and.w	r3, r3, #12
 800230c:	2b08      	cmp	r3, #8
 800230e:	d112      	bne.n	8002336 <HAL_RCC_OscConfig+0x5e>
 8002310:	4b8c      	ldr	r3, [pc, #560]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 8002312:	685b      	ldr	r3, [r3, #4]
 8002314:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002318:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800231c:	d10b      	bne.n	8002336 <HAL_RCC_OscConfig+0x5e>
 800231e:	4b89      	ldr	r3, [pc, #548]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 8002320:	681b      	ldr	r3, [r3, #0]
 8002322:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002326:	2b00      	cmp	r3, #0
 8002328:	d06c      	beq.n	8002404 <HAL_RCC_OscConfig+0x12c>
 800232a:	687b      	ldr	r3, [r7, #4]
 800232c:	685b      	ldr	r3, [r3, #4]
 800232e:	2b00      	cmp	r3, #0
 8002330:	d168      	bne.n	8002404 <HAL_RCC_OscConfig+0x12c>
 8002332:	2301      	movs	r3, #1
 8002334:	e246      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	685b      	ldr	r3, [r3, #4]
 800233a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800233e:	d106      	bne.n	800234e <HAL_RCC_OscConfig+0x76>
 8002340:	4b80      	ldr	r3, [pc, #512]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 8002342:	681b      	ldr	r3, [r3, #0]
 8002344:	4a7f      	ldr	r2, [pc, #508]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 8002346:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800234a:	6013      	str	r3, [r2, #0]
 800234c:	e02e      	b.n	80023ac <HAL_RCC_OscConfig+0xd4>
 800234e:	687b      	ldr	r3, [r7, #4]
 8002350:	685b      	ldr	r3, [r3, #4]
 8002352:	2b00      	cmp	r3, #0
 8002354:	d10c      	bne.n	8002370 <HAL_RCC_OscConfig+0x98>
 8002356:	4b7b      	ldr	r3, [pc, #492]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 8002358:	681b      	ldr	r3, [r3, #0]
 800235a:	4a7a      	ldr	r2, [pc, #488]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 800235c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002360:	6013      	str	r3, [r2, #0]
 8002362:	4b78      	ldr	r3, [pc, #480]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 8002364:	681b      	ldr	r3, [r3, #0]
 8002366:	4a77      	ldr	r2, [pc, #476]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 8002368:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800236c:	6013      	str	r3, [r2, #0]
 800236e:	e01d      	b.n	80023ac <HAL_RCC_OscConfig+0xd4>
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	685b      	ldr	r3, [r3, #4]
 8002374:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002378:	d10c      	bne.n	8002394 <HAL_RCC_OscConfig+0xbc>
 800237a:	4b72      	ldr	r3, [pc, #456]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 800237c:	681b      	ldr	r3, [r3, #0]
 800237e:	4a71      	ldr	r2, [pc, #452]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 8002380:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002384:	6013      	str	r3, [r2, #0]
 8002386:	4b6f      	ldr	r3, [pc, #444]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 8002388:	681b      	ldr	r3, [r3, #0]
 800238a:	4a6e      	ldr	r2, [pc, #440]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 800238c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002390:	6013      	str	r3, [r2, #0]
 8002392:	e00b      	b.n	80023ac <HAL_RCC_OscConfig+0xd4>
 8002394:	4b6b      	ldr	r3, [pc, #428]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	4a6a      	ldr	r2, [pc, #424]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 800239a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800239e:	6013      	str	r3, [r2, #0]
 80023a0:	4b68      	ldr	r3, [pc, #416]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	4a67      	ldr	r2, [pc, #412]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 80023a6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80023aa:	6013      	str	r3, [r2, #0]
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	685b      	ldr	r3, [r3, #4]
 80023b0:	2b00      	cmp	r3, #0
 80023b2:	d013      	beq.n	80023dc <HAL_RCC_OscConfig+0x104>
 80023b4:	f7ff f804 	bl	80013c0 <HAL_GetTick>
 80023b8:	6138      	str	r0, [r7, #16]
 80023ba:	e008      	b.n	80023ce <HAL_RCC_OscConfig+0xf6>
 80023bc:	f7ff f800 	bl	80013c0 <HAL_GetTick>
 80023c0:	4602      	mov	r2, r0
 80023c2:	693b      	ldr	r3, [r7, #16]
 80023c4:	1ad3      	subs	r3, r2, r3
 80023c6:	2b64      	cmp	r3, #100	; 0x64
 80023c8:	d901      	bls.n	80023ce <HAL_RCC_OscConfig+0xf6>
 80023ca:	2303      	movs	r3, #3
 80023cc:	e1fa      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 80023ce:	4b5d      	ldr	r3, [pc, #372]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 80023d0:	681b      	ldr	r3, [r3, #0]
 80023d2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80023d6:	2b00      	cmp	r3, #0
 80023d8:	d0f0      	beq.n	80023bc <HAL_RCC_OscConfig+0xe4>
 80023da:	e014      	b.n	8002406 <HAL_RCC_OscConfig+0x12e>
 80023dc:	f7fe fff0 	bl	80013c0 <HAL_GetTick>
 80023e0:	6138      	str	r0, [r7, #16]
 80023e2:	e008      	b.n	80023f6 <HAL_RCC_OscConfig+0x11e>
 80023e4:	f7fe ffec 	bl	80013c0 <HAL_GetTick>
 80023e8:	4602      	mov	r2, r0
 80023ea:	693b      	ldr	r3, [r7, #16]
 80023ec:	1ad3      	subs	r3, r2, r3
 80023ee:	2b64      	cmp	r3, #100	; 0x64
 80023f0:	d901      	bls.n	80023f6 <HAL_RCC_OscConfig+0x11e>
 80023f2:	2303      	movs	r3, #3
 80023f4:	e1e6      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 80023f6:	4b53      	ldr	r3, [pc, #332]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 80023f8:	681b      	ldr	r3, [r3, #0]
 80023fa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80023fe:	2b00      	cmp	r3, #0
 8002400:	d1f0      	bne.n	80023e4 <HAL_RCC_OscConfig+0x10c>
 8002402:	e000      	b.n	8002406 <HAL_RCC_OscConfig+0x12e>
 8002404:	bf00      	nop
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	681b      	ldr	r3, [r3, #0]
 800240a:	f003 0302 	and.w	r3, r3, #2
 800240e:	2b00      	cmp	r3, #0
 8002410:	d063      	beq.n	80024da <HAL_RCC_OscConfig+0x202>
 8002412:	4b4c      	ldr	r3, [pc, #304]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 8002414:	685b      	ldr	r3, [r3, #4]
 8002416:	f003 030c 	and.w	r3, r3, #12
 800241a:	2b00      	cmp	r3, #0
 800241c:	d00b      	beq.n	8002436 <HAL_RCC_OscConfig+0x15e>
 800241e:	4b49      	ldr	r3, [pc, #292]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 8002420:	685b      	ldr	r3, [r3, #4]
 8002422:	f003 030c 	and.w	r3, r3, #12
 8002426:	2b08      	cmp	r3, #8
 8002428:	d11c      	bne.n	8002464 <HAL_RCC_OscConfig+0x18c>
 800242a:	4b46      	ldr	r3, [pc, #280]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 800242c:	685b      	ldr	r3, [r3, #4]
 800242e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002432:	2b00      	cmp	r3, #0
 8002434:	d116      	bne.n	8002464 <HAL_RCC_OscConfig+0x18c>
 8002436:	4b43      	ldr	r3, [pc, #268]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 8002438:	681b      	ldr	r3, [r3, #0]
 800243a:	f003 0302 	and.w	r3, r3, #2
 800243e:	2b00      	cmp	r3, #0
 8002440:	d005      	beq.n	800244e <HAL_RCC_OscConfig+0x176>
 8002442:	687b      	ldr	r3, [r7, #4]
 8002444:	691b      	ldr	r3, [r3, #16]
 8002446:	2b01      	cmp	r3, #1
 8002448:	d001      	beq.n	800244e <HAL_RCC_OscConfig+0x176>
 800244a:	2301      	movs	r3, #1
 800244c:	e1ba      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 800244e:	4b3d      	ldr	r3, [pc, #244]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 8002450:	681b      	ldr	r3, [r3, #0]
 8002452:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002456:	687b      	ldr	r3, [r7, #4]
 8002458:	695b      	ldr	r3, [r3, #20]
 800245a:	00db      	lsls	r3, r3, #3
 800245c:	4939      	ldr	r1, [pc, #228]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 800245e:	4313      	orrs	r3, r2
 8002460:	600b      	str	r3, [r1, #0]
 8002462:	e03a      	b.n	80024da <HAL_RCC_OscConfig+0x202>
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	691b      	ldr	r3, [r3, #16]
 8002468:	2b00      	cmp	r3, #0
 800246a:	d020      	beq.n	80024ae <HAL_RCC_OscConfig+0x1d6>
 800246c:	4b36      	ldr	r3, [pc, #216]	; (8002548 <HAL_RCC_OscConfig+0x270>)
 800246e:	2201      	movs	r2, #1
 8002470:	601a      	str	r2, [r3, #0]
 8002472:	f7fe ffa5 	bl	80013c0 <HAL_GetTick>
 8002476:	6138      	str	r0, [r7, #16]
 8002478:	e008      	b.n	800248c <HAL_RCC_OscConfig+0x1b4>
 800247a:	f7fe ffa1 	bl	80013c0 <HAL_GetTick>
 800247e:	4602      	mov	r2, r0
 8002480:	693b      	ldr	r3, [r7, #16]
 8002482:	1ad3      	subs	r3, r2, r3
 8002484:	2b02      	cmp	r3, #2
 8002486:	d901      	bls.n	800248c <HAL_RCC_OscConfig+0x1b4>
 8002488:	2303      	movs	r3, #3
 800248a:	e19b      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 800248c:	4b2d      	ldr	r3, [pc, #180]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 800248e:	681b      	ldr	r3, [r3, #0]
 8002490:	f003 0302 	and.w	r3, r3, #2
 8002494:	2b00      	cmp	r3, #0
 8002496:	d0f0      	beq.n	800247a <HAL_RCC_OscConfig+0x1a2>
 8002498:	4b2a      	ldr	r3, [pc, #168]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 800249a:	681b      	ldr	r3, [r3, #0]
 800249c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	695b      	ldr	r3, [r3, #20]
 80024a4:	00db      	lsls	r3, r3, #3
 80024a6:	4927      	ldr	r1, [pc, #156]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 80024a8:	4313      	orrs	r3, r2
 80024aa:	600b      	str	r3, [r1, #0]
 80024ac:	e015      	b.n	80024da <HAL_RCC_OscConfig+0x202>
 80024ae:	4b26      	ldr	r3, [pc, #152]	; (8002548 <HAL_RCC_OscConfig+0x270>)
 80024b0:	2200      	movs	r2, #0
 80024b2:	601a      	str	r2, [r3, #0]
 80024b4:	f7fe ff84 	bl	80013c0 <HAL_GetTick>
 80024b8:	6138      	str	r0, [r7, #16]
 80024ba:	e008      	b.n	80024ce <HAL_RCC_OscConfig+0x1f6>
 80024bc:	f7fe ff80 	bl	80013c0 <HAL_GetTick>
 80024c0:	4602      	mov	r2, r0
 80024c2:	693b      	ldr	r3, [r7, #16]
 80024c4:	1ad3      	subs	r3, r2, r3
 80024c6:	2b02      	cmp	r3, #2
 80024c8:	d901      	bls.n	80024ce <HAL_RCC_OscConfig+0x1f6>
 80024ca:	2303      	movs	r3, #3
 80024cc:	e17a      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 80024ce:	4b1d      	ldr	r3, [pc, #116]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 80024d0:	681b      	ldr	r3, [r3, #0]
 80024d2:	f003 0302 	and.w	r3, r3, #2
 80024d6:	2b00      	cmp	r3, #0
 80024d8:	d1f0      	bne.n	80024bc <HAL_RCC_OscConfig+0x1e4>
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	681b      	ldr	r3, [r3, #0]
 80024de:	f003 0308 	and.w	r3, r3, #8
 80024e2:	2b00      	cmp	r3, #0
 80024e4:	d03a      	beq.n	800255c <HAL_RCC_OscConfig+0x284>
 80024e6:	687b      	ldr	r3, [r7, #4]
 80024e8:	699b      	ldr	r3, [r3, #24]
 80024ea:	2b00      	cmp	r3, #0
 80024ec:	d019      	beq.n	8002522 <HAL_RCC_OscConfig+0x24a>
 80024ee:	4b17      	ldr	r3, [pc, #92]	; (800254c <HAL_RCC_OscConfig+0x274>)
 80024f0:	2201      	movs	r2, #1
 80024f2:	601a      	str	r2, [r3, #0]
 80024f4:	f7fe ff64 	bl	80013c0 <HAL_GetTick>
 80024f8:	6138      	str	r0, [r7, #16]
 80024fa:	e008      	b.n	800250e <HAL_RCC_OscConfig+0x236>
 80024fc:	f7fe ff60 	bl	80013c0 <HAL_GetTick>
 8002500:	4602      	mov	r2, r0
 8002502:	693b      	ldr	r3, [r7, #16]
 8002504:	1ad3      	subs	r3, r2, r3
 8002506:	2b02      	cmp	r3, #2
 8002508:	d901      	bls.n	800250e <HAL_RCC_OscConfig+0x236>
 800250a:	2303      	movs	r3, #3
 800250c:	e15a      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 800250e:	4b0d      	ldr	r3, [pc, #52]	; (8002544 <HAL_RCC_OscConfig+0x26c>)
 8002510:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002512:	f003 0302 	and.w	r3, r3, #2
 8002516:	2b00      	cmp	r3, #0
 8002518:	d0f0      	beq.n	80024fc <HAL_RCC_OscConfig+0x224>
 800251a:	2001      	movs	r0, #1
 800251c:	f000 fab8 	bl	8002a90 <RCC_Delay>
 8002520:	e01c      	b.n	800255c <HAL_RCC_OscConfig+0x284>
 8002522:	4b0a      	ldr	r3, [pc, #40]	; (800254c <HAL_RCC_OscConfig+0x274>)
 8002524:	2200      	movs	r2, #0
 8002526:	601a      	str	r2, [r3, #0]
 8002528:	f7fe ff4a 	bl	80013c0 <HAL_GetTick>
 800252c:	6138      	str	r0, [r7, #16]
 800252e:	e00f      	b.n	8002550 <HAL_RCC_OscConfig+0x278>
 8002530:	f7fe ff46 	bl	80013c0 <HAL_GetTick>
 8002534:	4602      	mov	r2, r0
 8002536:	693b      	ldr	r3, [r7, #16]
 8002538:	1ad3      	subs	r3, r2, r3
 800253a:	2b02      	cmp	r3, #2
 800253c:	d908      	bls.n	8002550 <HAL_RCC_OscConfig+0x278>
 800253e:	2303      	movs	r3, #3
 8002540:	e140      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 8002542:	bf00      	nop
 8002544:	40021000 	.word	0x40021000
 8002548:	42420000 	.word	0x42420000
 800254c:	42420480 	.word	0x42420480
 8002550:	4b9e      	ldr	r3, [pc, #632]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 8002552:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002554:	f003 0302 	and.w	r3, r3, #2
 8002558:	2b00      	cmp	r3, #0
 800255a:	d1e9      	bne.n	8002530 <HAL_RCC_OscConfig+0x258>
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	f003 0304 	and.w	r3, r3, #4
 8002564:	2b00      	cmp	r3, #0
 8002566:	f000 80a6 	beq.w	80026b6 <HAL_RCC_OscConfig+0x3de>
 800256a:	2300      	movs	r3, #0
 800256c:	75fb      	strb	r3, [r7, #23]
 800256e:	4b97      	ldr	r3, [pc, #604]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 8002570:	69db      	ldr	r3, [r3, #28]
 8002572:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002576:	2b00      	cmp	r3, #0
 8002578:	d10d      	bne.n	8002596 <HAL_RCC_OscConfig+0x2be>
 800257a:	4b94      	ldr	r3, [pc, #592]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 800257c:	69db      	ldr	r3, [r3, #28]
 800257e:	4a93      	ldr	r2, [pc, #588]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 8002580:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002584:	61d3      	str	r3, [r2, #28]
 8002586:	4b91      	ldr	r3, [pc, #580]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 8002588:	69db      	ldr	r3, [r3, #28]
 800258a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800258e:	60bb      	str	r3, [r7, #8]
 8002590:	68bb      	ldr	r3, [r7, #8]
 8002592:	2301      	movs	r3, #1
 8002594:	75fb      	strb	r3, [r7, #23]
 8002596:	4b8e      	ldr	r3, [pc, #568]	; (80027d0 <HAL_RCC_OscConfig+0x4f8>)
 8002598:	681b      	ldr	r3, [r3, #0]
 800259a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800259e:	2b00      	cmp	r3, #0
 80025a0:	d118      	bne.n	80025d4 <HAL_RCC_OscConfig+0x2fc>
 80025a2:	4b8b      	ldr	r3, [pc, #556]	; (80027d0 <HAL_RCC_OscConfig+0x4f8>)
 80025a4:	681b      	ldr	r3, [r3, #0]
 80025a6:	4a8a      	ldr	r2, [pc, #552]	; (80027d0 <HAL_RCC_OscConfig+0x4f8>)
 80025a8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80025ac:	6013      	str	r3, [r2, #0]
 80025ae:	f7fe ff07 	bl	80013c0 <HAL_GetTick>
 80025b2:	6138      	str	r0, [r7, #16]
 80025b4:	e008      	b.n	80025c8 <HAL_RCC_OscConfig+0x2f0>
 80025b6:	f7fe ff03 	bl	80013c0 <HAL_GetTick>
 80025ba:	4602      	mov	r2, r0
 80025bc:	693b      	ldr	r3, [r7, #16]
 80025be:	1ad3      	subs	r3, r2, r3
 80025c0:	2b64      	cmp	r3, #100	; 0x64
 80025c2:	d901      	bls.n	80025c8 <HAL_RCC_OscConfig+0x2f0>
 80025c4:	2303      	movs	r3, #3
 80025c6:	e0fd      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 80025c8:	4b81      	ldr	r3, [pc, #516]	; (80027d0 <HAL_RCC_OscConfig+0x4f8>)
 80025ca:	681b      	ldr	r3, [r3, #0]
 80025cc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80025d0:	2b00      	cmp	r3, #0
 80025d2:	d0f0      	beq.n	80025b6 <HAL_RCC_OscConfig+0x2de>
 80025d4:	687b      	ldr	r3, [r7, #4]
 80025d6:	68db      	ldr	r3, [r3, #12]
 80025d8:	2b01      	cmp	r3, #1
 80025da:	d106      	bne.n	80025ea <HAL_RCC_OscConfig+0x312>
 80025dc:	4b7b      	ldr	r3, [pc, #492]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 80025de:	6a1b      	ldr	r3, [r3, #32]
 80025e0:	4a7a      	ldr	r2, [pc, #488]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 80025e2:	f043 0301 	orr.w	r3, r3, #1
 80025e6:	6213      	str	r3, [r2, #32]
 80025e8:	e02d      	b.n	8002646 <HAL_RCC_OscConfig+0x36e>
 80025ea:	687b      	ldr	r3, [r7, #4]
 80025ec:	68db      	ldr	r3, [r3, #12]
 80025ee:	2b00      	cmp	r3, #0
 80025f0:	d10c      	bne.n	800260c <HAL_RCC_OscConfig+0x334>
 80025f2:	4b76      	ldr	r3, [pc, #472]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 80025f4:	6a1b      	ldr	r3, [r3, #32]
 80025f6:	4a75      	ldr	r2, [pc, #468]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 80025f8:	f023 0301 	bic.w	r3, r3, #1
 80025fc:	6213      	str	r3, [r2, #32]
 80025fe:	4b73      	ldr	r3, [pc, #460]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 8002600:	6a1b      	ldr	r3, [r3, #32]
 8002602:	4a72      	ldr	r2, [pc, #456]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 8002604:	f023 0304 	bic.w	r3, r3, #4
 8002608:	6213      	str	r3, [r2, #32]
 800260a:	e01c      	b.n	8002646 <HAL_RCC_OscConfig+0x36e>
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	68db      	ldr	r3, [r3, #12]
 8002610:	2b05      	cmp	r3, #5
 8002612:	d10c      	bne.n	800262e <HAL_RCC_OscConfig+0x356>
 8002614:	4b6d      	ldr	r3, [pc, #436]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 8002616:	6a1b      	ldr	r3, [r3, #32]
 8002618:	4a6c      	ldr	r2, [pc, #432]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 800261a:	f043 0304 	orr.w	r3, r3, #4
 800261e:	6213      	str	r3, [r2, #32]
 8002620:	4b6a      	ldr	r3, [pc, #424]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 8002622:	6a1b      	ldr	r3, [r3, #32]
 8002624:	4a69      	ldr	r2, [pc, #420]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 8002626:	f043 0301 	orr.w	r3, r3, #1
 800262a:	6213      	str	r3, [r2, #32]
 800262c:	e00b      	b.n	8002646 <HAL_RCC_OscConfig+0x36e>
 800262e:	4b67      	ldr	r3, [pc, #412]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 8002630:	6a1b      	ldr	r3, [r3, #32]
 8002632:	4a66      	ldr	r2, [pc, #408]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 8002634:	f023 0301 	bic.w	r3, r3, #1
 8002638:	6213      	str	r3, [r2, #32]
 800263a:	4b64      	ldr	r3, [pc, #400]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 800263c:	6a1b      	ldr	r3, [r3, #32]
 800263e:	4a63      	ldr	r2, [pc, #396]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 8002640:	f023 0304 	bic.w	r3, r3, #4
 8002644:	6213      	str	r3, [r2, #32]
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	68db      	ldr	r3, [r3, #12]
 800264a:	2b00      	cmp	r3, #0
 800264c:	d015      	beq.n	800267a <HAL_RCC_OscConfig+0x3a2>
 800264e:	f7fe feb7 	bl	80013c0 <HAL_GetTick>
 8002652:	6138      	str	r0, [r7, #16]
 8002654:	e00a      	b.n	800266c <HAL_RCC_OscConfig+0x394>
 8002656:	f7fe feb3 	bl	80013c0 <HAL_GetTick>
 800265a:	4602      	mov	r2, r0
 800265c:	693b      	ldr	r3, [r7, #16]
 800265e:	1ad3      	subs	r3, r2, r3
 8002660:	f241 3288 	movw	r2, #5000	; 0x1388
 8002664:	4293      	cmp	r3, r2
 8002666:	d901      	bls.n	800266c <HAL_RCC_OscConfig+0x394>
 8002668:	2303      	movs	r3, #3
 800266a:	e0ab      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 800266c:	4b57      	ldr	r3, [pc, #348]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 800266e:	6a1b      	ldr	r3, [r3, #32]
 8002670:	f003 0302 	and.w	r3, r3, #2
 8002674:	2b00      	cmp	r3, #0
 8002676:	d0ee      	beq.n	8002656 <HAL_RCC_OscConfig+0x37e>
 8002678:	e014      	b.n	80026a4 <HAL_RCC_OscConfig+0x3cc>
 800267a:	f7fe fea1 	bl	80013c0 <HAL_GetTick>
 800267e:	6138      	str	r0, [r7, #16]
 8002680:	e00a      	b.n	8002698 <HAL_RCC_OscConfig+0x3c0>
 8002682:	f7fe fe9d 	bl	80013c0 <HAL_GetTick>
 8002686:	4602      	mov	r2, r0
 8002688:	693b      	ldr	r3, [r7, #16]
 800268a:	1ad3      	subs	r3, r2, r3
 800268c:	f241 3288 	movw	r2, #5000	; 0x1388
 8002690:	4293      	cmp	r3, r2
 8002692:	d901      	bls.n	8002698 <HAL_RCC_OscConfig+0x3c0>
 8002694:	2303      	movs	r3, #3
 8002696:	e095      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 8002698:	4b4c      	ldr	r3, [pc, #304]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 800269a:	6a1b      	ldr	r3, [r3, #32]
 800269c:	f003 0302 	and.w	r3, r3, #2
 80026a0:	2b00      	cmp	r3, #0
 80026a2:	d1ee      	bne.n	8002682 <HAL_RCC_OscConfig+0x3aa>
 80026a4:	7dfb      	ldrb	r3, [r7, #23]
 80026a6:	2b01      	cmp	r3, #1
 80026a8:	d105      	bne.n	80026b6 <HAL_RCC_OscConfig+0x3de>
 80026aa:	4b48      	ldr	r3, [pc, #288]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 80026ac:	69db      	ldr	r3, [r3, #28]
 80026ae:	4a47      	ldr	r2, [pc, #284]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 80026b0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80026b4:	61d3      	str	r3, [r2, #28]
 80026b6:	687b      	ldr	r3, [r7, #4]
 80026b8:	69db      	ldr	r3, [r3, #28]
 80026ba:	2b00      	cmp	r3, #0
 80026bc:	f000 8081 	beq.w	80027c2 <HAL_RCC_OscConfig+0x4ea>
 80026c0:	4b42      	ldr	r3, [pc, #264]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 80026c2:	685b      	ldr	r3, [r3, #4]
 80026c4:	f003 030c 	and.w	r3, r3, #12
 80026c8:	2b08      	cmp	r3, #8
 80026ca:	d061      	beq.n	8002790 <HAL_RCC_OscConfig+0x4b8>
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	69db      	ldr	r3, [r3, #28]
 80026d0:	2b02      	cmp	r3, #2
 80026d2:	d146      	bne.n	8002762 <HAL_RCC_OscConfig+0x48a>
 80026d4:	4b3f      	ldr	r3, [pc, #252]	; (80027d4 <HAL_RCC_OscConfig+0x4fc>)
 80026d6:	2200      	movs	r2, #0
 80026d8:	601a      	str	r2, [r3, #0]
 80026da:	f7fe fe71 	bl	80013c0 <HAL_GetTick>
 80026de:	6138      	str	r0, [r7, #16]
 80026e0:	e008      	b.n	80026f4 <HAL_RCC_OscConfig+0x41c>
 80026e2:	f7fe fe6d 	bl	80013c0 <HAL_GetTick>
 80026e6:	4602      	mov	r2, r0
 80026e8:	693b      	ldr	r3, [r7, #16]
 80026ea:	1ad3      	subs	r3, r2, r3
 80026ec:	2b02      	cmp	r3, #2
 80026ee:	d901      	bls.n	80026f4 <HAL_RCC_OscConfig+0x41c>
 80026f0:	2303      	movs	r3, #3
 80026f2:	e067      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 80026f4:	4b35      	ldr	r3, [pc, #212]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 80026f6:	681b      	ldr	r3, [r3, #0]
 80026f8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80026fc:	2b00      	cmp	r3, #0
 80026fe:	d1f0      	bne.n	80026e2 <HAL_RCC_OscConfig+0x40a>
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	6a1b      	ldr	r3, [r3, #32]
 8002704:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002708:	d108      	bne.n	800271c <HAL_RCC_OscConfig+0x444>
 800270a:	4b30      	ldr	r3, [pc, #192]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 800270c:	685b      	ldr	r3, [r3, #4]
 800270e:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8002712:	687b      	ldr	r3, [r7, #4]
 8002714:	689b      	ldr	r3, [r3, #8]
 8002716:	492d      	ldr	r1, [pc, #180]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 8002718:	4313      	orrs	r3, r2
 800271a:	604b      	str	r3, [r1, #4]
 800271c:	4b2b      	ldr	r3, [pc, #172]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 800271e:	685b      	ldr	r3, [r3, #4]
 8002720:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8002724:	687b      	ldr	r3, [r7, #4]
 8002726:	6a19      	ldr	r1, [r3, #32]
 8002728:	687b      	ldr	r3, [r7, #4]
 800272a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800272c:	430b      	orrs	r3, r1
 800272e:	4927      	ldr	r1, [pc, #156]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 8002730:	4313      	orrs	r3, r2
 8002732:	604b      	str	r3, [r1, #4]
 8002734:	4b27      	ldr	r3, [pc, #156]	; (80027d4 <HAL_RCC_OscConfig+0x4fc>)
 8002736:	2201      	movs	r2, #1
 8002738:	601a      	str	r2, [r3, #0]
 800273a:	f7fe fe41 	bl	80013c0 <HAL_GetTick>
 800273e:	6138      	str	r0, [r7, #16]
 8002740:	e008      	b.n	8002754 <HAL_RCC_OscConfig+0x47c>
 8002742:	f7fe fe3d 	bl	80013c0 <HAL_GetTick>
 8002746:	4602      	mov	r2, r0
 8002748:	693b      	ldr	r3, [r7, #16]
 800274a:	1ad3      	subs	r3, r2, r3
 800274c:	2b02      	cmp	r3, #2
 800274e:	d901      	bls.n	8002754 <HAL_RCC_OscConfig+0x47c>
 8002750:	2303      	movs	r3, #3
 8002752:	e037      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 8002754:	4b1d      	ldr	r3, [pc, #116]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 8002756:	681b      	ldr	r3, [r3, #0]
 8002758:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800275c:	2b00      	cmp	r3, #0
 800275e:	d0f0      	beq.n	8002742 <HAL_RCC_OscConfig+0x46a>
 8002760:	e02f      	b.n	80027c2 <HAL_RCC_OscConfig+0x4ea>
 8002762:	4b1c      	ldr	r3, [pc, #112]	; (80027d4 <HAL_RCC_OscConfig+0x4fc>)
 8002764:	2200      	movs	r2, #0
 8002766:	601a      	str	r2, [r3, #0]
 8002768:	f7fe fe2a 	bl	80013c0 <HAL_GetTick>
 800276c:	6138      	str	r0, [r7, #16]
 800276e:	e008      	b.n	8002782 <HAL_RCC_OscConfig+0x4aa>
 8002770:	f7fe fe26 	bl	80013c0 <HAL_GetTick>
 8002774:	4602      	mov	r2, r0
 8002776:	693b      	ldr	r3, [r7, #16]
 8002778:	1ad3      	subs	r3, r2, r3
 800277a:	2b02      	cmp	r3, #2
 800277c:	d901      	bls.n	8002782 <HAL_RCC_OscConfig+0x4aa>
 800277e:	2303      	movs	r3, #3
 8002780:	e020      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 8002782:	4b12      	ldr	r3, [pc, #72]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 8002784:	681b      	ldr	r3, [r3, #0]
 8002786:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800278a:	2b00      	cmp	r3, #0
 800278c:	d1f0      	bne.n	8002770 <HAL_RCC_OscConfig+0x498>
 800278e:	e018      	b.n	80027c2 <HAL_RCC_OscConfig+0x4ea>
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	69db      	ldr	r3, [r3, #28]
 8002794:	2b01      	cmp	r3, #1
 8002796:	d101      	bne.n	800279c <HAL_RCC_OscConfig+0x4c4>
 8002798:	2301      	movs	r3, #1
 800279a:	e013      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 800279c:	4b0b      	ldr	r3, [pc, #44]	; (80027cc <HAL_RCC_OscConfig+0x4f4>)
 800279e:	685b      	ldr	r3, [r3, #4]
 80027a0:	60fb      	str	r3, [r7, #12]
 80027a2:	68fb      	ldr	r3, [r7, #12]
 80027a4:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	6a1b      	ldr	r3, [r3, #32]
 80027ac:	429a      	cmp	r2, r3
 80027ae:	d106      	bne.n	80027be <HAL_RCC_OscConfig+0x4e6>
 80027b0:	68fb      	ldr	r3, [r7, #12]
 80027b2:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027ba:	429a      	cmp	r2, r3
 80027bc:	d001      	beq.n	80027c2 <HAL_RCC_OscConfig+0x4ea>
 80027be:	2301      	movs	r3, #1
 80027c0:	e000      	b.n	80027c4 <HAL_RCC_OscConfig+0x4ec>
 80027c2:	2300      	movs	r3, #0
 80027c4:	4618      	mov	r0, r3
 80027c6:	3718      	adds	r7, #24
 80027c8:	46bd      	mov	sp, r7
 80027ca:	bd80      	pop	{r7, pc}
 80027cc:	40021000 	.word	0x40021000
 80027d0:	40007000 	.word	0x40007000
 80027d4:	42420060 	.word	0x42420060

080027d8 <HAL_RCC_ClockConfig>:
 80027d8:	b580      	push	{r7, lr}
 80027da:	b084      	sub	sp, #16
 80027dc:	af00      	add	r7, sp, #0
 80027de:	6078      	str	r0, [r7, #4]
 80027e0:	6039      	str	r1, [r7, #0]
 80027e2:	687b      	ldr	r3, [r7, #4]
 80027e4:	2b00      	cmp	r3, #0
 80027e6:	d101      	bne.n	80027ec <HAL_RCC_ClockConfig+0x14>
 80027e8:	2301      	movs	r3, #1
 80027ea:	e0d0      	b.n	800298e <HAL_RCC_ClockConfig+0x1b6>
 80027ec:	4b6a      	ldr	r3, [pc, #424]	; (8002998 <HAL_RCC_ClockConfig+0x1c0>)
 80027ee:	681b      	ldr	r3, [r3, #0]
 80027f0:	f003 0307 	and.w	r3, r3, #7
 80027f4:	683a      	ldr	r2, [r7, #0]
 80027f6:	429a      	cmp	r2, r3
 80027f8:	d910      	bls.n	800281c <HAL_RCC_ClockConfig+0x44>
 80027fa:	4b67      	ldr	r3, [pc, #412]	; (8002998 <HAL_RCC_ClockConfig+0x1c0>)
 80027fc:	681b      	ldr	r3, [r3, #0]
 80027fe:	f023 0207 	bic.w	r2, r3, #7
 8002802:	4965      	ldr	r1, [pc, #404]	; (8002998 <HAL_RCC_ClockConfig+0x1c0>)
 8002804:	683b      	ldr	r3, [r7, #0]
 8002806:	4313      	orrs	r3, r2
 8002808:	600b      	str	r3, [r1, #0]
 800280a:	4b63      	ldr	r3, [pc, #396]	; (8002998 <HAL_RCC_ClockConfig+0x1c0>)
 800280c:	681b      	ldr	r3, [r3, #0]
 800280e:	f003 0307 	and.w	r3, r3, #7
 8002812:	683a      	ldr	r2, [r7, #0]
 8002814:	429a      	cmp	r2, r3
 8002816:	d001      	beq.n	800281c <HAL_RCC_ClockConfig+0x44>
 8002818:	2301      	movs	r3, #1
 800281a:	e0b8      	b.n	800298e <HAL_RCC_ClockConfig+0x1b6>
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	681b      	ldr	r3, [r3, #0]
 8002820:	f003 0302 	and.w	r3, r3, #2
 8002824:	2b00      	cmp	r3, #0
 8002826:	d020      	beq.n	800286a <HAL_RCC_ClockConfig+0x92>
 8002828:	687b      	ldr	r3, [r7, #4]
 800282a:	681b      	ldr	r3, [r3, #0]
 800282c:	f003 0304 	and.w	r3, r3, #4
 8002830:	2b00      	cmp	r3, #0
 8002832:	d005      	beq.n	8002840 <HAL_RCC_ClockConfig+0x68>
 8002834:	4b59      	ldr	r3, [pc, #356]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 8002836:	685b      	ldr	r3, [r3, #4]
 8002838:	4a58      	ldr	r2, [pc, #352]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 800283a:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 800283e:	6053      	str	r3, [r2, #4]
 8002840:	687b      	ldr	r3, [r7, #4]
 8002842:	681b      	ldr	r3, [r3, #0]
 8002844:	f003 0308 	and.w	r3, r3, #8
 8002848:	2b00      	cmp	r3, #0
 800284a:	d005      	beq.n	8002858 <HAL_RCC_ClockConfig+0x80>
 800284c:	4b53      	ldr	r3, [pc, #332]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 800284e:	685b      	ldr	r3, [r3, #4]
 8002850:	4a52      	ldr	r2, [pc, #328]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 8002852:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8002856:	6053      	str	r3, [r2, #4]
 8002858:	4b50      	ldr	r3, [pc, #320]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 800285a:	685b      	ldr	r3, [r3, #4]
 800285c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002860:	687b      	ldr	r3, [r7, #4]
 8002862:	689b      	ldr	r3, [r3, #8]
 8002864:	494d      	ldr	r1, [pc, #308]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 8002866:	4313      	orrs	r3, r2
 8002868:	604b      	str	r3, [r1, #4]
 800286a:	687b      	ldr	r3, [r7, #4]
 800286c:	681b      	ldr	r3, [r3, #0]
 800286e:	f003 0301 	and.w	r3, r3, #1
 8002872:	2b00      	cmp	r3, #0
 8002874:	d040      	beq.n	80028f8 <HAL_RCC_ClockConfig+0x120>
 8002876:	687b      	ldr	r3, [r7, #4]
 8002878:	685b      	ldr	r3, [r3, #4]
 800287a:	2b01      	cmp	r3, #1
 800287c:	d107      	bne.n	800288e <HAL_RCC_ClockConfig+0xb6>
 800287e:	4b47      	ldr	r3, [pc, #284]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 8002880:	681b      	ldr	r3, [r3, #0]
 8002882:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002886:	2b00      	cmp	r3, #0
 8002888:	d115      	bne.n	80028b6 <HAL_RCC_ClockConfig+0xde>
 800288a:	2301      	movs	r3, #1
 800288c:	e07f      	b.n	800298e <HAL_RCC_ClockConfig+0x1b6>
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	685b      	ldr	r3, [r3, #4]
 8002892:	2b02      	cmp	r3, #2
 8002894:	d107      	bne.n	80028a6 <HAL_RCC_ClockConfig+0xce>
 8002896:	4b41      	ldr	r3, [pc, #260]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 8002898:	681b      	ldr	r3, [r3, #0]
 800289a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800289e:	2b00      	cmp	r3, #0
 80028a0:	d109      	bne.n	80028b6 <HAL_RCC_ClockConfig+0xde>
 80028a2:	2301      	movs	r3, #1
 80028a4:	e073      	b.n	800298e <HAL_RCC_ClockConfig+0x1b6>
 80028a6:	4b3d      	ldr	r3, [pc, #244]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 80028a8:	681b      	ldr	r3, [r3, #0]
 80028aa:	f003 0302 	and.w	r3, r3, #2
 80028ae:	2b00      	cmp	r3, #0
 80028b0:	d101      	bne.n	80028b6 <HAL_RCC_ClockConfig+0xde>
 80028b2:	2301      	movs	r3, #1
 80028b4:	e06b      	b.n	800298e <HAL_RCC_ClockConfig+0x1b6>
 80028b6:	4b39      	ldr	r3, [pc, #228]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 80028b8:	685b      	ldr	r3, [r3, #4]
 80028ba:	f023 0203 	bic.w	r2, r3, #3
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	685b      	ldr	r3, [r3, #4]
 80028c2:	4936      	ldr	r1, [pc, #216]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 80028c4:	4313      	orrs	r3, r2
 80028c6:	604b      	str	r3, [r1, #4]
 80028c8:	f7fe fd7a 	bl	80013c0 <HAL_GetTick>
 80028cc:	60f8      	str	r0, [r7, #12]
 80028ce:	e00a      	b.n	80028e6 <HAL_RCC_ClockConfig+0x10e>
 80028d0:	f7fe fd76 	bl	80013c0 <HAL_GetTick>
 80028d4:	4602      	mov	r2, r0
 80028d6:	68fb      	ldr	r3, [r7, #12]
 80028d8:	1ad3      	subs	r3, r2, r3
 80028da:	f241 3288 	movw	r2, #5000	; 0x1388
 80028de:	4293      	cmp	r3, r2
 80028e0:	d901      	bls.n	80028e6 <HAL_RCC_ClockConfig+0x10e>
 80028e2:	2303      	movs	r3, #3
 80028e4:	e053      	b.n	800298e <HAL_RCC_ClockConfig+0x1b6>
 80028e6:	4b2d      	ldr	r3, [pc, #180]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 80028e8:	685b      	ldr	r3, [r3, #4]
 80028ea:	f003 020c 	and.w	r2, r3, #12
 80028ee:	687b      	ldr	r3, [r7, #4]
 80028f0:	685b      	ldr	r3, [r3, #4]
 80028f2:	009b      	lsls	r3, r3, #2
 80028f4:	429a      	cmp	r2, r3
 80028f6:	d1eb      	bne.n	80028d0 <HAL_RCC_ClockConfig+0xf8>
 80028f8:	4b27      	ldr	r3, [pc, #156]	; (8002998 <HAL_RCC_ClockConfig+0x1c0>)
 80028fa:	681b      	ldr	r3, [r3, #0]
 80028fc:	f003 0307 	and.w	r3, r3, #7
 8002900:	683a      	ldr	r2, [r7, #0]
 8002902:	429a      	cmp	r2, r3
 8002904:	d210      	bcs.n	8002928 <HAL_RCC_ClockConfig+0x150>
 8002906:	4b24      	ldr	r3, [pc, #144]	; (8002998 <HAL_RCC_ClockConfig+0x1c0>)
 8002908:	681b      	ldr	r3, [r3, #0]
 800290a:	f023 0207 	bic.w	r2, r3, #7
 800290e:	4922      	ldr	r1, [pc, #136]	; (8002998 <HAL_RCC_ClockConfig+0x1c0>)
 8002910:	683b      	ldr	r3, [r7, #0]
 8002912:	4313      	orrs	r3, r2
 8002914:	600b      	str	r3, [r1, #0]
 8002916:	4b20      	ldr	r3, [pc, #128]	; (8002998 <HAL_RCC_ClockConfig+0x1c0>)
 8002918:	681b      	ldr	r3, [r3, #0]
 800291a:	f003 0307 	and.w	r3, r3, #7
 800291e:	683a      	ldr	r2, [r7, #0]
 8002920:	429a      	cmp	r2, r3
 8002922:	d001      	beq.n	8002928 <HAL_RCC_ClockConfig+0x150>
 8002924:	2301      	movs	r3, #1
 8002926:	e032      	b.n	800298e <HAL_RCC_ClockConfig+0x1b6>
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	681b      	ldr	r3, [r3, #0]
 800292c:	f003 0304 	and.w	r3, r3, #4
 8002930:	2b00      	cmp	r3, #0
 8002932:	d008      	beq.n	8002946 <HAL_RCC_ClockConfig+0x16e>
 8002934:	4b19      	ldr	r3, [pc, #100]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 8002936:	685b      	ldr	r3, [r3, #4]
 8002938:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	68db      	ldr	r3, [r3, #12]
 8002940:	4916      	ldr	r1, [pc, #88]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 8002942:	4313      	orrs	r3, r2
 8002944:	604b      	str	r3, [r1, #4]
 8002946:	687b      	ldr	r3, [r7, #4]
 8002948:	681b      	ldr	r3, [r3, #0]
 800294a:	f003 0308 	and.w	r3, r3, #8
 800294e:	2b00      	cmp	r3, #0
 8002950:	d009      	beq.n	8002966 <HAL_RCC_ClockConfig+0x18e>
 8002952:	4b12      	ldr	r3, [pc, #72]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 8002954:	685b      	ldr	r3, [r3, #4]
 8002956:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 800295a:	687b      	ldr	r3, [r7, #4]
 800295c:	691b      	ldr	r3, [r3, #16]
 800295e:	00db      	lsls	r3, r3, #3
 8002960:	490e      	ldr	r1, [pc, #56]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 8002962:	4313      	orrs	r3, r2
 8002964:	604b      	str	r3, [r1, #4]
 8002966:	f000 f821 	bl	80029ac <HAL_RCC_GetSysClockFreq>
 800296a:	4602      	mov	r2, r0
 800296c:	4b0b      	ldr	r3, [pc, #44]	; (800299c <HAL_RCC_ClockConfig+0x1c4>)
 800296e:	685b      	ldr	r3, [r3, #4]
 8002970:	091b      	lsrs	r3, r3, #4
 8002972:	f003 030f 	and.w	r3, r3, #15
 8002976:	490a      	ldr	r1, [pc, #40]	; (80029a0 <HAL_RCC_ClockConfig+0x1c8>)
 8002978:	5ccb      	ldrb	r3, [r1, r3]
 800297a:	fa22 f303 	lsr.w	r3, r2, r3
 800297e:	4a09      	ldr	r2, [pc, #36]	; (80029a4 <HAL_RCC_ClockConfig+0x1cc>)
 8002980:	6013      	str	r3, [r2, #0]
 8002982:	4b09      	ldr	r3, [pc, #36]	; (80029a8 <HAL_RCC_ClockConfig+0x1d0>)
 8002984:	681b      	ldr	r3, [r3, #0]
 8002986:	4618      	mov	r0, r3
 8002988:	f7fe fcd8 	bl	800133c <HAL_InitTick>
 800298c:	2300      	movs	r3, #0
 800298e:	4618      	mov	r0, r3
 8002990:	3710      	adds	r7, #16
 8002992:	46bd      	mov	sp, r7
 8002994:	bd80      	pop	{r7, pc}
 8002996:	bf00      	nop
 8002998:	40022000 	.word	0x40022000
 800299c:	40021000 	.word	0x40021000
 80029a0:	08003bb0 	.word	0x08003bb0
 80029a4:	20000058 	.word	0x20000058
 80029a8:	2000005c 	.word	0x2000005c

080029ac <HAL_RCC_GetSysClockFreq>:
 80029ac:	b480      	push	{r7}
 80029ae:	b087      	sub	sp, #28
 80029b0:	af00      	add	r7, sp, #0
 80029b2:	2300      	movs	r3, #0
 80029b4:	60fb      	str	r3, [r7, #12]
 80029b6:	2300      	movs	r3, #0
 80029b8:	60bb      	str	r3, [r7, #8]
 80029ba:	2300      	movs	r3, #0
 80029bc:	617b      	str	r3, [r7, #20]
 80029be:	2300      	movs	r3, #0
 80029c0:	607b      	str	r3, [r7, #4]
 80029c2:	2300      	movs	r3, #0
 80029c4:	613b      	str	r3, [r7, #16]
 80029c6:	4b1e      	ldr	r3, [pc, #120]	; (8002a40 <HAL_RCC_GetSysClockFreq+0x94>)
 80029c8:	685b      	ldr	r3, [r3, #4]
 80029ca:	60fb      	str	r3, [r7, #12]
 80029cc:	68fb      	ldr	r3, [r7, #12]
 80029ce:	f003 030c 	and.w	r3, r3, #12
 80029d2:	2b04      	cmp	r3, #4
 80029d4:	d002      	beq.n	80029dc <HAL_RCC_GetSysClockFreq+0x30>
 80029d6:	2b08      	cmp	r3, #8
 80029d8:	d003      	beq.n	80029e2 <HAL_RCC_GetSysClockFreq+0x36>
 80029da:	e027      	b.n	8002a2c <HAL_RCC_GetSysClockFreq+0x80>
 80029dc:	4b19      	ldr	r3, [pc, #100]	; (8002a44 <HAL_RCC_GetSysClockFreq+0x98>)
 80029de:	613b      	str	r3, [r7, #16]
 80029e0:	e027      	b.n	8002a32 <HAL_RCC_GetSysClockFreq+0x86>
 80029e2:	68fb      	ldr	r3, [r7, #12]
 80029e4:	0c9b      	lsrs	r3, r3, #18
 80029e6:	f003 030f 	and.w	r3, r3, #15
 80029ea:	4a17      	ldr	r2, [pc, #92]	; (8002a48 <HAL_RCC_GetSysClockFreq+0x9c>)
 80029ec:	5cd3      	ldrb	r3, [r2, r3]
 80029ee:	607b      	str	r3, [r7, #4]
 80029f0:	68fb      	ldr	r3, [r7, #12]
 80029f2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80029f6:	2b00      	cmp	r3, #0
 80029f8:	d010      	beq.n	8002a1c <HAL_RCC_GetSysClockFreq+0x70>
 80029fa:	4b11      	ldr	r3, [pc, #68]	; (8002a40 <HAL_RCC_GetSysClockFreq+0x94>)
 80029fc:	685b      	ldr	r3, [r3, #4]
 80029fe:	0c5b      	lsrs	r3, r3, #17
 8002a00:	f003 0301 	and.w	r3, r3, #1
 8002a04:	4a11      	ldr	r2, [pc, #68]	; (8002a4c <HAL_RCC_GetSysClockFreq+0xa0>)
 8002a06:	5cd3      	ldrb	r3, [r2, r3]
 8002a08:	60bb      	str	r3, [r7, #8]
 8002a0a:	687b      	ldr	r3, [r7, #4]
 8002a0c:	4a0d      	ldr	r2, [pc, #52]	; (8002a44 <HAL_RCC_GetSysClockFreq+0x98>)
 8002a0e:	fb02 f203 	mul.w	r2, r2, r3
 8002a12:	68bb      	ldr	r3, [r7, #8]
 8002a14:	fbb2 f3f3 	udiv	r3, r2, r3
 8002a18:	617b      	str	r3, [r7, #20]
 8002a1a:	e004      	b.n	8002a26 <HAL_RCC_GetSysClockFreq+0x7a>
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	4a0c      	ldr	r2, [pc, #48]	; (8002a50 <HAL_RCC_GetSysClockFreq+0xa4>)
 8002a20:	fb02 f303 	mul.w	r3, r2, r3
 8002a24:	617b      	str	r3, [r7, #20]
 8002a26:	697b      	ldr	r3, [r7, #20]
 8002a28:	613b      	str	r3, [r7, #16]
 8002a2a:	e002      	b.n	8002a32 <HAL_RCC_GetSysClockFreq+0x86>
 8002a2c:	4b05      	ldr	r3, [pc, #20]	; (8002a44 <HAL_RCC_GetSysClockFreq+0x98>)
 8002a2e:	613b      	str	r3, [r7, #16]
 8002a30:	bf00      	nop
 8002a32:	693b      	ldr	r3, [r7, #16]
 8002a34:	4618      	mov	r0, r3
 8002a36:	371c      	adds	r7, #28
 8002a38:	46bd      	mov	sp, r7
 8002a3a:	bc80      	pop	{r7}
 8002a3c:	4770      	bx	lr
 8002a3e:	bf00      	nop
 8002a40:	40021000 	.word	0x40021000
 8002a44:	007a1200 	.word	0x007a1200
 8002a48:	08003bc8 	.word	0x08003bc8
 8002a4c:	08003bd8 	.word	0x08003bd8
 8002a50:	003d0900 	.word	0x003d0900

08002a54 <HAL_RCC_GetHCLKFreq>:
 8002a54:	b480      	push	{r7}
 8002a56:	af00      	add	r7, sp, #0
 8002a58:	4b02      	ldr	r3, [pc, #8]	; (8002a64 <HAL_RCC_GetHCLKFreq+0x10>)
 8002a5a:	681b      	ldr	r3, [r3, #0]
 8002a5c:	4618      	mov	r0, r3
 8002a5e:	46bd      	mov	sp, r7
 8002a60:	bc80      	pop	{r7}
 8002a62:	4770      	bx	lr
 8002a64:	20000058 	.word	0x20000058

08002a68 <HAL_RCC_GetPCLK1Freq>:
 8002a68:	b580      	push	{r7, lr}
 8002a6a:	af00      	add	r7, sp, #0
 8002a6c:	f7ff fff2 	bl	8002a54 <HAL_RCC_GetHCLKFreq>
 8002a70:	4602      	mov	r2, r0
 8002a72:	4b05      	ldr	r3, [pc, #20]	; (8002a88 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002a74:	685b      	ldr	r3, [r3, #4]
 8002a76:	0a1b      	lsrs	r3, r3, #8
 8002a78:	f003 0307 	and.w	r3, r3, #7
 8002a7c:	4903      	ldr	r1, [pc, #12]	; (8002a8c <HAL_RCC_GetPCLK1Freq+0x24>)
 8002a7e:	5ccb      	ldrb	r3, [r1, r3]
 8002a80:	fa22 f303 	lsr.w	r3, r2, r3
 8002a84:	4618      	mov	r0, r3
 8002a86:	bd80      	pop	{r7, pc}
 8002a88:	40021000 	.word	0x40021000
 8002a8c:	08003bc0 	.word	0x08003bc0

08002a90 <RCC_Delay>:
 8002a90:	b480      	push	{r7}
 8002a92:	b085      	sub	sp, #20
 8002a94:	af00      	add	r7, sp, #0
 8002a96:	6078      	str	r0, [r7, #4]
 8002a98:	4b0a      	ldr	r3, [pc, #40]	; (8002ac4 <RCC_Delay+0x34>)
 8002a9a:	681b      	ldr	r3, [r3, #0]
 8002a9c:	4a0a      	ldr	r2, [pc, #40]	; (8002ac8 <RCC_Delay+0x38>)
 8002a9e:	fba2 2303 	umull	r2, r3, r2, r3
 8002aa2:	0a5b      	lsrs	r3, r3, #9
 8002aa4:	687a      	ldr	r2, [r7, #4]
 8002aa6:	fb02 f303 	mul.w	r3, r2, r3
 8002aaa:	60fb      	str	r3, [r7, #12]
 8002aac:	bf00      	nop
 8002aae:	68fb      	ldr	r3, [r7, #12]
 8002ab0:	1e5a      	subs	r2, r3, #1
 8002ab2:	60fa      	str	r2, [r7, #12]
 8002ab4:	2b00      	cmp	r3, #0
 8002ab6:	d1f9      	bne.n	8002aac <RCC_Delay+0x1c>
 8002ab8:	bf00      	nop
 8002aba:	bf00      	nop
 8002abc:	3714      	adds	r7, #20
 8002abe:	46bd      	mov	sp, r7
 8002ac0:	bc80      	pop	{r7}
 8002ac2:	4770      	bx	lr
 8002ac4:	20000058 	.word	0x20000058
 8002ac8:	10624dd3 	.word	0x10624dd3

08002acc <HAL_TIM_Base_Init>:
 8002acc:	b580      	push	{r7, lr}
 8002ace:	b082      	sub	sp, #8
 8002ad0:	af00      	add	r7, sp, #0
 8002ad2:	6078      	str	r0, [r7, #4]
 8002ad4:	687b      	ldr	r3, [r7, #4]
 8002ad6:	2b00      	cmp	r3, #0
 8002ad8:	d101      	bne.n	8002ade <HAL_TIM_Base_Init+0x12>
 8002ada:	2301      	movs	r3, #1
 8002adc:	e041      	b.n	8002b62 <HAL_TIM_Base_Init+0x96>
 8002ade:	687b      	ldr	r3, [r7, #4]
 8002ae0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002ae4:	b2db      	uxtb	r3, r3
 8002ae6:	2b00      	cmp	r3, #0
 8002ae8:	d106      	bne.n	8002af8 <HAL_TIM_Base_Init+0x2c>
 8002aea:	687b      	ldr	r3, [r7, #4]
 8002aec:	2200      	movs	r2, #0
 8002aee:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002af2:	6878      	ldr	r0, [r7, #4]
 8002af4:	f7fe f9d8 	bl	8000ea8 <HAL_TIM_Base_MspInit>
 8002af8:	687b      	ldr	r3, [r7, #4]
 8002afa:	2202      	movs	r2, #2
 8002afc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	681a      	ldr	r2, [r3, #0]
 8002b04:	687b      	ldr	r3, [r7, #4]
 8002b06:	3304      	adds	r3, #4
 8002b08:	4619      	mov	r1, r3
 8002b0a:	4610      	mov	r0, r2
 8002b0c:	f000 fa5c 	bl	8002fc8 <TIM_Base_SetConfig>
 8002b10:	687b      	ldr	r3, [r7, #4]
 8002b12:	2201      	movs	r2, #1
 8002b14:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002b18:	687b      	ldr	r3, [r7, #4]
 8002b1a:	2201      	movs	r2, #1
 8002b1c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002b20:	687b      	ldr	r3, [r7, #4]
 8002b22:	2201      	movs	r2, #1
 8002b24:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002b28:	687b      	ldr	r3, [r7, #4]
 8002b2a:	2201      	movs	r2, #1
 8002b2c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002b30:	687b      	ldr	r3, [r7, #4]
 8002b32:	2201      	movs	r2, #1
 8002b34:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002b38:	687b      	ldr	r3, [r7, #4]
 8002b3a:	2201      	movs	r2, #1
 8002b3c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002b40:	687b      	ldr	r3, [r7, #4]
 8002b42:	2201      	movs	r2, #1
 8002b44:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002b48:	687b      	ldr	r3, [r7, #4]
 8002b4a:	2201      	movs	r2, #1
 8002b4c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002b50:	687b      	ldr	r3, [r7, #4]
 8002b52:	2201      	movs	r2, #1
 8002b54:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	2201      	movs	r2, #1
 8002b5c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b60:	2300      	movs	r3, #0
 8002b62:	4618      	mov	r0, r3
 8002b64:	3708      	adds	r7, #8
 8002b66:	46bd      	mov	sp, r7
 8002b68:	bd80      	pop	{r7, pc}
	...

08002b6c <HAL_TIM_Base_Start_IT>:
 8002b6c:	b480      	push	{r7}
 8002b6e:	b085      	sub	sp, #20
 8002b70:	af00      	add	r7, sp, #0
 8002b72:	6078      	str	r0, [r7, #4]
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002b7a:	b2db      	uxtb	r3, r3
 8002b7c:	2b01      	cmp	r3, #1
 8002b7e:	d001      	beq.n	8002b84 <HAL_TIM_Base_Start_IT+0x18>
 8002b80:	2301      	movs	r3, #1
 8002b82:	e03a      	b.n	8002bfa <HAL_TIM_Base_Start_IT+0x8e>
 8002b84:	687b      	ldr	r3, [r7, #4]
 8002b86:	2202      	movs	r2, #2
 8002b88:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	681b      	ldr	r3, [r3, #0]
 8002b90:	68da      	ldr	r2, [r3, #12]
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	681b      	ldr	r3, [r3, #0]
 8002b96:	f042 0201 	orr.w	r2, r2, #1
 8002b9a:	60da      	str	r2, [r3, #12]
 8002b9c:	687b      	ldr	r3, [r7, #4]
 8002b9e:	681b      	ldr	r3, [r3, #0]
 8002ba0:	4a18      	ldr	r2, [pc, #96]	; (8002c04 <HAL_TIM_Base_Start_IT+0x98>)
 8002ba2:	4293      	cmp	r3, r2
 8002ba4:	d00e      	beq.n	8002bc4 <HAL_TIM_Base_Start_IT+0x58>
 8002ba6:	687b      	ldr	r3, [r7, #4]
 8002ba8:	681b      	ldr	r3, [r3, #0]
 8002baa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002bae:	d009      	beq.n	8002bc4 <HAL_TIM_Base_Start_IT+0x58>
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	681b      	ldr	r3, [r3, #0]
 8002bb4:	4a14      	ldr	r2, [pc, #80]	; (8002c08 <HAL_TIM_Base_Start_IT+0x9c>)
 8002bb6:	4293      	cmp	r3, r2
 8002bb8:	d004      	beq.n	8002bc4 <HAL_TIM_Base_Start_IT+0x58>
 8002bba:	687b      	ldr	r3, [r7, #4]
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	4a13      	ldr	r2, [pc, #76]	; (8002c0c <HAL_TIM_Base_Start_IT+0xa0>)
 8002bc0:	4293      	cmp	r3, r2
 8002bc2:	d111      	bne.n	8002be8 <HAL_TIM_Base_Start_IT+0x7c>
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	681b      	ldr	r3, [r3, #0]
 8002bc8:	689b      	ldr	r3, [r3, #8]
 8002bca:	f003 0307 	and.w	r3, r3, #7
 8002bce:	60fb      	str	r3, [r7, #12]
 8002bd0:	68fb      	ldr	r3, [r7, #12]
 8002bd2:	2b06      	cmp	r3, #6
 8002bd4:	d010      	beq.n	8002bf8 <HAL_TIM_Base_Start_IT+0x8c>
 8002bd6:	687b      	ldr	r3, [r7, #4]
 8002bd8:	681b      	ldr	r3, [r3, #0]
 8002bda:	681a      	ldr	r2, [r3, #0]
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	681b      	ldr	r3, [r3, #0]
 8002be0:	f042 0201 	orr.w	r2, r2, #1
 8002be4:	601a      	str	r2, [r3, #0]
 8002be6:	e007      	b.n	8002bf8 <HAL_TIM_Base_Start_IT+0x8c>
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	681b      	ldr	r3, [r3, #0]
 8002bec:	681a      	ldr	r2, [r3, #0]
 8002bee:	687b      	ldr	r3, [r7, #4]
 8002bf0:	681b      	ldr	r3, [r3, #0]
 8002bf2:	f042 0201 	orr.w	r2, r2, #1
 8002bf6:	601a      	str	r2, [r3, #0]
 8002bf8:	2300      	movs	r3, #0
 8002bfa:	4618      	mov	r0, r3
 8002bfc:	3714      	adds	r7, #20
 8002bfe:	46bd      	mov	sp, r7
 8002c00:	bc80      	pop	{r7}
 8002c02:	4770      	bx	lr
 8002c04:	40012c00 	.word	0x40012c00
 8002c08:	40000400 	.word	0x40000400
 8002c0c:	40000800 	.word	0x40000800

08002c10 <HAL_TIM_IRQHandler>:
 8002c10:	b580      	push	{r7, lr}
 8002c12:	b084      	sub	sp, #16
 8002c14:	af00      	add	r7, sp, #0
 8002c16:	6078      	str	r0, [r7, #4]
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	68db      	ldr	r3, [r3, #12]
 8002c1e:	60fb      	str	r3, [r7, #12]
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	681b      	ldr	r3, [r3, #0]
 8002c24:	691b      	ldr	r3, [r3, #16]
 8002c26:	60bb      	str	r3, [r7, #8]
 8002c28:	68bb      	ldr	r3, [r7, #8]
 8002c2a:	f003 0302 	and.w	r3, r3, #2
 8002c2e:	2b00      	cmp	r3, #0
 8002c30:	d020      	beq.n	8002c74 <HAL_TIM_IRQHandler+0x64>
 8002c32:	68fb      	ldr	r3, [r7, #12]
 8002c34:	f003 0302 	and.w	r3, r3, #2
 8002c38:	2b00      	cmp	r3, #0
 8002c3a:	d01b      	beq.n	8002c74 <HAL_TIM_IRQHandler+0x64>
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	681b      	ldr	r3, [r3, #0]
 8002c40:	f06f 0202 	mvn.w	r2, #2
 8002c44:	611a      	str	r2, [r3, #16]
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	2201      	movs	r2, #1
 8002c4a:	771a      	strb	r2, [r3, #28]
 8002c4c:	687b      	ldr	r3, [r7, #4]
 8002c4e:	681b      	ldr	r3, [r3, #0]
 8002c50:	699b      	ldr	r3, [r3, #24]
 8002c52:	f003 0303 	and.w	r3, r3, #3
 8002c56:	2b00      	cmp	r3, #0
 8002c58:	d003      	beq.n	8002c62 <HAL_TIM_IRQHandler+0x52>
 8002c5a:	6878      	ldr	r0, [r7, #4]
 8002c5c:	f000 f998 	bl	8002f90 <HAL_TIM_IC_CaptureCallback>
 8002c60:	e005      	b.n	8002c6e <HAL_TIM_IRQHandler+0x5e>
 8002c62:	6878      	ldr	r0, [r7, #4]
 8002c64:	f000 f98b 	bl	8002f7e <HAL_TIM_OC_DelayElapsedCallback>
 8002c68:	6878      	ldr	r0, [r7, #4]
 8002c6a:	f000 f99a 	bl	8002fa2 <HAL_TIM_PWM_PulseFinishedCallback>
 8002c6e:	687b      	ldr	r3, [r7, #4]
 8002c70:	2200      	movs	r2, #0
 8002c72:	771a      	strb	r2, [r3, #28]
 8002c74:	68bb      	ldr	r3, [r7, #8]
 8002c76:	f003 0304 	and.w	r3, r3, #4
 8002c7a:	2b00      	cmp	r3, #0
 8002c7c:	d020      	beq.n	8002cc0 <HAL_TIM_IRQHandler+0xb0>
 8002c7e:	68fb      	ldr	r3, [r7, #12]
 8002c80:	f003 0304 	and.w	r3, r3, #4
 8002c84:	2b00      	cmp	r3, #0
 8002c86:	d01b      	beq.n	8002cc0 <HAL_TIM_IRQHandler+0xb0>
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	681b      	ldr	r3, [r3, #0]
 8002c8c:	f06f 0204 	mvn.w	r2, #4
 8002c90:	611a      	str	r2, [r3, #16]
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	2202      	movs	r2, #2
 8002c96:	771a      	strb	r2, [r3, #28]
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	699b      	ldr	r3, [r3, #24]
 8002c9e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002ca2:	2b00      	cmp	r3, #0
 8002ca4:	d003      	beq.n	8002cae <HAL_TIM_IRQHandler+0x9e>
 8002ca6:	6878      	ldr	r0, [r7, #4]
 8002ca8:	f000 f972 	bl	8002f90 <HAL_TIM_IC_CaptureCallback>
 8002cac:	e005      	b.n	8002cba <HAL_TIM_IRQHandler+0xaa>
 8002cae:	6878      	ldr	r0, [r7, #4]
 8002cb0:	f000 f965 	bl	8002f7e <HAL_TIM_OC_DelayElapsedCallback>
 8002cb4:	6878      	ldr	r0, [r7, #4]
 8002cb6:	f000 f974 	bl	8002fa2 <HAL_TIM_PWM_PulseFinishedCallback>
 8002cba:	687b      	ldr	r3, [r7, #4]
 8002cbc:	2200      	movs	r2, #0
 8002cbe:	771a      	strb	r2, [r3, #28]
 8002cc0:	68bb      	ldr	r3, [r7, #8]
 8002cc2:	f003 0308 	and.w	r3, r3, #8
 8002cc6:	2b00      	cmp	r3, #0
 8002cc8:	d020      	beq.n	8002d0c <HAL_TIM_IRQHandler+0xfc>
 8002cca:	68fb      	ldr	r3, [r7, #12]
 8002ccc:	f003 0308 	and.w	r3, r3, #8
 8002cd0:	2b00      	cmp	r3, #0
 8002cd2:	d01b      	beq.n	8002d0c <HAL_TIM_IRQHandler+0xfc>
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	681b      	ldr	r3, [r3, #0]
 8002cd8:	f06f 0208 	mvn.w	r2, #8
 8002cdc:	611a      	str	r2, [r3, #16]
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	2204      	movs	r2, #4
 8002ce2:	771a      	strb	r2, [r3, #28]
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	681b      	ldr	r3, [r3, #0]
 8002ce8:	69db      	ldr	r3, [r3, #28]
 8002cea:	f003 0303 	and.w	r3, r3, #3
 8002cee:	2b00      	cmp	r3, #0
 8002cf0:	d003      	beq.n	8002cfa <HAL_TIM_IRQHandler+0xea>
 8002cf2:	6878      	ldr	r0, [r7, #4]
 8002cf4:	f000 f94c 	bl	8002f90 <HAL_TIM_IC_CaptureCallback>
 8002cf8:	e005      	b.n	8002d06 <HAL_TIM_IRQHandler+0xf6>
 8002cfa:	6878      	ldr	r0, [r7, #4]
 8002cfc:	f000 f93f 	bl	8002f7e <HAL_TIM_OC_DelayElapsedCallback>
 8002d00:	6878      	ldr	r0, [r7, #4]
 8002d02:	f000 f94e 	bl	8002fa2 <HAL_TIM_PWM_PulseFinishedCallback>
 8002d06:	687b      	ldr	r3, [r7, #4]
 8002d08:	2200      	movs	r2, #0
 8002d0a:	771a      	strb	r2, [r3, #28]
 8002d0c:	68bb      	ldr	r3, [r7, #8]
 8002d0e:	f003 0310 	and.w	r3, r3, #16
 8002d12:	2b00      	cmp	r3, #0
 8002d14:	d020      	beq.n	8002d58 <HAL_TIM_IRQHandler+0x148>
 8002d16:	68fb      	ldr	r3, [r7, #12]
 8002d18:	f003 0310 	and.w	r3, r3, #16
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	d01b      	beq.n	8002d58 <HAL_TIM_IRQHandler+0x148>
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	f06f 0210 	mvn.w	r2, #16
 8002d28:	611a      	str	r2, [r3, #16]
 8002d2a:	687b      	ldr	r3, [r7, #4]
 8002d2c:	2208      	movs	r2, #8
 8002d2e:	771a      	strb	r2, [r3, #28]
 8002d30:	687b      	ldr	r3, [r7, #4]
 8002d32:	681b      	ldr	r3, [r3, #0]
 8002d34:	69db      	ldr	r3, [r3, #28]
 8002d36:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002d3a:	2b00      	cmp	r3, #0
 8002d3c:	d003      	beq.n	8002d46 <HAL_TIM_IRQHandler+0x136>
 8002d3e:	6878      	ldr	r0, [r7, #4]
 8002d40:	f000 f926 	bl	8002f90 <HAL_TIM_IC_CaptureCallback>
 8002d44:	e005      	b.n	8002d52 <HAL_TIM_IRQHandler+0x142>
 8002d46:	6878      	ldr	r0, [r7, #4]
 8002d48:	f000 f919 	bl	8002f7e <HAL_TIM_OC_DelayElapsedCallback>
 8002d4c:	6878      	ldr	r0, [r7, #4]
 8002d4e:	f000 f928 	bl	8002fa2 <HAL_TIM_PWM_PulseFinishedCallback>
 8002d52:	687b      	ldr	r3, [r7, #4]
 8002d54:	2200      	movs	r2, #0
 8002d56:	771a      	strb	r2, [r3, #28]
 8002d58:	68bb      	ldr	r3, [r7, #8]
 8002d5a:	f003 0301 	and.w	r3, r3, #1
 8002d5e:	2b00      	cmp	r3, #0
 8002d60:	d00c      	beq.n	8002d7c <HAL_TIM_IRQHandler+0x16c>
 8002d62:	68fb      	ldr	r3, [r7, #12]
 8002d64:	f003 0301 	and.w	r3, r3, #1
 8002d68:	2b00      	cmp	r3, #0
 8002d6a:	d007      	beq.n	8002d7c <HAL_TIM_IRQHandler+0x16c>
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	f06f 0201 	mvn.w	r2, #1
 8002d74:	611a      	str	r2, [r3, #16]
 8002d76:	6878      	ldr	r0, [r7, #4]
 8002d78:	f7fd ff9a 	bl	8000cb0 <HAL_TIM_PeriodElapsedCallback>
 8002d7c:	68bb      	ldr	r3, [r7, #8]
 8002d7e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002d82:	2b00      	cmp	r3, #0
 8002d84:	d00c      	beq.n	8002da0 <HAL_TIM_IRQHandler+0x190>
 8002d86:	68fb      	ldr	r3, [r7, #12]
 8002d88:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002d8c:	2b00      	cmp	r3, #0
 8002d8e:	d007      	beq.n	8002da0 <HAL_TIM_IRQHandler+0x190>
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	681b      	ldr	r3, [r3, #0]
 8002d94:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002d98:	611a      	str	r2, [r3, #16]
 8002d9a:	6878      	ldr	r0, [r7, #4]
 8002d9c:	f000 fa7f 	bl	800329e <HAL_TIMEx_BreakCallback>
 8002da0:	68bb      	ldr	r3, [r7, #8]
 8002da2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002da6:	2b00      	cmp	r3, #0
 8002da8:	d00c      	beq.n	8002dc4 <HAL_TIM_IRQHandler+0x1b4>
 8002daa:	68fb      	ldr	r3, [r7, #12]
 8002dac:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002db0:	2b00      	cmp	r3, #0
 8002db2:	d007      	beq.n	8002dc4 <HAL_TIM_IRQHandler+0x1b4>
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002dbc:	611a      	str	r2, [r3, #16]
 8002dbe:	6878      	ldr	r0, [r7, #4]
 8002dc0:	f000 f8f8 	bl	8002fb4 <HAL_TIM_TriggerCallback>
 8002dc4:	68bb      	ldr	r3, [r7, #8]
 8002dc6:	f003 0320 	and.w	r3, r3, #32
 8002dca:	2b00      	cmp	r3, #0
 8002dcc:	d00c      	beq.n	8002de8 <HAL_TIM_IRQHandler+0x1d8>
 8002dce:	68fb      	ldr	r3, [r7, #12]
 8002dd0:	f003 0320 	and.w	r3, r3, #32
 8002dd4:	2b00      	cmp	r3, #0
 8002dd6:	d007      	beq.n	8002de8 <HAL_TIM_IRQHandler+0x1d8>
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	681b      	ldr	r3, [r3, #0]
 8002ddc:	f06f 0220 	mvn.w	r2, #32
 8002de0:	611a      	str	r2, [r3, #16]
 8002de2:	6878      	ldr	r0, [r7, #4]
 8002de4:	f000 fa52 	bl	800328c <HAL_TIMEx_CommutCallback>
 8002de8:	bf00      	nop
 8002dea:	3710      	adds	r7, #16
 8002dec:	46bd      	mov	sp, r7
 8002dee:	bd80      	pop	{r7, pc}

08002df0 <HAL_TIM_ConfigClockSource>:
 8002df0:	b580      	push	{r7, lr}
 8002df2:	b084      	sub	sp, #16
 8002df4:	af00      	add	r7, sp, #0
 8002df6:	6078      	str	r0, [r7, #4]
 8002df8:	6039      	str	r1, [r7, #0]
 8002dfa:	2300      	movs	r3, #0
 8002dfc:	73fb      	strb	r3, [r7, #15]
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002e04:	2b01      	cmp	r3, #1
 8002e06:	d101      	bne.n	8002e0c <HAL_TIM_ConfigClockSource+0x1c>
 8002e08:	2302      	movs	r3, #2
 8002e0a:	e0b4      	b.n	8002f76 <HAL_TIM_ConfigClockSource+0x186>
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	2201      	movs	r2, #1
 8002e10:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	2202      	movs	r2, #2
 8002e18:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	689b      	ldr	r3, [r3, #8]
 8002e22:	60bb      	str	r3, [r7, #8]
 8002e24:	68bb      	ldr	r3, [r7, #8]
 8002e26:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8002e2a:	60bb      	str	r3, [r7, #8]
 8002e2c:	68bb      	ldr	r3, [r7, #8]
 8002e2e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002e32:	60bb      	str	r3, [r7, #8]
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	681b      	ldr	r3, [r3, #0]
 8002e38:	68ba      	ldr	r2, [r7, #8]
 8002e3a:	609a      	str	r2, [r3, #8]
 8002e3c:	683b      	ldr	r3, [r7, #0]
 8002e3e:	681b      	ldr	r3, [r3, #0]
 8002e40:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002e44:	d03e      	beq.n	8002ec4 <HAL_TIM_ConfigClockSource+0xd4>
 8002e46:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002e4a:	f200 8087 	bhi.w	8002f5c <HAL_TIM_ConfigClockSource+0x16c>
 8002e4e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002e52:	f000 8086 	beq.w	8002f62 <HAL_TIM_ConfigClockSource+0x172>
 8002e56:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002e5a:	d87f      	bhi.n	8002f5c <HAL_TIM_ConfigClockSource+0x16c>
 8002e5c:	2b70      	cmp	r3, #112	; 0x70
 8002e5e:	d01a      	beq.n	8002e96 <HAL_TIM_ConfigClockSource+0xa6>
 8002e60:	2b70      	cmp	r3, #112	; 0x70
 8002e62:	d87b      	bhi.n	8002f5c <HAL_TIM_ConfigClockSource+0x16c>
 8002e64:	2b60      	cmp	r3, #96	; 0x60
 8002e66:	d050      	beq.n	8002f0a <HAL_TIM_ConfigClockSource+0x11a>
 8002e68:	2b60      	cmp	r3, #96	; 0x60
 8002e6a:	d877      	bhi.n	8002f5c <HAL_TIM_ConfigClockSource+0x16c>
 8002e6c:	2b50      	cmp	r3, #80	; 0x50
 8002e6e:	d03c      	beq.n	8002eea <HAL_TIM_ConfigClockSource+0xfa>
 8002e70:	2b50      	cmp	r3, #80	; 0x50
 8002e72:	d873      	bhi.n	8002f5c <HAL_TIM_ConfigClockSource+0x16c>
 8002e74:	2b40      	cmp	r3, #64	; 0x40
 8002e76:	d058      	beq.n	8002f2a <HAL_TIM_ConfigClockSource+0x13a>
 8002e78:	2b40      	cmp	r3, #64	; 0x40
 8002e7a:	d86f      	bhi.n	8002f5c <HAL_TIM_ConfigClockSource+0x16c>
 8002e7c:	2b30      	cmp	r3, #48	; 0x30
 8002e7e:	d064      	beq.n	8002f4a <HAL_TIM_ConfigClockSource+0x15a>
 8002e80:	2b30      	cmp	r3, #48	; 0x30
 8002e82:	d86b      	bhi.n	8002f5c <HAL_TIM_ConfigClockSource+0x16c>
 8002e84:	2b20      	cmp	r3, #32
 8002e86:	d060      	beq.n	8002f4a <HAL_TIM_ConfigClockSource+0x15a>
 8002e88:	2b20      	cmp	r3, #32
 8002e8a:	d867      	bhi.n	8002f5c <HAL_TIM_ConfigClockSource+0x16c>
 8002e8c:	2b00      	cmp	r3, #0
 8002e8e:	d05c      	beq.n	8002f4a <HAL_TIM_ConfigClockSource+0x15a>
 8002e90:	2b10      	cmp	r3, #16
 8002e92:	d05a      	beq.n	8002f4a <HAL_TIM_ConfigClockSource+0x15a>
 8002e94:	e062      	b.n	8002f5c <HAL_TIM_ConfigClockSource+0x16c>
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	6818      	ldr	r0, [r3, #0]
 8002e9a:	683b      	ldr	r3, [r7, #0]
 8002e9c:	6899      	ldr	r1, [r3, #8]
 8002e9e:	683b      	ldr	r3, [r7, #0]
 8002ea0:	685a      	ldr	r2, [r3, #4]
 8002ea2:	683b      	ldr	r3, [r7, #0]
 8002ea4:	68db      	ldr	r3, [r3, #12]
 8002ea6:	f000 f974 	bl	8003192 <TIM_ETR_SetConfig>
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	681b      	ldr	r3, [r3, #0]
 8002eae:	689b      	ldr	r3, [r3, #8]
 8002eb0:	60bb      	str	r3, [r7, #8]
 8002eb2:	68bb      	ldr	r3, [r7, #8]
 8002eb4:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002eb8:	60bb      	str	r3, [r7, #8]
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	681b      	ldr	r3, [r3, #0]
 8002ebe:	68ba      	ldr	r2, [r7, #8]
 8002ec0:	609a      	str	r2, [r3, #8]
 8002ec2:	e04f      	b.n	8002f64 <HAL_TIM_ConfigClockSource+0x174>
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	6818      	ldr	r0, [r3, #0]
 8002ec8:	683b      	ldr	r3, [r7, #0]
 8002eca:	6899      	ldr	r1, [r3, #8]
 8002ecc:	683b      	ldr	r3, [r7, #0]
 8002ece:	685a      	ldr	r2, [r3, #4]
 8002ed0:	683b      	ldr	r3, [r7, #0]
 8002ed2:	68db      	ldr	r3, [r3, #12]
 8002ed4:	f000 f95d 	bl	8003192 <TIM_ETR_SetConfig>
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	689a      	ldr	r2, [r3, #8]
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002ee6:	609a      	str	r2, [r3, #8]
 8002ee8:	e03c      	b.n	8002f64 <HAL_TIM_ConfigClockSource+0x174>
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	6818      	ldr	r0, [r3, #0]
 8002eee:	683b      	ldr	r3, [r7, #0]
 8002ef0:	6859      	ldr	r1, [r3, #4]
 8002ef2:	683b      	ldr	r3, [r7, #0]
 8002ef4:	68db      	ldr	r3, [r3, #12]
 8002ef6:	461a      	mov	r2, r3
 8002ef8:	f000 f8d4 	bl	80030a4 <TIM_TI1_ConfigInputStage>
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	681b      	ldr	r3, [r3, #0]
 8002f00:	2150      	movs	r1, #80	; 0x50
 8002f02:	4618      	mov	r0, r3
 8002f04:	f000 f92b 	bl	800315e <TIM_ITRx_SetConfig>
 8002f08:	e02c      	b.n	8002f64 <HAL_TIM_ConfigClockSource+0x174>
 8002f0a:	687b      	ldr	r3, [r7, #4]
 8002f0c:	6818      	ldr	r0, [r3, #0]
 8002f0e:	683b      	ldr	r3, [r7, #0]
 8002f10:	6859      	ldr	r1, [r3, #4]
 8002f12:	683b      	ldr	r3, [r7, #0]
 8002f14:	68db      	ldr	r3, [r3, #12]
 8002f16:	461a      	mov	r2, r3
 8002f18:	f000 f8f2 	bl	8003100 <TIM_TI2_ConfigInputStage>
 8002f1c:	687b      	ldr	r3, [r7, #4]
 8002f1e:	681b      	ldr	r3, [r3, #0]
 8002f20:	2160      	movs	r1, #96	; 0x60
 8002f22:	4618      	mov	r0, r3
 8002f24:	f000 f91b 	bl	800315e <TIM_ITRx_SetConfig>
 8002f28:	e01c      	b.n	8002f64 <HAL_TIM_ConfigClockSource+0x174>
 8002f2a:	687b      	ldr	r3, [r7, #4]
 8002f2c:	6818      	ldr	r0, [r3, #0]
 8002f2e:	683b      	ldr	r3, [r7, #0]
 8002f30:	6859      	ldr	r1, [r3, #4]
 8002f32:	683b      	ldr	r3, [r7, #0]
 8002f34:	68db      	ldr	r3, [r3, #12]
 8002f36:	461a      	mov	r2, r3
 8002f38:	f000 f8b4 	bl	80030a4 <TIM_TI1_ConfigInputStage>
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	681b      	ldr	r3, [r3, #0]
 8002f40:	2140      	movs	r1, #64	; 0x40
 8002f42:	4618      	mov	r0, r3
 8002f44:	f000 f90b 	bl	800315e <TIM_ITRx_SetConfig>
 8002f48:	e00c      	b.n	8002f64 <HAL_TIM_ConfigClockSource+0x174>
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	681a      	ldr	r2, [r3, #0]
 8002f4e:	683b      	ldr	r3, [r7, #0]
 8002f50:	681b      	ldr	r3, [r3, #0]
 8002f52:	4619      	mov	r1, r3
 8002f54:	4610      	mov	r0, r2
 8002f56:	f000 f902 	bl	800315e <TIM_ITRx_SetConfig>
 8002f5a:	e003      	b.n	8002f64 <HAL_TIM_ConfigClockSource+0x174>
 8002f5c:	2301      	movs	r3, #1
 8002f5e:	73fb      	strb	r3, [r7, #15]
 8002f60:	e000      	b.n	8002f64 <HAL_TIM_ConfigClockSource+0x174>
 8002f62:	bf00      	nop
 8002f64:	687b      	ldr	r3, [r7, #4]
 8002f66:	2201      	movs	r2, #1
 8002f68:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002f6c:	687b      	ldr	r3, [r7, #4]
 8002f6e:	2200      	movs	r2, #0
 8002f70:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002f74:	7bfb      	ldrb	r3, [r7, #15]
 8002f76:	4618      	mov	r0, r3
 8002f78:	3710      	adds	r7, #16
 8002f7a:	46bd      	mov	sp, r7
 8002f7c:	bd80      	pop	{r7, pc}

08002f7e <HAL_TIM_OC_DelayElapsedCallback>:
 8002f7e:	b480      	push	{r7}
 8002f80:	b083      	sub	sp, #12
 8002f82:	af00      	add	r7, sp, #0
 8002f84:	6078      	str	r0, [r7, #4]
 8002f86:	bf00      	nop
 8002f88:	370c      	adds	r7, #12
 8002f8a:	46bd      	mov	sp, r7
 8002f8c:	bc80      	pop	{r7}
 8002f8e:	4770      	bx	lr

08002f90 <HAL_TIM_IC_CaptureCallback>:
 8002f90:	b480      	push	{r7}
 8002f92:	b083      	sub	sp, #12
 8002f94:	af00      	add	r7, sp, #0
 8002f96:	6078      	str	r0, [r7, #4]
 8002f98:	bf00      	nop
 8002f9a:	370c      	adds	r7, #12
 8002f9c:	46bd      	mov	sp, r7
 8002f9e:	bc80      	pop	{r7}
 8002fa0:	4770      	bx	lr

08002fa2 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002fa2:	b480      	push	{r7}
 8002fa4:	b083      	sub	sp, #12
 8002fa6:	af00      	add	r7, sp, #0
 8002fa8:	6078      	str	r0, [r7, #4]
 8002faa:	bf00      	nop
 8002fac:	370c      	adds	r7, #12
 8002fae:	46bd      	mov	sp, r7
 8002fb0:	bc80      	pop	{r7}
 8002fb2:	4770      	bx	lr

08002fb4 <HAL_TIM_TriggerCallback>:
 8002fb4:	b480      	push	{r7}
 8002fb6:	b083      	sub	sp, #12
 8002fb8:	af00      	add	r7, sp, #0
 8002fba:	6078      	str	r0, [r7, #4]
 8002fbc:	bf00      	nop
 8002fbe:	370c      	adds	r7, #12
 8002fc0:	46bd      	mov	sp, r7
 8002fc2:	bc80      	pop	{r7}
 8002fc4:	4770      	bx	lr
	...

08002fc8 <TIM_Base_SetConfig>:
 8002fc8:	b480      	push	{r7}
 8002fca:	b085      	sub	sp, #20
 8002fcc:	af00      	add	r7, sp, #0
 8002fce:	6078      	str	r0, [r7, #4]
 8002fd0:	6039      	str	r1, [r7, #0]
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	681b      	ldr	r3, [r3, #0]
 8002fd6:	60fb      	str	r3, [r7, #12]
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	4a2f      	ldr	r2, [pc, #188]	; (8003098 <TIM_Base_SetConfig+0xd0>)
 8002fdc:	4293      	cmp	r3, r2
 8002fde:	d00b      	beq.n	8002ff8 <TIM_Base_SetConfig+0x30>
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002fe6:	d007      	beq.n	8002ff8 <TIM_Base_SetConfig+0x30>
 8002fe8:	687b      	ldr	r3, [r7, #4]
 8002fea:	4a2c      	ldr	r2, [pc, #176]	; (800309c <TIM_Base_SetConfig+0xd4>)
 8002fec:	4293      	cmp	r3, r2
 8002fee:	d003      	beq.n	8002ff8 <TIM_Base_SetConfig+0x30>
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	4a2b      	ldr	r2, [pc, #172]	; (80030a0 <TIM_Base_SetConfig+0xd8>)
 8002ff4:	4293      	cmp	r3, r2
 8002ff6:	d108      	bne.n	800300a <TIM_Base_SetConfig+0x42>
 8002ff8:	68fb      	ldr	r3, [r7, #12]
 8002ffa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002ffe:	60fb      	str	r3, [r7, #12]
 8003000:	683b      	ldr	r3, [r7, #0]
 8003002:	685b      	ldr	r3, [r3, #4]
 8003004:	68fa      	ldr	r2, [r7, #12]
 8003006:	4313      	orrs	r3, r2
 8003008:	60fb      	str	r3, [r7, #12]
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	4a22      	ldr	r2, [pc, #136]	; (8003098 <TIM_Base_SetConfig+0xd0>)
 800300e:	4293      	cmp	r3, r2
 8003010:	d00b      	beq.n	800302a <TIM_Base_SetConfig+0x62>
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003018:	d007      	beq.n	800302a <TIM_Base_SetConfig+0x62>
 800301a:	687b      	ldr	r3, [r7, #4]
 800301c:	4a1f      	ldr	r2, [pc, #124]	; (800309c <TIM_Base_SetConfig+0xd4>)
 800301e:	4293      	cmp	r3, r2
 8003020:	d003      	beq.n	800302a <TIM_Base_SetConfig+0x62>
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	4a1e      	ldr	r2, [pc, #120]	; (80030a0 <TIM_Base_SetConfig+0xd8>)
 8003026:	4293      	cmp	r3, r2
 8003028:	d108      	bne.n	800303c <TIM_Base_SetConfig+0x74>
 800302a:	68fb      	ldr	r3, [r7, #12]
 800302c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003030:	60fb      	str	r3, [r7, #12]
 8003032:	683b      	ldr	r3, [r7, #0]
 8003034:	68db      	ldr	r3, [r3, #12]
 8003036:	68fa      	ldr	r2, [r7, #12]
 8003038:	4313      	orrs	r3, r2
 800303a:	60fb      	str	r3, [r7, #12]
 800303c:	68fb      	ldr	r3, [r7, #12]
 800303e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8003042:	683b      	ldr	r3, [r7, #0]
 8003044:	695b      	ldr	r3, [r3, #20]
 8003046:	4313      	orrs	r3, r2
 8003048:	60fb      	str	r3, [r7, #12]
 800304a:	687b      	ldr	r3, [r7, #4]
 800304c:	68fa      	ldr	r2, [r7, #12]
 800304e:	601a      	str	r2, [r3, #0]
 8003050:	683b      	ldr	r3, [r7, #0]
 8003052:	689a      	ldr	r2, [r3, #8]
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	62da      	str	r2, [r3, #44]	; 0x2c
 8003058:	683b      	ldr	r3, [r7, #0]
 800305a:	681a      	ldr	r2, [r3, #0]
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	629a      	str	r2, [r3, #40]	; 0x28
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	4a0d      	ldr	r2, [pc, #52]	; (8003098 <TIM_Base_SetConfig+0xd0>)
 8003064:	4293      	cmp	r3, r2
 8003066:	d103      	bne.n	8003070 <TIM_Base_SetConfig+0xa8>
 8003068:	683b      	ldr	r3, [r7, #0]
 800306a:	691a      	ldr	r2, [r3, #16]
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	631a      	str	r2, [r3, #48]	; 0x30
 8003070:	687b      	ldr	r3, [r7, #4]
 8003072:	2201      	movs	r2, #1
 8003074:	615a      	str	r2, [r3, #20]
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	691b      	ldr	r3, [r3, #16]
 800307a:	f003 0301 	and.w	r3, r3, #1
 800307e:	2b00      	cmp	r3, #0
 8003080:	d005      	beq.n	800308e <TIM_Base_SetConfig+0xc6>
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	691b      	ldr	r3, [r3, #16]
 8003086:	f023 0201 	bic.w	r2, r3, #1
 800308a:	687b      	ldr	r3, [r7, #4]
 800308c:	611a      	str	r2, [r3, #16]
 800308e:	bf00      	nop
 8003090:	3714      	adds	r7, #20
 8003092:	46bd      	mov	sp, r7
 8003094:	bc80      	pop	{r7}
 8003096:	4770      	bx	lr
 8003098:	40012c00 	.word	0x40012c00
 800309c:	40000400 	.word	0x40000400
 80030a0:	40000800 	.word	0x40000800

080030a4 <TIM_TI1_ConfigInputStage>:
 80030a4:	b480      	push	{r7}
 80030a6:	b087      	sub	sp, #28
 80030a8:	af00      	add	r7, sp, #0
 80030aa:	60f8      	str	r0, [r7, #12]
 80030ac:	60b9      	str	r1, [r7, #8]
 80030ae:	607a      	str	r2, [r7, #4]
 80030b0:	68fb      	ldr	r3, [r7, #12]
 80030b2:	6a1b      	ldr	r3, [r3, #32]
 80030b4:	617b      	str	r3, [r7, #20]
 80030b6:	68fb      	ldr	r3, [r7, #12]
 80030b8:	6a1b      	ldr	r3, [r3, #32]
 80030ba:	f023 0201 	bic.w	r2, r3, #1
 80030be:	68fb      	ldr	r3, [r7, #12]
 80030c0:	621a      	str	r2, [r3, #32]
 80030c2:	68fb      	ldr	r3, [r7, #12]
 80030c4:	699b      	ldr	r3, [r3, #24]
 80030c6:	613b      	str	r3, [r7, #16]
 80030c8:	693b      	ldr	r3, [r7, #16]
 80030ca:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80030ce:	613b      	str	r3, [r7, #16]
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	011b      	lsls	r3, r3, #4
 80030d4:	693a      	ldr	r2, [r7, #16]
 80030d6:	4313      	orrs	r3, r2
 80030d8:	613b      	str	r3, [r7, #16]
 80030da:	697b      	ldr	r3, [r7, #20]
 80030dc:	f023 030a 	bic.w	r3, r3, #10
 80030e0:	617b      	str	r3, [r7, #20]
 80030e2:	697a      	ldr	r2, [r7, #20]
 80030e4:	68bb      	ldr	r3, [r7, #8]
 80030e6:	4313      	orrs	r3, r2
 80030e8:	617b      	str	r3, [r7, #20]
 80030ea:	68fb      	ldr	r3, [r7, #12]
 80030ec:	693a      	ldr	r2, [r7, #16]
 80030ee:	619a      	str	r2, [r3, #24]
 80030f0:	68fb      	ldr	r3, [r7, #12]
 80030f2:	697a      	ldr	r2, [r7, #20]
 80030f4:	621a      	str	r2, [r3, #32]
 80030f6:	bf00      	nop
 80030f8:	371c      	adds	r7, #28
 80030fa:	46bd      	mov	sp, r7
 80030fc:	bc80      	pop	{r7}
 80030fe:	4770      	bx	lr

08003100 <TIM_TI2_ConfigInputStage>:
 8003100:	b480      	push	{r7}
 8003102:	b087      	sub	sp, #28
 8003104:	af00      	add	r7, sp, #0
 8003106:	60f8      	str	r0, [r7, #12]
 8003108:	60b9      	str	r1, [r7, #8]
 800310a:	607a      	str	r2, [r7, #4]
 800310c:	68fb      	ldr	r3, [r7, #12]
 800310e:	6a1b      	ldr	r3, [r3, #32]
 8003110:	617b      	str	r3, [r7, #20]
 8003112:	68fb      	ldr	r3, [r7, #12]
 8003114:	6a1b      	ldr	r3, [r3, #32]
 8003116:	f023 0210 	bic.w	r2, r3, #16
 800311a:	68fb      	ldr	r3, [r7, #12]
 800311c:	621a      	str	r2, [r3, #32]
 800311e:	68fb      	ldr	r3, [r7, #12]
 8003120:	699b      	ldr	r3, [r3, #24]
 8003122:	613b      	str	r3, [r7, #16]
 8003124:	693b      	ldr	r3, [r7, #16]
 8003126:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800312a:	613b      	str	r3, [r7, #16]
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	031b      	lsls	r3, r3, #12
 8003130:	693a      	ldr	r2, [r7, #16]
 8003132:	4313      	orrs	r3, r2
 8003134:	613b      	str	r3, [r7, #16]
 8003136:	697b      	ldr	r3, [r7, #20]
 8003138:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800313c:	617b      	str	r3, [r7, #20]
 800313e:	68bb      	ldr	r3, [r7, #8]
 8003140:	011b      	lsls	r3, r3, #4
 8003142:	697a      	ldr	r2, [r7, #20]
 8003144:	4313      	orrs	r3, r2
 8003146:	617b      	str	r3, [r7, #20]
 8003148:	68fb      	ldr	r3, [r7, #12]
 800314a:	693a      	ldr	r2, [r7, #16]
 800314c:	619a      	str	r2, [r3, #24]
 800314e:	68fb      	ldr	r3, [r7, #12]
 8003150:	697a      	ldr	r2, [r7, #20]
 8003152:	621a      	str	r2, [r3, #32]
 8003154:	bf00      	nop
 8003156:	371c      	adds	r7, #28
 8003158:	46bd      	mov	sp, r7
 800315a:	bc80      	pop	{r7}
 800315c:	4770      	bx	lr

0800315e <TIM_ITRx_SetConfig>:
 800315e:	b480      	push	{r7}
 8003160:	b085      	sub	sp, #20
 8003162:	af00      	add	r7, sp, #0
 8003164:	6078      	str	r0, [r7, #4]
 8003166:	6039      	str	r1, [r7, #0]
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	689b      	ldr	r3, [r3, #8]
 800316c:	60fb      	str	r3, [r7, #12]
 800316e:	68fb      	ldr	r3, [r7, #12]
 8003170:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003174:	60fb      	str	r3, [r7, #12]
 8003176:	683a      	ldr	r2, [r7, #0]
 8003178:	68fb      	ldr	r3, [r7, #12]
 800317a:	4313      	orrs	r3, r2
 800317c:	f043 0307 	orr.w	r3, r3, #7
 8003180:	60fb      	str	r3, [r7, #12]
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	68fa      	ldr	r2, [r7, #12]
 8003186:	609a      	str	r2, [r3, #8]
 8003188:	bf00      	nop
 800318a:	3714      	adds	r7, #20
 800318c:	46bd      	mov	sp, r7
 800318e:	bc80      	pop	{r7}
 8003190:	4770      	bx	lr

08003192 <TIM_ETR_SetConfig>:
 8003192:	b480      	push	{r7}
 8003194:	b087      	sub	sp, #28
 8003196:	af00      	add	r7, sp, #0
 8003198:	60f8      	str	r0, [r7, #12]
 800319a:	60b9      	str	r1, [r7, #8]
 800319c:	607a      	str	r2, [r7, #4]
 800319e:	603b      	str	r3, [r7, #0]
 80031a0:	68fb      	ldr	r3, [r7, #12]
 80031a2:	689b      	ldr	r3, [r3, #8]
 80031a4:	617b      	str	r3, [r7, #20]
 80031a6:	697b      	ldr	r3, [r7, #20]
 80031a8:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80031ac:	617b      	str	r3, [r7, #20]
 80031ae:	683b      	ldr	r3, [r7, #0]
 80031b0:	021a      	lsls	r2, r3, #8
 80031b2:	687b      	ldr	r3, [r7, #4]
 80031b4:	431a      	orrs	r2, r3
 80031b6:	68bb      	ldr	r3, [r7, #8]
 80031b8:	4313      	orrs	r3, r2
 80031ba:	697a      	ldr	r2, [r7, #20]
 80031bc:	4313      	orrs	r3, r2
 80031be:	617b      	str	r3, [r7, #20]
 80031c0:	68fb      	ldr	r3, [r7, #12]
 80031c2:	697a      	ldr	r2, [r7, #20]
 80031c4:	609a      	str	r2, [r3, #8]
 80031c6:	bf00      	nop
 80031c8:	371c      	adds	r7, #28
 80031ca:	46bd      	mov	sp, r7
 80031cc:	bc80      	pop	{r7}
 80031ce:	4770      	bx	lr

080031d0 <HAL_TIMEx_MasterConfigSynchronization>:
 80031d0:	b480      	push	{r7}
 80031d2:	b085      	sub	sp, #20
 80031d4:	af00      	add	r7, sp, #0
 80031d6:	6078      	str	r0, [r7, #4]
 80031d8:	6039      	str	r1, [r7, #0]
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80031e0:	2b01      	cmp	r3, #1
 80031e2:	d101      	bne.n	80031e8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80031e4:	2302      	movs	r3, #2
 80031e6:	e046      	b.n	8003276 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	2201      	movs	r2, #1
 80031ec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	2202      	movs	r2, #2
 80031f4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	681b      	ldr	r3, [r3, #0]
 80031fc:	685b      	ldr	r3, [r3, #4]
 80031fe:	60fb      	str	r3, [r7, #12]
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	681b      	ldr	r3, [r3, #0]
 8003204:	689b      	ldr	r3, [r3, #8]
 8003206:	60bb      	str	r3, [r7, #8]
 8003208:	68fb      	ldr	r3, [r7, #12]
 800320a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800320e:	60fb      	str	r3, [r7, #12]
 8003210:	683b      	ldr	r3, [r7, #0]
 8003212:	681b      	ldr	r3, [r3, #0]
 8003214:	68fa      	ldr	r2, [r7, #12]
 8003216:	4313      	orrs	r3, r2
 8003218:	60fb      	str	r3, [r7, #12]
 800321a:	687b      	ldr	r3, [r7, #4]
 800321c:	681b      	ldr	r3, [r3, #0]
 800321e:	68fa      	ldr	r2, [r7, #12]
 8003220:	605a      	str	r2, [r3, #4]
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	681b      	ldr	r3, [r3, #0]
 8003226:	4a16      	ldr	r2, [pc, #88]	; (8003280 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8003228:	4293      	cmp	r3, r2
 800322a:	d00e      	beq.n	800324a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800322c:	687b      	ldr	r3, [r7, #4]
 800322e:	681b      	ldr	r3, [r3, #0]
 8003230:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003234:	d009      	beq.n	800324a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003236:	687b      	ldr	r3, [r7, #4]
 8003238:	681b      	ldr	r3, [r3, #0]
 800323a:	4a12      	ldr	r2, [pc, #72]	; (8003284 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 800323c:	4293      	cmp	r3, r2
 800323e:	d004      	beq.n	800324a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	681b      	ldr	r3, [r3, #0]
 8003244:	4a10      	ldr	r2, [pc, #64]	; (8003288 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8003246:	4293      	cmp	r3, r2
 8003248:	d10c      	bne.n	8003264 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 800324a:	68bb      	ldr	r3, [r7, #8]
 800324c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003250:	60bb      	str	r3, [r7, #8]
 8003252:	683b      	ldr	r3, [r7, #0]
 8003254:	685b      	ldr	r3, [r3, #4]
 8003256:	68ba      	ldr	r2, [r7, #8]
 8003258:	4313      	orrs	r3, r2
 800325a:	60bb      	str	r3, [r7, #8]
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	681b      	ldr	r3, [r3, #0]
 8003260:	68ba      	ldr	r2, [r7, #8]
 8003262:	609a      	str	r2, [r3, #8]
 8003264:	687b      	ldr	r3, [r7, #4]
 8003266:	2201      	movs	r2, #1
 8003268:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800326c:	687b      	ldr	r3, [r7, #4]
 800326e:	2200      	movs	r2, #0
 8003270:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003274:	2300      	movs	r3, #0
 8003276:	4618      	mov	r0, r3
 8003278:	3714      	adds	r7, #20
 800327a:	46bd      	mov	sp, r7
 800327c:	bc80      	pop	{r7}
 800327e:	4770      	bx	lr
 8003280:	40012c00 	.word	0x40012c00
 8003284:	40000400 	.word	0x40000400
 8003288:	40000800 	.word	0x40000800

0800328c <HAL_TIMEx_CommutCallback>:
 800328c:	b480      	push	{r7}
 800328e:	b083      	sub	sp, #12
 8003290:	af00      	add	r7, sp, #0
 8003292:	6078      	str	r0, [r7, #4]
 8003294:	bf00      	nop
 8003296:	370c      	adds	r7, #12
 8003298:	46bd      	mov	sp, r7
 800329a:	bc80      	pop	{r7}
 800329c:	4770      	bx	lr

0800329e <HAL_TIMEx_BreakCallback>:
 800329e:	b480      	push	{r7}
 80032a0:	b083      	sub	sp, #12
 80032a2:	af00      	add	r7, sp, #0
 80032a4:	6078      	str	r0, [r7, #4]
 80032a6:	bf00      	nop
 80032a8:	370c      	adds	r7, #12
 80032aa:	46bd      	mov	sp, r7
 80032ac:	bc80      	pop	{r7}
 80032ae:	4770      	bx	lr

080032b0 <__errno>:
 80032b0:	4b01      	ldr	r3, [pc, #4]	; (80032b8 <__errno+0x8>)
 80032b2:	6818      	ldr	r0, [r3, #0]
 80032b4:	4770      	bx	lr
 80032b6:	bf00      	nop
 80032b8:	20000064 	.word	0x20000064

080032bc <__libc_init_array>:
 80032bc:	b570      	push	{r4, r5, r6, lr}
 80032be:	2600      	movs	r6, #0
 80032c0:	4d0c      	ldr	r5, [pc, #48]	; (80032f4 <__libc_init_array+0x38>)
 80032c2:	4c0d      	ldr	r4, [pc, #52]	; (80032f8 <__libc_init_array+0x3c>)
 80032c4:	1b64      	subs	r4, r4, r5
 80032c6:	10a4      	asrs	r4, r4, #2
 80032c8:	42a6      	cmp	r6, r4
 80032ca:	d109      	bne.n	80032e0 <__libc_init_array+0x24>
 80032cc:	f000 fc5c 	bl	8003b88 <_init>
 80032d0:	2600      	movs	r6, #0
 80032d2:	4d0a      	ldr	r5, [pc, #40]	; (80032fc <__libc_init_array+0x40>)
 80032d4:	4c0a      	ldr	r4, [pc, #40]	; (8003300 <__libc_init_array+0x44>)
 80032d6:	1b64      	subs	r4, r4, r5
 80032d8:	10a4      	asrs	r4, r4, #2
 80032da:	42a6      	cmp	r6, r4
 80032dc:	d105      	bne.n	80032ea <__libc_init_array+0x2e>
 80032de:	bd70      	pop	{r4, r5, r6, pc}
 80032e0:	f855 3b04 	ldr.w	r3, [r5], #4
 80032e4:	4798      	blx	r3
 80032e6:	3601      	adds	r6, #1
 80032e8:	e7ee      	b.n	80032c8 <__libc_init_array+0xc>
 80032ea:	f855 3b04 	ldr.w	r3, [r5], #4
 80032ee:	4798      	blx	r3
 80032f0:	3601      	adds	r6, #1
 80032f2:	e7f2      	b.n	80032da <__libc_init_array+0x1e>
 80032f4:	08003c10 	.word	0x08003c10
 80032f8:	08003c10 	.word	0x08003c10
 80032fc:	08003c10 	.word	0x08003c10
 8003300:	08003c14 	.word	0x08003c14

08003304 <memset>:
 8003304:	4603      	mov	r3, r0
 8003306:	4402      	add	r2, r0
 8003308:	4293      	cmp	r3, r2
 800330a:	d100      	bne.n	800330e <memset+0xa>
 800330c:	4770      	bx	lr
 800330e:	f803 1b01 	strb.w	r1, [r3], #1
 8003312:	e7f9      	b.n	8003308 <memset+0x4>

08003314 <siprintf>:
 8003314:	b40e      	push	{r1, r2, r3}
 8003316:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800331a:	b500      	push	{lr}
 800331c:	b09c      	sub	sp, #112	; 0x70
 800331e:	ab1d      	add	r3, sp, #116	; 0x74
 8003320:	9002      	str	r0, [sp, #8]
 8003322:	9006      	str	r0, [sp, #24]
 8003324:	9107      	str	r1, [sp, #28]
 8003326:	9104      	str	r1, [sp, #16]
 8003328:	4808      	ldr	r0, [pc, #32]	; (800334c <siprintf+0x38>)
 800332a:	4909      	ldr	r1, [pc, #36]	; (8003350 <siprintf+0x3c>)
 800332c:	f853 2b04 	ldr.w	r2, [r3], #4
 8003330:	9105      	str	r1, [sp, #20]
 8003332:	6800      	ldr	r0, [r0, #0]
 8003334:	a902      	add	r1, sp, #8
 8003336:	9301      	str	r3, [sp, #4]
 8003338:	f000 f868 	bl	800340c <_svfiprintf_r>
 800333c:	2200      	movs	r2, #0
 800333e:	9b02      	ldr	r3, [sp, #8]
 8003340:	701a      	strb	r2, [r3, #0]
 8003342:	b01c      	add	sp, #112	; 0x70
 8003344:	f85d eb04 	ldr.w	lr, [sp], #4
 8003348:	b003      	add	sp, #12
 800334a:	4770      	bx	lr
 800334c:	20000064 	.word	0x20000064
 8003350:	ffff0208 	.word	0xffff0208

08003354 <__ssputs_r>:
 8003354:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003358:	688e      	ldr	r6, [r1, #8]
 800335a:	4682      	mov	sl, r0
 800335c:	429e      	cmp	r6, r3
 800335e:	460c      	mov	r4, r1
 8003360:	4690      	mov	r8, r2
 8003362:	461f      	mov	r7, r3
 8003364:	d838      	bhi.n	80033d8 <__ssputs_r+0x84>
 8003366:	898a      	ldrh	r2, [r1, #12]
 8003368:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800336c:	d032      	beq.n	80033d4 <__ssputs_r+0x80>
 800336e:	6825      	ldr	r5, [r4, #0]
 8003370:	6909      	ldr	r1, [r1, #16]
 8003372:	3301      	adds	r3, #1
 8003374:	eba5 0901 	sub.w	r9, r5, r1
 8003378:	6965      	ldr	r5, [r4, #20]
 800337a:	444b      	add	r3, r9
 800337c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003380:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003384:	106d      	asrs	r5, r5, #1
 8003386:	429d      	cmp	r5, r3
 8003388:	bf38      	it	cc
 800338a:	461d      	movcc	r5, r3
 800338c:	0553      	lsls	r3, r2, #21
 800338e:	d531      	bpl.n	80033f4 <__ssputs_r+0xa0>
 8003390:	4629      	mov	r1, r5
 8003392:	f000 fb53 	bl	8003a3c <_malloc_r>
 8003396:	4606      	mov	r6, r0
 8003398:	b950      	cbnz	r0, 80033b0 <__ssputs_r+0x5c>
 800339a:	230c      	movs	r3, #12
 800339c:	f04f 30ff 	mov.w	r0, #4294967295
 80033a0:	f8ca 3000 	str.w	r3, [sl]
 80033a4:	89a3      	ldrh	r3, [r4, #12]
 80033a6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80033aa:	81a3      	strh	r3, [r4, #12]
 80033ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80033b0:	464a      	mov	r2, r9
 80033b2:	6921      	ldr	r1, [r4, #16]
 80033b4:	f000 face 	bl	8003954 <memcpy>
 80033b8:	89a3      	ldrh	r3, [r4, #12]
 80033ba:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80033be:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80033c2:	81a3      	strh	r3, [r4, #12]
 80033c4:	6126      	str	r6, [r4, #16]
 80033c6:	444e      	add	r6, r9
 80033c8:	6026      	str	r6, [r4, #0]
 80033ca:	463e      	mov	r6, r7
 80033cc:	6165      	str	r5, [r4, #20]
 80033ce:	eba5 0509 	sub.w	r5, r5, r9
 80033d2:	60a5      	str	r5, [r4, #8]
 80033d4:	42be      	cmp	r6, r7
 80033d6:	d900      	bls.n	80033da <__ssputs_r+0x86>
 80033d8:	463e      	mov	r6, r7
 80033da:	4632      	mov	r2, r6
 80033dc:	4641      	mov	r1, r8
 80033de:	6820      	ldr	r0, [r4, #0]
 80033e0:	f000 fac6 	bl	8003970 <memmove>
 80033e4:	68a3      	ldr	r3, [r4, #8]
 80033e6:	6822      	ldr	r2, [r4, #0]
 80033e8:	1b9b      	subs	r3, r3, r6
 80033ea:	4432      	add	r2, r6
 80033ec:	2000      	movs	r0, #0
 80033ee:	60a3      	str	r3, [r4, #8]
 80033f0:	6022      	str	r2, [r4, #0]
 80033f2:	e7db      	b.n	80033ac <__ssputs_r+0x58>
 80033f4:	462a      	mov	r2, r5
 80033f6:	f000 fb7b 	bl	8003af0 <_realloc_r>
 80033fa:	4606      	mov	r6, r0
 80033fc:	2800      	cmp	r0, #0
 80033fe:	d1e1      	bne.n	80033c4 <__ssputs_r+0x70>
 8003400:	4650      	mov	r0, sl
 8003402:	6921      	ldr	r1, [r4, #16]
 8003404:	f000 face 	bl	80039a4 <_free_r>
 8003408:	e7c7      	b.n	800339a <__ssputs_r+0x46>
	...

0800340c <_svfiprintf_r>:
 800340c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003410:	4698      	mov	r8, r3
 8003412:	898b      	ldrh	r3, [r1, #12]
 8003414:	4607      	mov	r7, r0
 8003416:	061b      	lsls	r3, r3, #24
 8003418:	460d      	mov	r5, r1
 800341a:	4614      	mov	r4, r2
 800341c:	b09d      	sub	sp, #116	; 0x74
 800341e:	d50e      	bpl.n	800343e <_svfiprintf_r+0x32>
 8003420:	690b      	ldr	r3, [r1, #16]
 8003422:	b963      	cbnz	r3, 800343e <_svfiprintf_r+0x32>
 8003424:	2140      	movs	r1, #64	; 0x40
 8003426:	f000 fb09 	bl	8003a3c <_malloc_r>
 800342a:	6028      	str	r0, [r5, #0]
 800342c:	6128      	str	r0, [r5, #16]
 800342e:	b920      	cbnz	r0, 800343a <_svfiprintf_r+0x2e>
 8003430:	230c      	movs	r3, #12
 8003432:	603b      	str	r3, [r7, #0]
 8003434:	f04f 30ff 	mov.w	r0, #4294967295
 8003438:	e0d1      	b.n	80035de <_svfiprintf_r+0x1d2>
 800343a:	2340      	movs	r3, #64	; 0x40
 800343c:	616b      	str	r3, [r5, #20]
 800343e:	2300      	movs	r3, #0
 8003440:	9309      	str	r3, [sp, #36]	; 0x24
 8003442:	2320      	movs	r3, #32
 8003444:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003448:	2330      	movs	r3, #48	; 0x30
 800344a:	f04f 0901 	mov.w	r9, #1
 800344e:	f8cd 800c 	str.w	r8, [sp, #12]
 8003452:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 80035f8 <_svfiprintf_r+0x1ec>
 8003456:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800345a:	4623      	mov	r3, r4
 800345c:	469a      	mov	sl, r3
 800345e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003462:	b10a      	cbz	r2, 8003468 <_svfiprintf_r+0x5c>
 8003464:	2a25      	cmp	r2, #37	; 0x25
 8003466:	d1f9      	bne.n	800345c <_svfiprintf_r+0x50>
 8003468:	ebba 0b04 	subs.w	fp, sl, r4
 800346c:	d00b      	beq.n	8003486 <_svfiprintf_r+0x7a>
 800346e:	465b      	mov	r3, fp
 8003470:	4622      	mov	r2, r4
 8003472:	4629      	mov	r1, r5
 8003474:	4638      	mov	r0, r7
 8003476:	f7ff ff6d 	bl	8003354 <__ssputs_r>
 800347a:	3001      	adds	r0, #1
 800347c:	f000 80aa 	beq.w	80035d4 <_svfiprintf_r+0x1c8>
 8003480:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003482:	445a      	add	r2, fp
 8003484:	9209      	str	r2, [sp, #36]	; 0x24
 8003486:	f89a 3000 	ldrb.w	r3, [sl]
 800348a:	2b00      	cmp	r3, #0
 800348c:	f000 80a2 	beq.w	80035d4 <_svfiprintf_r+0x1c8>
 8003490:	2300      	movs	r3, #0
 8003492:	f04f 32ff 	mov.w	r2, #4294967295
 8003496:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800349a:	f10a 0a01 	add.w	sl, sl, #1
 800349e:	9304      	str	r3, [sp, #16]
 80034a0:	9307      	str	r3, [sp, #28]
 80034a2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80034a6:	931a      	str	r3, [sp, #104]	; 0x68
 80034a8:	4654      	mov	r4, sl
 80034aa:	2205      	movs	r2, #5
 80034ac:	f814 1b01 	ldrb.w	r1, [r4], #1
 80034b0:	4851      	ldr	r0, [pc, #324]	; (80035f8 <_svfiprintf_r+0x1ec>)
 80034b2:	f000 fa41 	bl	8003938 <memchr>
 80034b6:	9a04      	ldr	r2, [sp, #16]
 80034b8:	b9d8      	cbnz	r0, 80034f2 <_svfiprintf_r+0xe6>
 80034ba:	06d0      	lsls	r0, r2, #27
 80034bc:	bf44      	itt	mi
 80034be:	2320      	movmi	r3, #32
 80034c0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80034c4:	0711      	lsls	r1, r2, #28
 80034c6:	bf44      	itt	mi
 80034c8:	232b      	movmi	r3, #43	; 0x2b
 80034ca:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80034ce:	f89a 3000 	ldrb.w	r3, [sl]
 80034d2:	2b2a      	cmp	r3, #42	; 0x2a
 80034d4:	d015      	beq.n	8003502 <_svfiprintf_r+0xf6>
 80034d6:	4654      	mov	r4, sl
 80034d8:	2000      	movs	r0, #0
 80034da:	f04f 0c0a 	mov.w	ip, #10
 80034de:	9a07      	ldr	r2, [sp, #28]
 80034e0:	4621      	mov	r1, r4
 80034e2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80034e6:	3b30      	subs	r3, #48	; 0x30
 80034e8:	2b09      	cmp	r3, #9
 80034ea:	d94e      	bls.n	800358a <_svfiprintf_r+0x17e>
 80034ec:	b1b0      	cbz	r0, 800351c <_svfiprintf_r+0x110>
 80034ee:	9207      	str	r2, [sp, #28]
 80034f0:	e014      	b.n	800351c <_svfiprintf_r+0x110>
 80034f2:	eba0 0308 	sub.w	r3, r0, r8
 80034f6:	fa09 f303 	lsl.w	r3, r9, r3
 80034fa:	4313      	orrs	r3, r2
 80034fc:	46a2      	mov	sl, r4
 80034fe:	9304      	str	r3, [sp, #16]
 8003500:	e7d2      	b.n	80034a8 <_svfiprintf_r+0x9c>
 8003502:	9b03      	ldr	r3, [sp, #12]
 8003504:	1d19      	adds	r1, r3, #4
 8003506:	681b      	ldr	r3, [r3, #0]
 8003508:	9103      	str	r1, [sp, #12]
 800350a:	2b00      	cmp	r3, #0
 800350c:	bfbb      	ittet	lt
 800350e:	425b      	neglt	r3, r3
 8003510:	f042 0202 	orrlt.w	r2, r2, #2
 8003514:	9307      	strge	r3, [sp, #28]
 8003516:	9307      	strlt	r3, [sp, #28]
 8003518:	bfb8      	it	lt
 800351a:	9204      	strlt	r2, [sp, #16]
 800351c:	7823      	ldrb	r3, [r4, #0]
 800351e:	2b2e      	cmp	r3, #46	; 0x2e
 8003520:	d10c      	bne.n	800353c <_svfiprintf_r+0x130>
 8003522:	7863      	ldrb	r3, [r4, #1]
 8003524:	2b2a      	cmp	r3, #42	; 0x2a
 8003526:	d135      	bne.n	8003594 <_svfiprintf_r+0x188>
 8003528:	9b03      	ldr	r3, [sp, #12]
 800352a:	3402      	adds	r4, #2
 800352c:	1d1a      	adds	r2, r3, #4
 800352e:	681b      	ldr	r3, [r3, #0]
 8003530:	9203      	str	r2, [sp, #12]
 8003532:	2b00      	cmp	r3, #0
 8003534:	bfb8      	it	lt
 8003536:	f04f 33ff 	movlt.w	r3, #4294967295
 800353a:	9305      	str	r3, [sp, #20]
 800353c:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8003608 <_svfiprintf_r+0x1fc>
 8003540:	2203      	movs	r2, #3
 8003542:	4650      	mov	r0, sl
 8003544:	7821      	ldrb	r1, [r4, #0]
 8003546:	f000 f9f7 	bl	8003938 <memchr>
 800354a:	b140      	cbz	r0, 800355e <_svfiprintf_r+0x152>
 800354c:	2340      	movs	r3, #64	; 0x40
 800354e:	eba0 000a 	sub.w	r0, r0, sl
 8003552:	fa03 f000 	lsl.w	r0, r3, r0
 8003556:	9b04      	ldr	r3, [sp, #16]
 8003558:	3401      	adds	r4, #1
 800355a:	4303      	orrs	r3, r0
 800355c:	9304      	str	r3, [sp, #16]
 800355e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003562:	2206      	movs	r2, #6
 8003564:	4825      	ldr	r0, [pc, #148]	; (80035fc <_svfiprintf_r+0x1f0>)
 8003566:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800356a:	f000 f9e5 	bl	8003938 <memchr>
 800356e:	2800      	cmp	r0, #0
 8003570:	d038      	beq.n	80035e4 <_svfiprintf_r+0x1d8>
 8003572:	4b23      	ldr	r3, [pc, #140]	; (8003600 <_svfiprintf_r+0x1f4>)
 8003574:	bb1b      	cbnz	r3, 80035be <_svfiprintf_r+0x1b2>
 8003576:	9b03      	ldr	r3, [sp, #12]
 8003578:	3307      	adds	r3, #7
 800357a:	f023 0307 	bic.w	r3, r3, #7
 800357e:	3308      	adds	r3, #8
 8003580:	9303      	str	r3, [sp, #12]
 8003582:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003584:	4433      	add	r3, r6
 8003586:	9309      	str	r3, [sp, #36]	; 0x24
 8003588:	e767      	b.n	800345a <_svfiprintf_r+0x4e>
 800358a:	460c      	mov	r4, r1
 800358c:	2001      	movs	r0, #1
 800358e:	fb0c 3202 	mla	r2, ip, r2, r3
 8003592:	e7a5      	b.n	80034e0 <_svfiprintf_r+0xd4>
 8003594:	2300      	movs	r3, #0
 8003596:	f04f 0c0a 	mov.w	ip, #10
 800359a:	4619      	mov	r1, r3
 800359c:	3401      	adds	r4, #1
 800359e:	9305      	str	r3, [sp, #20]
 80035a0:	4620      	mov	r0, r4
 80035a2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80035a6:	3a30      	subs	r2, #48	; 0x30
 80035a8:	2a09      	cmp	r2, #9
 80035aa:	d903      	bls.n	80035b4 <_svfiprintf_r+0x1a8>
 80035ac:	2b00      	cmp	r3, #0
 80035ae:	d0c5      	beq.n	800353c <_svfiprintf_r+0x130>
 80035b0:	9105      	str	r1, [sp, #20]
 80035b2:	e7c3      	b.n	800353c <_svfiprintf_r+0x130>
 80035b4:	4604      	mov	r4, r0
 80035b6:	2301      	movs	r3, #1
 80035b8:	fb0c 2101 	mla	r1, ip, r1, r2
 80035bc:	e7f0      	b.n	80035a0 <_svfiprintf_r+0x194>
 80035be:	ab03      	add	r3, sp, #12
 80035c0:	9300      	str	r3, [sp, #0]
 80035c2:	462a      	mov	r2, r5
 80035c4:	4638      	mov	r0, r7
 80035c6:	4b0f      	ldr	r3, [pc, #60]	; (8003604 <_svfiprintf_r+0x1f8>)
 80035c8:	a904      	add	r1, sp, #16
 80035ca:	f3af 8000 	nop.w
 80035ce:	1c42      	adds	r2, r0, #1
 80035d0:	4606      	mov	r6, r0
 80035d2:	d1d6      	bne.n	8003582 <_svfiprintf_r+0x176>
 80035d4:	89ab      	ldrh	r3, [r5, #12]
 80035d6:	065b      	lsls	r3, r3, #25
 80035d8:	f53f af2c 	bmi.w	8003434 <_svfiprintf_r+0x28>
 80035dc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80035de:	b01d      	add	sp, #116	; 0x74
 80035e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80035e4:	ab03      	add	r3, sp, #12
 80035e6:	9300      	str	r3, [sp, #0]
 80035e8:	462a      	mov	r2, r5
 80035ea:	4638      	mov	r0, r7
 80035ec:	4b05      	ldr	r3, [pc, #20]	; (8003604 <_svfiprintf_r+0x1f8>)
 80035ee:	a904      	add	r1, sp, #16
 80035f0:	f000 f87c 	bl	80036ec <_printf_i>
 80035f4:	e7eb      	b.n	80035ce <_svfiprintf_r+0x1c2>
 80035f6:	bf00      	nop
 80035f8:	08003bda 	.word	0x08003bda
 80035fc:	08003be4 	.word	0x08003be4
 8003600:	00000000 	.word	0x00000000
 8003604:	08003355 	.word	0x08003355
 8003608:	08003be0 	.word	0x08003be0

0800360c <_printf_common>:
 800360c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003610:	4616      	mov	r6, r2
 8003612:	4699      	mov	r9, r3
 8003614:	688a      	ldr	r2, [r1, #8]
 8003616:	690b      	ldr	r3, [r1, #16]
 8003618:	4607      	mov	r7, r0
 800361a:	4293      	cmp	r3, r2
 800361c:	bfb8      	it	lt
 800361e:	4613      	movlt	r3, r2
 8003620:	6033      	str	r3, [r6, #0]
 8003622:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003626:	460c      	mov	r4, r1
 8003628:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800362c:	b10a      	cbz	r2, 8003632 <_printf_common+0x26>
 800362e:	3301      	adds	r3, #1
 8003630:	6033      	str	r3, [r6, #0]
 8003632:	6823      	ldr	r3, [r4, #0]
 8003634:	0699      	lsls	r1, r3, #26
 8003636:	bf42      	ittt	mi
 8003638:	6833      	ldrmi	r3, [r6, #0]
 800363a:	3302      	addmi	r3, #2
 800363c:	6033      	strmi	r3, [r6, #0]
 800363e:	6825      	ldr	r5, [r4, #0]
 8003640:	f015 0506 	ands.w	r5, r5, #6
 8003644:	d106      	bne.n	8003654 <_printf_common+0x48>
 8003646:	f104 0a19 	add.w	sl, r4, #25
 800364a:	68e3      	ldr	r3, [r4, #12]
 800364c:	6832      	ldr	r2, [r6, #0]
 800364e:	1a9b      	subs	r3, r3, r2
 8003650:	42ab      	cmp	r3, r5
 8003652:	dc28      	bgt.n	80036a6 <_printf_common+0x9a>
 8003654:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003658:	1e13      	subs	r3, r2, #0
 800365a:	6822      	ldr	r2, [r4, #0]
 800365c:	bf18      	it	ne
 800365e:	2301      	movne	r3, #1
 8003660:	0692      	lsls	r2, r2, #26
 8003662:	d42d      	bmi.n	80036c0 <_printf_common+0xb4>
 8003664:	4649      	mov	r1, r9
 8003666:	4638      	mov	r0, r7
 8003668:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800366c:	47c0      	blx	r8
 800366e:	3001      	adds	r0, #1
 8003670:	d020      	beq.n	80036b4 <_printf_common+0xa8>
 8003672:	6823      	ldr	r3, [r4, #0]
 8003674:	68e5      	ldr	r5, [r4, #12]
 8003676:	f003 0306 	and.w	r3, r3, #6
 800367a:	2b04      	cmp	r3, #4
 800367c:	bf18      	it	ne
 800367e:	2500      	movne	r5, #0
 8003680:	6832      	ldr	r2, [r6, #0]
 8003682:	f04f 0600 	mov.w	r6, #0
 8003686:	68a3      	ldr	r3, [r4, #8]
 8003688:	bf08      	it	eq
 800368a:	1aad      	subeq	r5, r5, r2
 800368c:	6922      	ldr	r2, [r4, #16]
 800368e:	bf08      	it	eq
 8003690:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003694:	4293      	cmp	r3, r2
 8003696:	bfc4      	itt	gt
 8003698:	1a9b      	subgt	r3, r3, r2
 800369a:	18ed      	addgt	r5, r5, r3
 800369c:	341a      	adds	r4, #26
 800369e:	42b5      	cmp	r5, r6
 80036a0:	d11a      	bne.n	80036d8 <_printf_common+0xcc>
 80036a2:	2000      	movs	r0, #0
 80036a4:	e008      	b.n	80036b8 <_printf_common+0xac>
 80036a6:	2301      	movs	r3, #1
 80036a8:	4652      	mov	r2, sl
 80036aa:	4649      	mov	r1, r9
 80036ac:	4638      	mov	r0, r7
 80036ae:	47c0      	blx	r8
 80036b0:	3001      	adds	r0, #1
 80036b2:	d103      	bne.n	80036bc <_printf_common+0xb0>
 80036b4:	f04f 30ff 	mov.w	r0, #4294967295
 80036b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80036bc:	3501      	adds	r5, #1
 80036be:	e7c4      	b.n	800364a <_printf_common+0x3e>
 80036c0:	2030      	movs	r0, #48	; 0x30
 80036c2:	18e1      	adds	r1, r4, r3
 80036c4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80036c8:	1c5a      	adds	r2, r3, #1
 80036ca:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80036ce:	4422      	add	r2, r4
 80036d0:	3302      	adds	r3, #2
 80036d2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80036d6:	e7c5      	b.n	8003664 <_printf_common+0x58>
 80036d8:	2301      	movs	r3, #1
 80036da:	4622      	mov	r2, r4
 80036dc:	4649      	mov	r1, r9
 80036de:	4638      	mov	r0, r7
 80036e0:	47c0      	blx	r8
 80036e2:	3001      	adds	r0, #1
 80036e4:	d0e6      	beq.n	80036b4 <_printf_common+0xa8>
 80036e6:	3601      	adds	r6, #1
 80036e8:	e7d9      	b.n	800369e <_printf_common+0x92>
	...

080036ec <_printf_i>:
 80036ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80036f0:	460c      	mov	r4, r1
 80036f2:	7e27      	ldrb	r7, [r4, #24]
 80036f4:	4691      	mov	r9, r2
 80036f6:	2f78      	cmp	r7, #120	; 0x78
 80036f8:	4680      	mov	r8, r0
 80036fa:	469a      	mov	sl, r3
 80036fc:	990c      	ldr	r1, [sp, #48]	; 0x30
 80036fe:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003702:	d807      	bhi.n	8003714 <_printf_i+0x28>
 8003704:	2f62      	cmp	r7, #98	; 0x62
 8003706:	d80a      	bhi.n	800371e <_printf_i+0x32>
 8003708:	2f00      	cmp	r7, #0
 800370a:	f000 80d9 	beq.w	80038c0 <_printf_i+0x1d4>
 800370e:	2f58      	cmp	r7, #88	; 0x58
 8003710:	f000 80a4 	beq.w	800385c <_printf_i+0x170>
 8003714:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8003718:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800371c:	e03a      	b.n	8003794 <_printf_i+0xa8>
 800371e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8003722:	2b15      	cmp	r3, #21
 8003724:	d8f6      	bhi.n	8003714 <_printf_i+0x28>
 8003726:	a001      	add	r0, pc, #4	; (adr r0, 800372c <_printf_i+0x40>)
 8003728:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 800372c:	08003785 	.word	0x08003785
 8003730:	08003799 	.word	0x08003799
 8003734:	08003715 	.word	0x08003715
 8003738:	08003715 	.word	0x08003715
 800373c:	08003715 	.word	0x08003715
 8003740:	08003715 	.word	0x08003715
 8003744:	08003799 	.word	0x08003799
 8003748:	08003715 	.word	0x08003715
 800374c:	08003715 	.word	0x08003715
 8003750:	08003715 	.word	0x08003715
 8003754:	08003715 	.word	0x08003715
 8003758:	080038a7 	.word	0x080038a7
 800375c:	080037c9 	.word	0x080037c9
 8003760:	08003889 	.word	0x08003889
 8003764:	08003715 	.word	0x08003715
 8003768:	08003715 	.word	0x08003715
 800376c:	080038c9 	.word	0x080038c9
 8003770:	08003715 	.word	0x08003715
 8003774:	080037c9 	.word	0x080037c9
 8003778:	08003715 	.word	0x08003715
 800377c:	08003715 	.word	0x08003715
 8003780:	08003891 	.word	0x08003891
 8003784:	680b      	ldr	r3, [r1, #0]
 8003786:	f104 0642 	add.w	r6, r4, #66	; 0x42
 800378a:	1d1a      	adds	r2, r3, #4
 800378c:	681b      	ldr	r3, [r3, #0]
 800378e:	600a      	str	r2, [r1, #0]
 8003790:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003794:	2301      	movs	r3, #1
 8003796:	e0a4      	b.n	80038e2 <_printf_i+0x1f6>
 8003798:	6825      	ldr	r5, [r4, #0]
 800379a:	6808      	ldr	r0, [r1, #0]
 800379c:	062e      	lsls	r6, r5, #24
 800379e:	f100 0304 	add.w	r3, r0, #4
 80037a2:	d50a      	bpl.n	80037ba <_printf_i+0xce>
 80037a4:	6805      	ldr	r5, [r0, #0]
 80037a6:	600b      	str	r3, [r1, #0]
 80037a8:	2d00      	cmp	r5, #0
 80037aa:	da03      	bge.n	80037b4 <_printf_i+0xc8>
 80037ac:	232d      	movs	r3, #45	; 0x2d
 80037ae:	426d      	negs	r5, r5
 80037b0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80037b4:	230a      	movs	r3, #10
 80037b6:	485e      	ldr	r0, [pc, #376]	; (8003930 <_printf_i+0x244>)
 80037b8:	e019      	b.n	80037ee <_printf_i+0x102>
 80037ba:	f015 0f40 	tst.w	r5, #64	; 0x40
 80037be:	6805      	ldr	r5, [r0, #0]
 80037c0:	600b      	str	r3, [r1, #0]
 80037c2:	bf18      	it	ne
 80037c4:	b22d      	sxthne	r5, r5
 80037c6:	e7ef      	b.n	80037a8 <_printf_i+0xbc>
 80037c8:	680b      	ldr	r3, [r1, #0]
 80037ca:	6825      	ldr	r5, [r4, #0]
 80037cc:	1d18      	adds	r0, r3, #4
 80037ce:	6008      	str	r0, [r1, #0]
 80037d0:	0628      	lsls	r0, r5, #24
 80037d2:	d501      	bpl.n	80037d8 <_printf_i+0xec>
 80037d4:	681d      	ldr	r5, [r3, #0]
 80037d6:	e002      	b.n	80037de <_printf_i+0xf2>
 80037d8:	0669      	lsls	r1, r5, #25
 80037da:	d5fb      	bpl.n	80037d4 <_printf_i+0xe8>
 80037dc:	881d      	ldrh	r5, [r3, #0]
 80037de:	2f6f      	cmp	r7, #111	; 0x6f
 80037e0:	bf0c      	ite	eq
 80037e2:	2308      	moveq	r3, #8
 80037e4:	230a      	movne	r3, #10
 80037e6:	4852      	ldr	r0, [pc, #328]	; (8003930 <_printf_i+0x244>)
 80037e8:	2100      	movs	r1, #0
 80037ea:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80037ee:	6866      	ldr	r6, [r4, #4]
 80037f0:	2e00      	cmp	r6, #0
 80037f2:	bfa8      	it	ge
 80037f4:	6821      	ldrge	r1, [r4, #0]
 80037f6:	60a6      	str	r6, [r4, #8]
 80037f8:	bfa4      	itt	ge
 80037fa:	f021 0104 	bicge.w	r1, r1, #4
 80037fe:	6021      	strge	r1, [r4, #0]
 8003800:	b90d      	cbnz	r5, 8003806 <_printf_i+0x11a>
 8003802:	2e00      	cmp	r6, #0
 8003804:	d04d      	beq.n	80038a2 <_printf_i+0x1b6>
 8003806:	4616      	mov	r6, r2
 8003808:	fbb5 f1f3 	udiv	r1, r5, r3
 800380c:	fb03 5711 	mls	r7, r3, r1, r5
 8003810:	5dc7      	ldrb	r7, [r0, r7]
 8003812:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8003816:	462f      	mov	r7, r5
 8003818:	42bb      	cmp	r3, r7
 800381a:	460d      	mov	r5, r1
 800381c:	d9f4      	bls.n	8003808 <_printf_i+0x11c>
 800381e:	2b08      	cmp	r3, #8
 8003820:	d10b      	bne.n	800383a <_printf_i+0x14e>
 8003822:	6823      	ldr	r3, [r4, #0]
 8003824:	07df      	lsls	r7, r3, #31
 8003826:	d508      	bpl.n	800383a <_printf_i+0x14e>
 8003828:	6923      	ldr	r3, [r4, #16]
 800382a:	6861      	ldr	r1, [r4, #4]
 800382c:	4299      	cmp	r1, r3
 800382e:	bfde      	ittt	le
 8003830:	2330      	movle	r3, #48	; 0x30
 8003832:	f806 3c01 	strble.w	r3, [r6, #-1]
 8003836:	f106 36ff 	addle.w	r6, r6, #4294967295
 800383a:	1b92      	subs	r2, r2, r6
 800383c:	6122      	str	r2, [r4, #16]
 800383e:	464b      	mov	r3, r9
 8003840:	4621      	mov	r1, r4
 8003842:	4640      	mov	r0, r8
 8003844:	f8cd a000 	str.w	sl, [sp]
 8003848:	aa03      	add	r2, sp, #12
 800384a:	f7ff fedf 	bl	800360c <_printf_common>
 800384e:	3001      	adds	r0, #1
 8003850:	d14c      	bne.n	80038ec <_printf_i+0x200>
 8003852:	f04f 30ff 	mov.w	r0, #4294967295
 8003856:	b004      	add	sp, #16
 8003858:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800385c:	4834      	ldr	r0, [pc, #208]	; (8003930 <_printf_i+0x244>)
 800385e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8003862:	680e      	ldr	r6, [r1, #0]
 8003864:	6823      	ldr	r3, [r4, #0]
 8003866:	f856 5b04 	ldr.w	r5, [r6], #4
 800386a:	061f      	lsls	r7, r3, #24
 800386c:	600e      	str	r6, [r1, #0]
 800386e:	d514      	bpl.n	800389a <_printf_i+0x1ae>
 8003870:	07d9      	lsls	r1, r3, #31
 8003872:	bf44      	itt	mi
 8003874:	f043 0320 	orrmi.w	r3, r3, #32
 8003878:	6023      	strmi	r3, [r4, #0]
 800387a:	b91d      	cbnz	r5, 8003884 <_printf_i+0x198>
 800387c:	6823      	ldr	r3, [r4, #0]
 800387e:	f023 0320 	bic.w	r3, r3, #32
 8003882:	6023      	str	r3, [r4, #0]
 8003884:	2310      	movs	r3, #16
 8003886:	e7af      	b.n	80037e8 <_printf_i+0xfc>
 8003888:	6823      	ldr	r3, [r4, #0]
 800388a:	f043 0320 	orr.w	r3, r3, #32
 800388e:	6023      	str	r3, [r4, #0]
 8003890:	2378      	movs	r3, #120	; 0x78
 8003892:	4828      	ldr	r0, [pc, #160]	; (8003934 <_printf_i+0x248>)
 8003894:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003898:	e7e3      	b.n	8003862 <_printf_i+0x176>
 800389a:	065e      	lsls	r6, r3, #25
 800389c:	bf48      	it	mi
 800389e:	b2ad      	uxthmi	r5, r5
 80038a0:	e7e6      	b.n	8003870 <_printf_i+0x184>
 80038a2:	4616      	mov	r6, r2
 80038a4:	e7bb      	b.n	800381e <_printf_i+0x132>
 80038a6:	680b      	ldr	r3, [r1, #0]
 80038a8:	6826      	ldr	r6, [r4, #0]
 80038aa:	1d1d      	adds	r5, r3, #4
 80038ac:	6960      	ldr	r0, [r4, #20]
 80038ae:	600d      	str	r5, [r1, #0]
 80038b0:	0635      	lsls	r5, r6, #24
 80038b2:	681b      	ldr	r3, [r3, #0]
 80038b4:	d501      	bpl.n	80038ba <_printf_i+0x1ce>
 80038b6:	6018      	str	r0, [r3, #0]
 80038b8:	e002      	b.n	80038c0 <_printf_i+0x1d4>
 80038ba:	0671      	lsls	r1, r6, #25
 80038bc:	d5fb      	bpl.n	80038b6 <_printf_i+0x1ca>
 80038be:	8018      	strh	r0, [r3, #0]
 80038c0:	2300      	movs	r3, #0
 80038c2:	4616      	mov	r6, r2
 80038c4:	6123      	str	r3, [r4, #16]
 80038c6:	e7ba      	b.n	800383e <_printf_i+0x152>
 80038c8:	680b      	ldr	r3, [r1, #0]
 80038ca:	1d1a      	adds	r2, r3, #4
 80038cc:	600a      	str	r2, [r1, #0]
 80038ce:	681e      	ldr	r6, [r3, #0]
 80038d0:	2100      	movs	r1, #0
 80038d2:	4630      	mov	r0, r6
 80038d4:	6862      	ldr	r2, [r4, #4]
 80038d6:	f000 f82f 	bl	8003938 <memchr>
 80038da:	b108      	cbz	r0, 80038e0 <_printf_i+0x1f4>
 80038dc:	1b80      	subs	r0, r0, r6
 80038de:	6060      	str	r0, [r4, #4]
 80038e0:	6863      	ldr	r3, [r4, #4]
 80038e2:	6123      	str	r3, [r4, #16]
 80038e4:	2300      	movs	r3, #0
 80038e6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80038ea:	e7a8      	b.n	800383e <_printf_i+0x152>
 80038ec:	4632      	mov	r2, r6
 80038ee:	4649      	mov	r1, r9
 80038f0:	4640      	mov	r0, r8
 80038f2:	6923      	ldr	r3, [r4, #16]
 80038f4:	47d0      	blx	sl
 80038f6:	3001      	adds	r0, #1
 80038f8:	d0ab      	beq.n	8003852 <_printf_i+0x166>
 80038fa:	6823      	ldr	r3, [r4, #0]
 80038fc:	079b      	lsls	r3, r3, #30
 80038fe:	d413      	bmi.n	8003928 <_printf_i+0x23c>
 8003900:	68e0      	ldr	r0, [r4, #12]
 8003902:	9b03      	ldr	r3, [sp, #12]
 8003904:	4298      	cmp	r0, r3
 8003906:	bfb8      	it	lt
 8003908:	4618      	movlt	r0, r3
 800390a:	e7a4      	b.n	8003856 <_printf_i+0x16a>
 800390c:	2301      	movs	r3, #1
 800390e:	4632      	mov	r2, r6
 8003910:	4649      	mov	r1, r9
 8003912:	4640      	mov	r0, r8
 8003914:	47d0      	blx	sl
 8003916:	3001      	adds	r0, #1
 8003918:	d09b      	beq.n	8003852 <_printf_i+0x166>
 800391a:	3501      	adds	r5, #1
 800391c:	68e3      	ldr	r3, [r4, #12]
 800391e:	9903      	ldr	r1, [sp, #12]
 8003920:	1a5b      	subs	r3, r3, r1
 8003922:	42ab      	cmp	r3, r5
 8003924:	dcf2      	bgt.n	800390c <_printf_i+0x220>
 8003926:	e7eb      	b.n	8003900 <_printf_i+0x214>
 8003928:	2500      	movs	r5, #0
 800392a:	f104 0619 	add.w	r6, r4, #25
 800392e:	e7f5      	b.n	800391c <_printf_i+0x230>
 8003930:	08003beb 	.word	0x08003beb
 8003934:	08003bfc 	.word	0x08003bfc

08003938 <memchr>:
 8003938:	4603      	mov	r3, r0
 800393a:	b510      	push	{r4, lr}
 800393c:	b2c9      	uxtb	r1, r1
 800393e:	4402      	add	r2, r0
 8003940:	4293      	cmp	r3, r2
 8003942:	4618      	mov	r0, r3
 8003944:	d101      	bne.n	800394a <memchr+0x12>
 8003946:	2000      	movs	r0, #0
 8003948:	e003      	b.n	8003952 <memchr+0x1a>
 800394a:	7804      	ldrb	r4, [r0, #0]
 800394c:	3301      	adds	r3, #1
 800394e:	428c      	cmp	r4, r1
 8003950:	d1f6      	bne.n	8003940 <memchr+0x8>
 8003952:	bd10      	pop	{r4, pc}

08003954 <memcpy>:
 8003954:	440a      	add	r2, r1
 8003956:	4291      	cmp	r1, r2
 8003958:	f100 33ff 	add.w	r3, r0, #4294967295
 800395c:	d100      	bne.n	8003960 <memcpy+0xc>
 800395e:	4770      	bx	lr
 8003960:	b510      	push	{r4, lr}
 8003962:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003966:	4291      	cmp	r1, r2
 8003968:	f803 4f01 	strb.w	r4, [r3, #1]!
 800396c:	d1f9      	bne.n	8003962 <memcpy+0xe>
 800396e:	bd10      	pop	{r4, pc}

08003970 <memmove>:
 8003970:	4288      	cmp	r0, r1
 8003972:	b510      	push	{r4, lr}
 8003974:	eb01 0402 	add.w	r4, r1, r2
 8003978:	d902      	bls.n	8003980 <memmove+0x10>
 800397a:	4284      	cmp	r4, r0
 800397c:	4623      	mov	r3, r4
 800397e:	d807      	bhi.n	8003990 <memmove+0x20>
 8003980:	1e43      	subs	r3, r0, #1
 8003982:	42a1      	cmp	r1, r4
 8003984:	d008      	beq.n	8003998 <memmove+0x28>
 8003986:	f811 2b01 	ldrb.w	r2, [r1], #1
 800398a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800398e:	e7f8      	b.n	8003982 <memmove+0x12>
 8003990:	4601      	mov	r1, r0
 8003992:	4402      	add	r2, r0
 8003994:	428a      	cmp	r2, r1
 8003996:	d100      	bne.n	800399a <memmove+0x2a>
 8003998:	bd10      	pop	{r4, pc}
 800399a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800399e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80039a2:	e7f7      	b.n	8003994 <memmove+0x24>

080039a4 <_free_r>:
 80039a4:	b538      	push	{r3, r4, r5, lr}
 80039a6:	4605      	mov	r5, r0
 80039a8:	2900      	cmp	r1, #0
 80039aa:	d043      	beq.n	8003a34 <_free_r+0x90>
 80039ac:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80039b0:	1f0c      	subs	r4, r1, #4
 80039b2:	2b00      	cmp	r3, #0
 80039b4:	bfb8      	it	lt
 80039b6:	18e4      	addlt	r4, r4, r3
 80039b8:	f000 f8d0 	bl	8003b5c <__malloc_lock>
 80039bc:	4a1e      	ldr	r2, [pc, #120]	; (8003a38 <_free_r+0x94>)
 80039be:	6813      	ldr	r3, [r2, #0]
 80039c0:	4610      	mov	r0, r2
 80039c2:	b933      	cbnz	r3, 80039d2 <_free_r+0x2e>
 80039c4:	6063      	str	r3, [r4, #4]
 80039c6:	6014      	str	r4, [r2, #0]
 80039c8:	4628      	mov	r0, r5
 80039ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80039ce:	f000 b8cb 	b.w	8003b68 <__malloc_unlock>
 80039d2:	42a3      	cmp	r3, r4
 80039d4:	d90a      	bls.n	80039ec <_free_r+0x48>
 80039d6:	6821      	ldr	r1, [r4, #0]
 80039d8:	1862      	adds	r2, r4, r1
 80039da:	4293      	cmp	r3, r2
 80039dc:	bf01      	itttt	eq
 80039de:	681a      	ldreq	r2, [r3, #0]
 80039e0:	685b      	ldreq	r3, [r3, #4]
 80039e2:	1852      	addeq	r2, r2, r1
 80039e4:	6022      	streq	r2, [r4, #0]
 80039e6:	6063      	str	r3, [r4, #4]
 80039e8:	6004      	str	r4, [r0, #0]
 80039ea:	e7ed      	b.n	80039c8 <_free_r+0x24>
 80039ec:	461a      	mov	r2, r3
 80039ee:	685b      	ldr	r3, [r3, #4]
 80039f0:	b10b      	cbz	r3, 80039f6 <_free_r+0x52>
 80039f2:	42a3      	cmp	r3, r4
 80039f4:	d9fa      	bls.n	80039ec <_free_r+0x48>
 80039f6:	6811      	ldr	r1, [r2, #0]
 80039f8:	1850      	adds	r0, r2, r1
 80039fa:	42a0      	cmp	r0, r4
 80039fc:	d10b      	bne.n	8003a16 <_free_r+0x72>
 80039fe:	6820      	ldr	r0, [r4, #0]
 8003a00:	4401      	add	r1, r0
 8003a02:	1850      	adds	r0, r2, r1
 8003a04:	4283      	cmp	r3, r0
 8003a06:	6011      	str	r1, [r2, #0]
 8003a08:	d1de      	bne.n	80039c8 <_free_r+0x24>
 8003a0a:	6818      	ldr	r0, [r3, #0]
 8003a0c:	685b      	ldr	r3, [r3, #4]
 8003a0e:	4401      	add	r1, r0
 8003a10:	6011      	str	r1, [r2, #0]
 8003a12:	6053      	str	r3, [r2, #4]
 8003a14:	e7d8      	b.n	80039c8 <_free_r+0x24>
 8003a16:	d902      	bls.n	8003a1e <_free_r+0x7a>
 8003a18:	230c      	movs	r3, #12
 8003a1a:	602b      	str	r3, [r5, #0]
 8003a1c:	e7d4      	b.n	80039c8 <_free_r+0x24>
 8003a1e:	6820      	ldr	r0, [r4, #0]
 8003a20:	1821      	adds	r1, r4, r0
 8003a22:	428b      	cmp	r3, r1
 8003a24:	bf01      	itttt	eq
 8003a26:	6819      	ldreq	r1, [r3, #0]
 8003a28:	685b      	ldreq	r3, [r3, #4]
 8003a2a:	1809      	addeq	r1, r1, r0
 8003a2c:	6021      	streq	r1, [r4, #0]
 8003a2e:	6063      	str	r3, [r4, #4]
 8003a30:	6054      	str	r4, [r2, #4]
 8003a32:	e7c9      	b.n	80039c8 <_free_r+0x24>
 8003a34:	bd38      	pop	{r3, r4, r5, pc}
 8003a36:	bf00      	nop
 8003a38:	20000114 	.word	0x20000114

08003a3c <_malloc_r>:
 8003a3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003a3e:	1ccd      	adds	r5, r1, #3
 8003a40:	f025 0503 	bic.w	r5, r5, #3
 8003a44:	3508      	adds	r5, #8
 8003a46:	2d0c      	cmp	r5, #12
 8003a48:	bf38      	it	cc
 8003a4a:	250c      	movcc	r5, #12
 8003a4c:	2d00      	cmp	r5, #0
 8003a4e:	4606      	mov	r6, r0
 8003a50:	db01      	blt.n	8003a56 <_malloc_r+0x1a>
 8003a52:	42a9      	cmp	r1, r5
 8003a54:	d903      	bls.n	8003a5e <_malloc_r+0x22>
 8003a56:	230c      	movs	r3, #12
 8003a58:	6033      	str	r3, [r6, #0]
 8003a5a:	2000      	movs	r0, #0
 8003a5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003a5e:	f000 f87d 	bl	8003b5c <__malloc_lock>
 8003a62:	4921      	ldr	r1, [pc, #132]	; (8003ae8 <_malloc_r+0xac>)
 8003a64:	680a      	ldr	r2, [r1, #0]
 8003a66:	4614      	mov	r4, r2
 8003a68:	b99c      	cbnz	r4, 8003a92 <_malloc_r+0x56>
 8003a6a:	4f20      	ldr	r7, [pc, #128]	; (8003aec <_malloc_r+0xb0>)
 8003a6c:	683b      	ldr	r3, [r7, #0]
 8003a6e:	b923      	cbnz	r3, 8003a7a <_malloc_r+0x3e>
 8003a70:	4621      	mov	r1, r4
 8003a72:	4630      	mov	r0, r6
 8003a74:	f000 f862 	bl	8003b3c <_sbrk_r>
 8003a78:	6038      	str	r0, [r7, #0]
 8003a7a:	4629      	mov	r1, r5
 8003a7c:	4630      	mov	r0, r6
 8003a7e:	f000 f85d 	bl	8003b3c <_sbrk_r>
 8003a82:	1c43      	adds	r3, r0, #1
 8003a84:	d123      	bne.n	8003ace <_malloc_r+0x92>
 8003a86:	230c      	movs	r3, #12
 8003a88:	4630      	mov	r0, r6
 8003a8a:	6033      	str	r3, [r6, #0]
 8003a8c:	f000 f86c 	bl	8003b68 <__malloc_unlock>
 8003a90:	e7e3      	b.n	8003a5a <_malloc_r+0x1e>
 8003a92:	6823      	ldr	r3, [r4, #0]
 8003a94:	1b5b      	subs	r3, r3, r5
 8003a96:	d417      	bmi.n	8003ac8 <_malloc_r+0x8c>
 8003a98:	2b0b      	cmp	r3, #11
 8003a9a:	d903      	bls.n	8003aa4 <_malloc_r+0x68>
 8003a9c:	6023      	str	r3, [r4, #0]
 8003a9e:	441c      	add	r4, r3
 8003aa0:	6025      	str	r5, [r4, #0]
 8003aa2:	e004      	b.n	8003aae <_malloc_r+0x72>
 8003aa4:	6863      	ldr	r3, [r4, #4]
 8003aa6:	42a2      	cmp	r2, r4
 8003aa8:	bf0c      	ite	eq
 8003aaa:	600b      	streq	r3, [r1, #0]
 8003aac:	6053      	strne	r3, [r2, #4]
 8003aae:	4630      	mov	r0, r6
 8003ab0:	f000 f85a 	bl	8003b68 <__malloc_unlock>
 8003ab4:	f104 000b 	add.w	r0, r4, #11
 8003ab8:	1d23      	adds	r3, r4, #4
 8003aba:	f020 0007 	bic.w	r0, r0, #7
 8003abe:	1ac2      	subs	r2, r0, r3
 8003ac0:	d0cc      	beq.n	8003a5c <_malloc_r+0x20>
 8003ac2:	1a1b      	subs	r3, r3, r0
 8003ac4:	50a3      	str	r3, [r4, r2]
 8003ac6:	e7c9      	b.n	8003a5c <_malloc_r+0x20>
 8003ac8:	4622      	mov	r2, r4
 8003aca:	6864      	ldr	r4, [r4, #4]
 8003acc:	e7cc      	b.n	8003a68 <_malloc_r+0x2c>
 8003ace:	1cc4      	adds	r4, r0, #3
 8003ad0:	f024 0403 	bic.w	r4, r4, #3
 8003ad4:	42a0      	cmp	r0, r4
 8003ad6:	d0e3      	beq.n	8003aa0 <_malloc_r+0x64>
 8003ad8:	1a21      	subs	r1, r4, r0
 8003ada:	4630      	mov	r0, r6
 8003adc:	f000 f82e 	bl	8003b3c <_sbrk_r>
 8003ae0:	3001      	adds	r0, #1
 8003ae2:	d1dd      	bne.n	8003aa0 <_malloc_r+0x64>
 8003ae4:	e7cf      	b.n	8003a86 <_malloc_r+0x4a>
 8003ae6:	bf00      	nop
 8003ae8:	20000114 	.word	0x20000114
 8003aec:	20000118 	.word	0x20000118

08003af0 <_realloc_r>:
 8003af0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003af2:	4607      	mov	r7, r0
 8003af4:	4614      	mov	r4, r2
 8003af6:	460e      	mov	r6, r1
 8003af8:	b921      	cbnz	r1, 8003b04 <_realloc_r+0x14>
 8003afa:	4611      	mov	r1, r2
 8003afc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003b00:	f7ff bf9c 	b.w	8003a3c <_malloc_r>
 8003b04:	b922      	cbnz	r2, 8003b10 <_realloc_r+0x20>
 8003b06:	f7ff ff4d 	bl	80039a4 <_free_r>
 8003b0a:	4625      	mov	r5, r4
 8003b0c:	4628      	mov	r0, r5
 8003b0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003b10:	f000 f830 	bl	8003b74 <_malloc_usable_size_r>
 8003b14:	42a0      	cmp	r0, r4
 8003b16:	d20f      	bcs.n	8003b38 <_realloc_r+0x48>
 8003b18:	4621      	mov	r1, r4
 8003b1a:	4638      	mov	r0, r7
 8003b1c:	f7ff ff8e 	bl	8003a3c <_malloc_r>
 8003b20:	4605      	mov	r5, r0
 8003b22:	2800      	cmp	r0, #0
 8003b24:	d0f2      	beq.n	8003b0c <_realloc_r+0x1c>
 8003b26:	4631      	mov	r1, r6
 8003b28:	4622      	mov	r2, r4
 8003b2a:	f7ff ff13 	bl	8003954 <memcpy>
 8003b2e:	4631      	mov	r1, r6
 8003b30:	4638      	mov	r0, r7
 8003b32:	f7ff ff37 	bl	80039a4 <_free_r>
 8003b36:	e7e9      	b.n	8003b0c <_realloc_r+0x1c>
 8003b38:	4635      	mov	r5, r6
 8003b3a:	e7e7      	b.n	8003b0c <_realloc_r+0x1c>

08003b3c <_sbrk_r>:
 8003b3c:	b538      	push	{r3, r4, r5, lr}
 8003b3e:	2300      	movs	r3, #0
 8003b40:	4d05      	ldr	r5, [pc, #20]	; (8003b58 <_sbrk_r+0x1c>)
 8003b42:	4604      	mov	r4, r0
 8003b44:	4608      	mov	r0, r1
 8003b46:	602b      	str	r3, [r5, #0]
 8003b48:	f7fd fa04 	bl	8000f54 <_sbrk>
 8003b4c:	1c43      	adds	r3, r0, #1
 8003b4e:	d102      	bne.n	8003b56 <_sbrk_r+0x1a>
 8003b50:	682b      	ldr	r3, [r5, #0]
 8003b52:	b103      	cbz	r3, 8003b56 <_sbrk_r+0x1a>
 8003b54:	6023      	str	r3, [r4, #0]
 8003b56:	bd38      	pop	{r3, r4, r5, pc}
 8003b58:	20000218 	.word	0x20000218

08003b5c <__malloc_lock>:
 8003b5c:	4801      	ldr	r0, [pc, #4]	; (8003b64 <__malloc_lock+0x8>)
 8003b5e:	f000 b811 	b.w	8003b84 <__retarget_lock_acquire_recursive>
 8003b62:	bf00      	nop
 8003b64:	20000220 	.word	0x20000220

08003b68 <__malloc_unlock>:
 8003b68:	4801      	ldr	r0, [pc, #4]	; (8003b70 <__malloc_unlock+0x8>)
 8003b6a:	f000 b80c 	b.w	8003b86 <__retarget_lock_release_recursive>
 8003b6e:	bf00      	nop
 8003b70:	20000220 	.word	0x20000220

08003b74 <_malloc_usable_size_r>:
 8003b74:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003b78:	1f18      	subs	r0, r3, #4
 8003b7a:	2b00      	cmp	r3, #0
 8003b7c:	bfbc      	itt	lt
 8003b7e:	580b      	ldrlt	r3, [r1, r0]
 8003b80:	18c0      	addlt	r0, r0, r3
 8003b82:	4770      	bx	lr

08003b84 <__retarget_lock_acquire_recursive>:
 8003b84:	4770      	bx	lr

08003b86 <__retarget_lock_release_recursive>:
 8003b86:	4770      	bx	lr

08003b88 <_init>:
 8003b88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003b8a:	bf00      	nop
 8003b8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003b8e:	bc08      	pop	{r3}
 8003b90:	469e      	mov	lr, r3
 8003b92:	4770      	bx	lr

08003b94 <_fini>:
 8003b94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003b96:	bf00      	nop
 8003b98:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003b9a:	bc08      	pop	{r3}
 8003b9c:	469e      	mov	lr, r3
 8003b9e:	4770      	bx	lr
